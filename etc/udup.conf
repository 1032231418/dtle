# Increase log verbosity
log_level = "DEBUG"
log_file = ""
#log_file = "C://Users//workspace//src//udup//dist/udup.log"

# Setup data dir
#data_dir = "/opt/udup/data"
data_dir = "C://Users//workspace//src//udup//dist"

bind_addr = "127.0.0.1"

# Modify our port to avoid a collision with server1
ports {
    http = 8190
}

addresses {
	http = "127.0.0.1"
	rpc = "127.0.0.1"
	serf = "127.0.0.1"
}

# Advertise must be set to a non-loopback address.
# Defaults to the resolving the local hostname.
advertise {
    http = "127.0.0.1"
    rpc  = "127.0.0.1"
    serf = "127.0.0.1"
}

# Enable the server
server {
    enabled = true

    # Self-elect, should be 3 or 5 for production
    bootstrap_expect = 1

    heartbeat_grace   = "30s"
    retry_join = [ "127.0.0.1" ]
    start_join = [ "127.0.0.1" ]
    retry_max = 3
    retry_interval = "15s"
}

# Enable the client
client {
    enabled = true
    #state_dir = "/opt/udup/data/client-state"
    state_dir = "C://Users//workspace//src//udup//dist//client-state"

    # For demo assume we are talking to server1. For production,
    # this should be like "udup.service.consul:8191" and a system
    # like Consul used for service discovery.
    servers = ["127.0.0.1:8191"]
}

# Nats options
nats {
    address = "127.0.0.1:8193"
    store_type = "memory" # Possible values are file or memory (case insensitive)
    file_store_dir = ""
}

consul {
    server_service_name = "udup"
    client_service_name = "udup-client"
    #address = "192.168.99.100:8500"
    server_auto_join = true
    client_auto_join = true
    auto_advertise = true
    checks_use_advertise = true
}

#metric {
	#datadog_address = "127.0.0.100:32772"
	#statsite_address = "127.0.0.1:1234"
	#statsd_address = "127.0.0.1:2345"
	#disable_hostname = true
    #collection_interval = "3s"
    #publish_allocation_metrics = true
    #publish_node_metrics = true
#}