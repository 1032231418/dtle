// ************************************************************
// DO NOT EDIT.
// THIS FILE IS AUTO-GENERATED BY codecgen.
// ************************************************************

package structs

import (
	"errors"
	"fmt"
	"reflect"
	"runtime"
	time "time"
	codec1978 "github.com/ugorji/go/codec"
)

const (
	// ----- content types ----
	codecSelferC_UTF84362 = 1
	codecSelferC_RAW4362  = 0
	// ----- value types used ----
	codecSelferValueTypeArray4362 = 10
	codecSelferValueTypeMap4362   = 9
	// ----- containerStateValues ----
	codecSelfer_containerMapKey4362    = 2
	codecSelfer_containerMapValue4362  = 3
	codecSelfer_containerMapEnd4362    = 4
	codecSelfer_containerArrayElem4362 = 6
	codecSelfer_containerArrayEnd4362  = 7
)

var (
	codecSelferBitsize4362                         = uint8(reflect.TypeOf(uint(0)).Bits())
	codecSelferOnlyMapOrArrayEncodeToStructErr4362 = errors.New(`only encoded map or array can be decoded into a struct`)
)

type codecSelfer4362 struct{}

func init() {
	if codec1978.GenVersion != 5 {
		_, file, _, _ := runtime.Caller(0)
		err := fmt.Errorf("codecgen version mismatch: current: %v, need %v. Re-generate file: %v",
			5, codec1978.GenVersion, file)
		panic(err)
	}
	if false { // reference the types, but skip this branch at build/run time
		var v0 time.Duration
		_ = v0
	}
}

func (x MessageType) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	yym1 := z.EncBinary()
	_ = yym1
	if false {
	} else if z.HasExtensions() && z.EncExt(x) {
	} else {
		r.EncodeUint(uint64(x))
	}
}

func (x *MessageType) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2 := z.DecBinary()
	_ = yym2
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		*((*uint8)(x)) = uint8(r.DecodeUint(8))
	}
}

func (x *QueryOptions) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym3 := z.EncBinary()
		_ = yym3
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep4 := !z.EncBinary()
			yy2arr4 := z.EncBasicHandle().StructToArray
			var yyq4 [5]bool
			_, _, _ = yysep4, yyq4, yy2arr4
			const yyr4 bool = false
			var yynn4 int
			if yyr4 || yy2arr4 {
				r.EncodeArrayStart(5)
			} else {
				yynn4 = 5
				for _, b := range yyq4 {
					if b {
						yynn4++
					}
				}
				r.EncodeMapStart(yynn4)
				yynn4 = 0
			}
			if yyr4 || yy2arr4 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym6 := z.EncBinary()
				_ = yym6
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym7 := z.EncBinary()
				_ = yym7
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr4 || yy2arr4 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym9 := z.EncBinary()
				_ = yym9
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MinQueryIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym10 := z.EncBinary()
				_ = yym10
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			}
			if yyr4 || yy2arr4 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym12 := z.EncBinary()
				_ = yym12
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MaxQueryTime"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym13 := z.EncBinary()
				_ = yym13
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			}
			if yyr4 || yy2arr4 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym15 := z.EncBinary()
				_ = yym15
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllowStale"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym16 := z.EncBinary()
				_ = yym16
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			}
			if yyr4 || yy2arr4 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym18 := z.EncBinary()
				_ = yym18
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Prefix"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym19 := z.EncBinary()
				_ = yym19
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			}
			if yyr4 || yy2arr4 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *QueryOptions) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym20 := z.DecBinary()
	_ = yym20
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct21 := r.ContainerType()
		if yyct21 == codecSelferValueTypeMap4362 {
			yyl21 := r.ReadMapStart()
			if yyl21 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl21, d)
			}
		} else if yyct21 == codecSelferValueTypeArray4362 {
			yyl21 := r.ReadArrayStart()
			if yyl21 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl21, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *QueryOptions) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys22Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys22Slc
	var yyhl22 bool = l >= 0
	for yyj22 := 0; ; yyj22++ {
		if yyhl22 {
			if yyj22 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys22Slc = r.DecodeBytes(yys22Slc, true, true)
		yys22 := string(yys22Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys22 {
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		case "MinQueryIndex":
			if r.TryDecodeAsNil() {
				x.MinQueryIndex = 0
			} else {
				x.MinQueryIndex = uint64(r.DecodeUint(64))
			}
		case "MaxQueryTime":
			if r.TryDecodeAsNil() {
				x.MaxQueryTime = 0
			} else {
				x.MaxQueryTime = time.Duration(r.DecodeInt(64))
			}
		case "AllowStale":
			if r.TryDecodeAsNil() {
				x.AllowStale = false
			} else {
				x.AllowStale = bool(r.DecodeBool())
			}
		case "Prefix":
			if r.TryDecodeAsNil() {
				x.Prefix = ""
			} else {
				x.Prefix = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys22)
		} // end switch yys22
	} // end for yyj22
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *QueryOptions) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj28 int
	var yyb28 bool
	var yyhl28 bool = l >= 0
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MinQueryIndex = 0
	} else {
		x.MinQueryIndex = uint64(r.DecodeUint(64))
	}
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MaxQueryTime = 0
	} else {
		x.MaxQueryTime = time.Duration(r.DecodeInt(64))
	}
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllowStale = false
	} else {
		x.AllowStale = bool(r.DecodeBool())
	}
	yyj28++
	if yyhl28 {
		yyb28 = yyj28 > l
	} else {
		yyb28 = r.CheckBreak()
	}
	if yyb28 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Prefix = ""
	} else {
		x.Prefix = string(r.DecodeString())
	}
	for {
		yyj28++
		if yyhl28 {
			yyb28 = yyj28 > l
		} else {
			yyb28 = r.CheckBreak()
		}
		if yyb28 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj28-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *WriteRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym34 := z.EncBinary()
		_ = yym34
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep35 := !z.EncBinary()
			yy2arr35 := z.EncBasicHandle().StructToArray
			var yyq35 [1]bool
			_, _, _ = yysep35, yyq35, yy2arr35
			const yyr35 bool = false
			var yynn35 int
			if yyr35 || yy2arr35 {
				r.EncodeArrayStart(1)
			} else {
				yynn35 = 1
				for _, b := range yyq35 {
					if b {
						yynn35++
					}
				}
				r.EncodeMapStart(yynn35)
				yynn35 = 0
			}
			if yyr35 || yy2arr35 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym37 := z.EncBinary()
				_ = yym37
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym38 := z.EncBinary()
				_ = yym38
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr35 || yy2arr35 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *WriteRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym39 := z.DecBinary()
	_ = yym39
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct40 := r.ContainerType()
		if yyct40 == codecSelferValueTypeMap4362 {
			yyl40 := r.ReadMapStart()
			if yyl40 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl40, d)
			}
		} else if yyct40 == codecSelferValueTypeArray4362 {
			yyl40 := r.ReadArrayStart()
			if yyl40 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl40, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *WriteRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys41Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys41Slc
	var yyhl41 bool = l >= 0
	for yyj41 := 0; ; yyj41++ {
		if yyhl41 {
			if yyj41 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys41Slc = r.DecodeBytes(yys41Slc, true, true)
		yys41 := string(yys41Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys41 {
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys41)
		} // end switch yys41
	} // end for yyj41
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *WriteRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj43 int
	var yyb43 bool
	var yyhl43 bool = l >= 0
	yyj43++
	if yyhl43 {
		yyb43 = yyj43 > l
	} else {
		yyb43 = r.CheckBreak()
	}
	if yyb43 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj43++
		if yyhl43 {
			yyb43 = yyj43 > l
		} else {
			yyb43 = r.CheckBreak()
		}
		if yyb43 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj43-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *QueryMeta) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym45 := z.EncBinary()
		_ = yym45
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep46 := !z.EncBinary()
			yy2arr46 := z.EncBasicHandle().StructToArray
			var yyq46 [3]bool
			_, _, _ = yysep46, yyq46, yy2arr46
			const yyr46 bool = false
			var yynn46 int
			if yyr46 || yy2arr46 {
				r.EncodeArrayStart(3)
			} else {
				yynn46 = 3
				for _, b := range yyq46 {
					if b {
						yynn46++
					}
				}
				r.EncodeMapStart(yynn46)
				yynn46 = 0
			}
			if yyr46 || yy2arr46 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym48 := z.EncBinary()
				_ = yym48
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym49 := z.EncBinary()
				_ = yym49
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr46 || yy2arr46 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym51 := z.EncBinary()
				_ = yym51
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym52 := z.EncBinary()
				_ = yym52
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr46 || yy2arr46 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym54 := z.EncBinary()
				_ = yym54
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym55 := z.EncBinary()
				_ = yym55
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr46 || yy2arr46 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *QueryMeta) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym56 := z.DecBinary()
	_ = yym56
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct57 := r.ContainerType()
		if yyct57 == codecSelferValueTypeMap4362 {
			yyl57 := r.ReadMapStart()
			if yyl57 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl57, d)
			}
		} else if yyct57 == codecSelferValueTypeArray4362 {
			yyl57 := r.ReadArrayStart()
			if yyl57 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl57, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *QueryMeta) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys58Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys58Slc
	var yyhl58 bool = l >= 0
	for yyj58 := 0; ; yyj58++ {
		if yyhl58 {
			if yyj58 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys58Slc = r.DecodeBytes(yys58Slc, true, true)
		yys58 := string(yys58Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys58 {
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys58)
		} // end switch yys58
	} // end for yyj58
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *QueryMeta) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj62 int
	var yyb62 bool
	var yyhl62 bool = l >= 0
	yyj62++
	if yyhl62 {
		yyb62 = yyj62 > l
	} else {
		yyb62 = r.CheckBreak()
	}
	if yyb62 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj62++
	if yyhl62 {
		yyb62 = yyj62 > l
	} else {
		yyb62 = r.CheckBreak()
	}
	if yyb62 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj62++
	if yyhl62 {
		yyb62 = yyj62 > l
	} else {
		yyb62 = r.CheckBreak()
	}
	if yyb62 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj62++
		if yyhl62 {
			yyb62 = yyj62 > l
		} else {
			yyb62 = r.CheckBreak()
		}
		if yyb62 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj62-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *WriteMeta) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym66 := z.EncBinary()
		_ = yym66
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep67 := !z.EncBinary()
			yy2arr67 := z.EncBasicHandle().StructToArray
			var yyq67 [1]bool
			_, _, _ = yysep67, yyq67, yy2arr67
			const yyr67 bool = false
			var yynn67 int
			if yyr67 || yy2arr67 {
				r.EncodeArrayStart(1)
			} else {
				yynn67 = 1
				for _, b := range yyq67 {
					if b {
						yynn67++
					}
				}
				r.EncodeMapStart(yynn67)
				yynn67 = 0
			}
			if yyr67 || yy2arr67 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym69 := z.EncBinary()
				_ = yym69
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym70 := z.EncBinary()
				_ = yym70
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr67 || yy2arr67 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *WriteMeta) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym71 := z.DecBinary()
	_ = yym71
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct72 := r.ContainerType()
		if yyct72 == codecSelferValueTypeMap4362 {
			yyl72 := r.ReadMapStart()
			if yyl72 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl72, d)
			}
		} else if yyct72 == codecSelferValueTypeArray4362 {
			yyl72 := r.ReadArrayStart()
			if yyl72 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl72, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *WriteMeta) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys73Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys73Slc
	var yyhl73 bool = l >= 0
	for yyj73 := 0; ; yyj73++ {
		if yyhl73 {
			if yyj73 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys73Slc = r.DecodeBytes(yys73Slc, true, true)
		yys73 := string(yys73Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys73 {
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys73)
		} // end switch yys73
	} // end for yyj73
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *WriteMeta) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj75 int
	var yyb75 bool
	var yyhl75 bool = l >= 0
	yyj75++
	if yyhl75 {
		yyb75 = yyj75 > l
	} else {
		yyb75 = r.CheckBreak()
	}
	if yyb75 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	for {
		yyj75++
		if yyhl75 {
			yyb75 = yyj75 > l
		} else {
			yyb75 = r.CheckBreak()
		}
		if yyb75 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj75-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *NodeRegisterRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym77 := z.EncBinary()
		_ = yym77
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep78 := !z.EncBinary()
			yy2arr78 := z.EncBasicHandle().StructToArray
			var yyq78 [2]bool
			_, _, _ = yysep78, yyq78, yy2arr78
			const yyr78 bool = false
			var yynn78 int
			if yyr78 || yy2arr78 {
				r.EncodeArrayStart(2)
			} else {
				yynn78 = 2
				for _, b := range yyq78 {
					if b {
						yynn78++
					}
				}
				r.EncodeMapStart(yynn78)
				yynn78 = 0
			}
			if yyr78 || yy2arr78 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Node == nil {
					r.EncodeNil()
				} else {
					x.Node.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Node"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Node == nil {
					r.EncodeNil()
				} else {
					x.Node.CodecEncodeSelf(e)
				}
			}
			if yyr78 || yy2arr78 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym81 := z.EncBinary()
				_ = yym81
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym82 := z.EncBinary()
				_ = yym82
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr78 || yy2arr78 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *NodeRegisterRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym83 := z.DecBinary()
	_ = yym83
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct84 := r.ContainerType()
		if yyct84 == codecSelferValueTypeMap4362 {
			yyl84 := r.ReadMapStart()
			if yyl84 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl84, d)
			}
		} else if yyct84 == codecSelferValueTypeArray4362 {
			yyl84 := r.ReadArrayStart()
			if yyl84 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl84, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *NodeRegisterRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys85Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys85Slc
	var yyhl85 bool = l >= 0
	for yyj85 := 0; ; yyj85++ {
		if yyhl85 {
			if yyj85 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys85Slc = r.DecodeBytes(yys85Slc, true, true)
		yys85 := string(yys85Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys85 {
		case "Node":
			if r.TryDecodeAsNil() {
				if x.Node != nil {
					x.Node = nil
				}
			} else {
				if x.Node == nil {
					x.Node = new(Node)
				}
				x.Node.CodecDecodeSelf(d)
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys85)
		} // end switch yys85
	} // end for yyj85
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *NodeRegisterRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj88 int
	var yyb88 bool
	var yyhl88 bool = l >= 0
	yyj88++
	if yyhl88 {
		yyb88 = yyj88 > l
	} else {
		yyb88 = r.CheckBreak()
	}
	if yyb88 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Node != nil {
			x.Node = nil
		}
	} else {
		if x.Node == nil {
			x.Node = new(Node)
		}
		x.Node.CodecDecodeSelf(d)
	}
	yyj88++
	if yyhl88 {
		yyb88 = yyj88 > l
	} else {
		yyb88 = r.CheckBreak()
	}
	if yyb88 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj88++
		if yyhl88 {
			yyb88 = yyj88 > l
		} else {
			yyb88 = r.CheckBreak()
		}
		if yyb88 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj88-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *NodeDeregisterRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym91 := z.EncBinary()
		_ = yym91
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep92 := !z.EncBinary()
			yy2arr92 := z.EncBasicHandle().StructToArray
			var yyq92 [2]bool
			_, _, _ = yysep92, yyq92, yy2arr92
			const yyr92 bool = false
			var yynn92 int
			if yyr92 || yy2arr92 {
				r.EncodeArrayStart(2)
			} else {
				yynn92 = 2
				for _, b := range yyq92 {
					if b {
						yynn92++
					}
				}
				r.EncodeMapStart(yynn92)
				yynn92 = 0
			}
			if yyr92 || yy2arr92 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym94 := z.EncBinary()
				_ = yym94
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym95 := z.EncBinary()
				_ = yym95
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			}
			if yyr92 || yy2arr92 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym97 := z.EncBinary()
				_ = yym97
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym98 := z.EncBinary()
				_ = yym98
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr92 || yy2arr92 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *NodeDeregisterRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym99 := z.DecBinary()
	_ = yym99
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct100 := r.ContainerType()
		if yyct100 == codecSelferValueTypeMap4362 {
			yyl100 := r.ReadMapStart()
			if yyl100 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl100, d)
			}
		} else if yyct100 == codecSelferValueTypeArray4362 {
			yyl100 := r.ReadArrayStart()
			if yyl100 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl100, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *NodeDeregisterRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys101Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys101Slc
	var yyhl101 bool = l >= 0
	for yyj101 := 0; ; yyj101++ {
		if yyhl101 {
			if yyj101 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys101Slc = r.DecodeBytes(yys101Slc, true, true)
		yys101 := string(yys101Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys101 {
		case "NodeID":
			if r.TryDecodeAsNil() {
				x.NodeID = ""
			} else {
				x.NodeID = string(r.DecodeString())
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys101)
		} // end switch yys101
	} // end for yyj101
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *NodeDeregisterRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj104 int
	var yyb104 bool
	var yyhl104 bool = l >= 0
	yyj104++
	if yyhl104 {
		yyb104 = yyj104 > l
	} else {
		yyb104 = r.CheckBreak()
	}
	if yyb104 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeID = ""
	} else {
		x.NodeID = string(r.DecodeString())
	}
	yyj104++
	if yyhl104 {
		yyb104 = yyj104 > l
	} else {
		yyb104 = r.CheckBreak()
	}
	if yyb104 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj104++
		if yyhl104 {
			yyb104 = yyj104 > l
		} else {
			yyb104 = r.CheckBreak()
		}
		if yyb104 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj104-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *NodeServerInfo) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym107 := z.EncBinary()
		_ = yym107
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep108 := !z.EncBinary()
			yy2arr108 := z.EncBasicHandle().StructToArray
			var yyq108 [4]bool
			_, _, _ = yysep108, yyq108, yy2arr108
			const yyr108 bool = false
			var yynn108 int
			if yyr108 || yy2arr108 {
				r.EncodeArrayStart(4)
			} else {
				yynn108 = 4
				for _, b := range yyq108 {
					if b {
						yynn108++
					}
				}
				r.EncodeMapStart(yynn108)
				yynn108 = 0
			}
			if yyr108 || yy2arr108 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym110 := z.EncBinary()
				_ = yym110
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.RPCAdvertiseAddr))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("RPCAdvertiseAddr"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym111 := z.EncBinary()
				_ = yym111
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.RPCAdvertiseAddr))
				}
			}
			if yyr108 || yy2arr108 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym113 := z.EncBinary()
				_ = yym113
				if false {
				} else {
					r.EncodeInt(int64(x.RPCMajorVersion))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("RPCMajorVersion"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym114 := z.EncBinary()
				_ = yym114
				if false {
				} else {
					r.EncodeInt(int64(x.RPCMajorVersion))
				}
			}
			if yyr108 || yy2arr108 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym116 := z.EncBinary()
				_ = yym116
				if false {
				} else {
					r.EncodeInt(int64(x.RPCMinorVersion))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("RPCMinorVersion"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym117 := z.EncBinary()
				_ = yym117
				if false {
				} else {
					r.EncodeInt(int64(x.RPCMinorVersion))
				}
			}
			if yyr108 || yy2arr108 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym119 := z.EncBinary()
				_ = yym119
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Datacenter))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Datacenter"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym120 := z.EncBinary()
				_ = yym120
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Datacenter))
				}
			}
			if yyr108 || yy2arr108 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *NodeServerInfo) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym121 := z.DecBinary()
	_ = yym121
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct122 := r.ContainerType()
		if yyct122 == codecSelferValueTypeMap4362 {
			yyl122 := r.ReadMapStart()
			if yyl122 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl122, d)
			}
		} else if yyct122 == codecSelferValueTypeArray4362 {
			yyl122 := r.ReadArrayStart()
			if yyl122 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl122, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *NodeServerInfo) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys123Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys123Slc
	var yyhl123 bool = l >= 0
	for yyj123 := 0; ; yyj123++ {
		if yyhl123 {
			if yyj123 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys123Slc = r.DecodeBytes(yys123Slc, true, true)
		yys123 := string(yys123Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys123 {
		case "RPCAdvertiseAddr":
			if r.TryDecodeAsNil() {
				x.RPCAdvertiseAddr = ""
			} else {
				x.RPCAdvertiseAddr = string(r.DecodeString())
			}
		case "RPCMajorVersion":
			if r.TryDecodeAsNil() {
				x.RPCMajorVersion = 0
			} else {
				x.RPCMajorVersion = int32(r.DecodeInt(32))
			}
		case "RPCMinorVersion":
			if r.TryDecodeAsNil() {
				x.RPCMinorVersion = 0
			} else {
				x.RPCMinorVersion = int32(r.DecodeInt(32))
			}
		case "Datacenter":
			if r.TryDecodeAsNil() {
				x.Datacenter = ""
			} else {
				x.Datacenter = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys123)
		} // end switch yys123
	} // end for yyj123
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *NodeServerInfo) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj128 int
	var yyb128 bool
	var yyhl128 bool = l >= 0
	yyj128++
	if yyhl128 {
		yyb128 = yyj128 > l
	} else {
		yyb128 = r.CheckBreak()
	}
	if yyb128 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.RPCAdvertiseAddr = ""
	} else {
		x.RPCAdvertiseAddr = string(r.DecodeString())
	}
	yyj128++
	if yyhl128 {
		yyb128 = yyj128 > l
	} else {
		yyb128 = r.CheckBreak()
	}
	if yyb128 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.RPCMajorVersion = 0
	} else {
		x.RPCMajorVersion = int32(r.DecodeInt(32))
	}
	yyj128++
	if yyhl128 {
		yyb128 = yyj128 > l
	} else {
		yyb128 = r.CheckBreak()
	}
	if yyb128 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.RPCMinorVersion = 0
	} else {
		x.RPCMinorVersion = int32(r.DecodeInt(32))
	}
	yyj128++
	if yyhl128 {
		yyb128 = yyj128 > l
	} else {
		yyb128 = r.CheckBreak()
	}
	if yyb128 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Datacenter = ""
	} else {
		x.Datacenter = string(r.DecodeString())
	}
	for {
		yyj128++
		if yyhl128 {
			yyb128 = yyj128 > l
		} else {
			yyb128 = r.CheckBreak()
		}
		if yyb128 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj128-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *NodeUpdateStatusRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym133 := z.EncBinary()
		_ = yym133
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep134 := !z.EncBinary()
			yy2arr134 := z.EncBasicHandle().StructToArray
			var yyq134 [3]bool
			_, _, _ = yysep134, yyq134, yy2arr134
			const yyr134 bool = false
			var yynn134 int
			if yyr134 || yy2arr134 {
				r.EncodeArrayStart(3)
			} else {
				yynn134 = 3
				for _, b := range yyq134 {
					if b {
						yynn134++
					}
				}
				r.EncodeMapStart(yynn134)
				yynn134 = 0
			}
			if yyr134 || yy2arr134 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym136 := z.EncBinary()
				_ = yym136
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym137 := z.EncBinary()
				_ = yym137
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			}
			if yyr134 || yy2arr134 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym139 := z.EncBinary()
				_ = yym139
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Status))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Status"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym140 := z.EncBinary()
				_ = yym140
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Status))
				}
			}
			if yyr134 || yy2arr134 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym142 := z.EncBinary()
				_ = yym142
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym143 := z.EncBinary()
				_ = yym143
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr134 || yy2arr134 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *NodeUpdateStatusRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym144 := z.DecBinary()
	_ = yym144
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct145 := r.ContainerType()
		if yyct145 == codecSelferValueTypeMap4362 {
			yyl145 := r.ReadMapStart()
			if yyl145 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl145, d)
			}
		} else if yyct145 == codecSelferValueTypeArray4362 {
			yyl145 := r.ReadArrayStart()
			if yyl145 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl145, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *NodeUpdateStatusRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys146Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys146Slc
	var yyhl146 bool = l >= 0
	for yyj146 := 0; ; yyj146++ {
		if yyhl146 {
			if yyj146 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys146Slc = r.DecodeBytes(yys146Slc, true, true)
		yys146 := string(yys146Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys146 {
		case "NodeID":
			if r.TryDecodeAsNil() {
				x.NodeID = ""
			} else {
				x.NodeID = string(r.DecodeString())
			}
		case "Status":
			if r.TryDecodeAsNil() {
				x.Status = ""
			} else {
				x.Status = string(r.DecodeString())
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys146)
		} // end switch yys146
	} // end for yyj146
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *NodeUpdateStatusRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj150 int
	var yyb150 bool
	var yyhl150 bool = l >= 0
	yyj150++
	if yyhl150 {
		yyb150 = yyj150 > l
	} else {
		yyb150 = r.CheckBreak()
	}
	if yyb150 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeID = ""
	} else {
		x.NodeID = string(r.DecodeString())
	}
	yyj150++
	if yyhl150 {
		yyb150 = yyj150 > l
	} else {
		yyb150 = r.CheckBreak()
	}
	if yyb150 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Status = ""
	} else {
		x.Status = string(r.DecodeString())
	}
	yyj150++
	if yyhl150 {
		yyb150 = yyj150 > l
	} else {
		yyb150 = r.CheckBreak()
	}
	if yyb150 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj150++
		if yyhl150 {
			yyb150 = yyj150 > l
		} else {
			yyb150 = r.CheckBreak()
		}
		if yyb150 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj150-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *NodeUpdateDrainRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym154 := z.EncBinary()
		_ = yym154
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep155 := !z.EncBinary()
			yy2arr155 := z.EncBasicHandle().StructToArray
			var yyq155 [3]bool
			_, _, _ = yysep155, yyq155, yy2arr155
			const yyr155 bool = false
			var yynn155 int
			if yyr155 || yy2arr155 {
				r.EncodeArrayStart(3)
			} else {
				yynn155 = 3
				for _, b := range yyq155 {
					if b {
						yynn155++
					}
				}
				r.EncodeMapStart(yynn155)
				yynn155 = 0
			}
			if yyr155 || yy2arr155 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym157 := z.EncBinary()
				_ = yym157
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym158 := z.EncBinary()
				_ = yym158
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			}
			if yyr155 || yy2arr155 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym160 := z.EncBinary()
				_ = yym160
				if false {
				} else {
					r.EncodeBool(bool(x.Drain))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Drain"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym161 := z.EncBinary()
				_ = yym161
				if false {
				} else {
					r.EncodeBool(bool(x.Drain))
				}
			}
			if yyr155 || yy2arr155 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym163 := z.EncBinary()
				_ = yym163
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym164 := z.EncBinary()
				_ = yym164
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr155 || yy2arr155 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *NodeUpdateDrainRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym165 := z.DecBinary()
	_ = yym165
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct166 := r.ContainerType()
		if yyct166 == codecSelferValueTypeMap4362 {
			yyl166 := r.ReadMapStart()
			if yyl166 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl166, d)
			}
		} else if yyct166 == codecSelferValueTypeArray4362 {
			yyl166 := r.ReadArrayStart()
			if yyl166 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl166, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *NodeUpdateDrainRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys167Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys167Slc
	var yyhl167 bool = l >= 0
	for yyj167 := 0; ; yyj167++ {
		if yyhl167 {
			if yyj167 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys167Slc = r.DecodeBytes(yys167Slc, true, true)
		yys167 := string(yys167Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys167 {
		case "NodeID":
			if r.TryDecodeAsNil() {
				x.NodeID = ""
			} else {
				x.NodeID = string(r.DecodeString())
			}
		case "Drain":
			if r.TryDecodeAsNil() {
				x.Drain = false
			} else {
				x.Drain = bool(r.DecodeBool())
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys167)
		} // end switch yys167
	} // end for yyj167
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *NodeUpdateDrainRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj171 int
	var yyb171 bool
	var yyhl171 bool = l >= 0
	yyj171++
	if yyhl171 {
		yyb171 = yyj171 > l
	} else {
		yyb171 = r.CheckBreak()
	}
	if yyb171 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeID = ""
	} else {
		x.NodeID = string(r.DecodeString())
	}
	yyj171++
	if yyhl171 {
		yyb171 = yyj171 > l
	} else {
		yyb171 = r.CheckBreak()
	}
	if yyb171 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Drain = false
	} else {
		x.Drain = bool(r.DecodeBool())
	}
	yyj171++
	if yyhl171 {
		yyb171 = yyj171 > l
	} else {
		yyb171 = r.CheckBreak()
	}
	if yyb171 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj171++
		if yyhl171 {
			yyb171 = yyj171 > l
		} else {
			yyb171 = r.CheckBreak()
		}
		if yyb171 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj171-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *NodeEvaluateRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym175 := z.EncBinary()
		_ = yym175
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep176 := !z.EncBinary()
			yy2arr176 := z.EncBasicHandle().StructToArray
			var yyq176 [2]bool
			_, _, _ = yysep176, yyq176, yy2arr176
			const yyr176 bool = false
			var yynn176 int
			if yyr176 || yy2arr176 {
				r.EncodeArrayStart(2)
			} else {
				yynn176 = 2
				for _, b := range yyq176 {
					if b {
						yynn176++
					}
				}
				r.EncodeMapStart(yynn176)
				yynn176 = 0
			}
			if yyr176 || yy2arr176 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym178 := z.EncBinary()
				_ = yym178
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym179 := z.EncBinary()
				_ = yym179
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			}
			if yyr176 || yy2arr176 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym181 := z.EncBinary()
				_ = yym181
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym182 := z.EncBinary()
				_ = yym182
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr176 || yy2arr176 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *NodeEvaluateRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym183 := z.DecBinary()
	_ = yym183
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct184 := r.ContainerType()
		if yyct184 == codecSelferValueTypeMap4362 {
			yyl184 := r.ReadMapStart()
			if yyl184 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl184, d)
			}
		} else if yyct184 == codecSelferValueTypeArray4362 {
			yyl184 := r.ReadArrayStart()
			if yyl184 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl184, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *NodeEvaluateRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys185Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys185Slc
	var yyhl185 bool = l >= 0
	for yyj185 := 0; ; yyj185++ {
		if yyhl185 {
			if yyj185 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys185Slc = r.DecodeBytes(yys185Slc, true, true)
		yys185 := string(yys185Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys185 {
		case "NodeID":
			if r.TryDecodeAsNil() {
				x.NodeID = ""
			} else {
				x.NodeID = string(r.DecodeString())
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys185)
		} // end switch yys185
	} // end for yyj185
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *NodeEvaluateRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj188 int
	var yyb188 bool
	var yyhl188 bool = l >= 0
	yyj188++
	if yyhl188 {
		yyb188 = yyj188 > l
	} else {
		yyb188 = r.CheckBreak()
	}
	if yyb188 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeID = ""
	} else {
		x.NodeID = string(r.DecodeString())
	}
	yyj188++
	if yyhl188 {
		yyb188 = yyj188 > l
	} else {
		yyb188 = r.CheckBreak()
	}
	if yyb188 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj188++
		if yyhl188 {
			yyb188 = yyj188 > l
		} else {
			yyb188 = r.CheckBreak()
		}
		if yyb188 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj188-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *NodeSpecificRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym191 := z.EncBinary()
		_ = yym191
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep192 := !z.EncBinary()
			yy2arr192 := z.EncBasicHandle().StructToArray
			var yyq192 [6]bool
			_, _, _ = yysep192, yyq192, yy2arr192
			const yyr192 bool = false
			var yynn192 int
			if yyr192 || yy2arr192 {
				r.EncodeArrayStart(6)
			} else {
				yynn192 = 6
				for _, b := range yyq192 {
					if b {
						yynn192++
					}
				}
				r.EncodeMapStart(yynn192)
				yynn192 = 0
			}
			if yyr192 || yy2arr192 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym194 := z.EncBinary()
				_ = yym194
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym195 := z.EncBinary()
				_ = yym195
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			}
			if yyr192 || yy2arr192 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym197 := z.EncBinary()
				_ = yym197
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym198 := z.EncBinary()
				_ = yym198
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr192 || yy2arr192 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym200 := z.EncBinary()
				_ = yym200
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MinQueryIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym201 := z.EncBinary()
				_ = yym201
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			}
			if yyr192 || yy2arr192 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym203 := z.EncBinary()
				_ = yym203
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MaxQueryTime"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym204 := z.EncBinary()
				_ = yym204
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			}
			if yyr192 || yy2arr192 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym206 := z.EncBinary()
				_ = yym206
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllowStale"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym207 := z.EncBinary()
				_ = yym207
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			}
			if yyr192 || yy2arr192 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym209 := z.EncBinary()
				_ = yym209
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Prefix"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym210 := z.EncBinary()
				_ = yym210
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			}
			if yyr192 || yy2arr192 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *NodeSpecificRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym211 := z.DecBinary()
	_ = yym211
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct212 := r.ContainerType()
		if yyct212 == codecSelferValueTypeMap4362 {
			yyl212 := r.ReadMapStart()
			if yyl212 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl212, d)
			}
		} else if yyct212 == codecSelferValueTypeArray4362 {
			yyl212 := r.ReadArrayStart()
			if yyl212 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl212, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *NodeSpecificRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys213Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys213Slc
	var yyhl213 bool = l >= 0
	for yyj213 := 0; ; yyj213++ {
		if yyhl213 {
			if yyj213 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys213Slc = r.DecodeBytes(yys213Slc, true, true)
		yys213 := string(yys213Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys213 {
		case "NodeID":
			if r.TryDecodeAsNil() {
				x.NodeID = ""
			} else {
				x.NodeID = string(r.DecodeString())
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		case "MinQueryIndex":
			if r.TryDecodeAsNil() {
				x.MinQueryIndex = 0
			} else {
				x.MinQueryIndex = uint64(r.DecodeUint(64))
			}
		case "MaxQueryTime":
			if r.TryDecodeAsNil() {
				x.MaxQueryTime = 0
			} else {
				x.MaxQueryTime = time.Duration(r.DecodeInt(64))
			}
		case "AllowStale":
			if r.TryDecodeAsNil() {
				x.AllowStale = false
			} else {
				x.AllowStale = bool(r.DecodeBool())
			}
		case "Prefix":
			if r.TryDecodeAsNil() {
				x.Prefix = ""
			} else {
				x.Prefix = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys213)
		} // end switch yys213
	} // end for yyj213
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *NodeSpecificRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj220 int
	var yyb220 bool
	var yyhl220 bool = l >= 0
	yyj220++
	if yyhl220 {
		yyb220 = yyj220 > l
	} else {
		yyb220 = r.CheckBreak()
	}
	if yyb220 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeID = ""
	} else {
		x.NodeID = string(r.DecodeString())
	}
	yyj220++
	if yyhl220 {
		yyb220 = yyj220 > l
	} else {
		yyb220 = r.CheckBreak()
	}
	if yyb220 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	yyj220++
	if yyhl220 {
		yyb220 = yyj220 > l
	} else {
		yyb220 = r.CheckBreak()
	}
	if yyb220 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MinQueryIndex = 0
	} else {
		x.MinQueryIndex = uint64(r.DecodeUint(64))
	}
	yyj220++
	if yyhl220 {
		yyb220 = yyj220 > l
	} else {
		yyb220 = r.CheckBreak()
	}
	if yyb220 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MaxQueryTime = 0
	} else {
		x.MaxQueryTime = time.Duration(r.DecodeInt(64))
	}
	yyj220++
	if yyhl220 {
		yyb220 = yyj220 > l
	} else {
		yyb220 = r.CheckBreak()
	}
	if yyb220 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllowStale = false
	} else {
		x.AllowStale = bool(r.DecodeBool())
	}
	yyj220++
	if yyhl220 {
		yyb220 = yyj220 > l
	} else {
		yyb220 = r.CheckBreak()
	}
	if yyb220 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Prefix = ""
	} else {
		x.Prefix = string(r.DecodeString())
	}
	for {
		yyj220++
		if yyhl220 {
			yyb220 = yyj220 > l
		} else {
			yyb220 = r.CheckBreak()
		}
		if yyb220 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj220-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobRegisterRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym227 := z.EncBinary()
		_ = yym227
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep228 := !z.EncBinary()
			yy2arr228 := z.EncBasicHandle().StructToArray
			var yyq228 [4]bool
			_, _, _ = yysep228, yyq228, yy2arr228
			const yyr228 bool = false
			var yynn228 int
			if yyr228 || yy2arr228 {
				r.EncodeArrayStart(4)
			} else {
				yynn228 = 4
				for _, b := range yyq228 {
					if b {
						yynn228++
					}
				}
				r.EncodeMapStart(yynn228)
				yynn228 = 0
			}
			if yyr228 || yy2arr228 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Job == nil {
					r.EncodeNil()
				} else {
					x.Job.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Job"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Job == nil {
					r.EncodeNil()
				} else {
					x.Job.CodecEncodeSelf(e)
				}
			}
			if yyr228 || yy2arr228 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym231 := z.EncBinary()
				_ = yym231
				if false {
				} else {
					r.EncodeBool(bool(x.EnforceIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EnforceIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym232 := z.EncBinary()
				_ = yym232
				if false {
				} else {
					r.EncodeBool(bool(x.EnforceIndex))
				}
			}
			if yyr228 || yy2arr228 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym234 := z.EncBinary()
				_ = yym234
				if false {
				} else {
					r.EncodeUint(uint64(x.JobModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym235 := z.EncBinary()
				_ = yym235
				if false {
				} else {
					r.EncodeUint(uint64(x.JobModifyIndex))
				}
			}
			if yyr228 || yy2arr228 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym237 := z.EncBinary()
				_ = yym237
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym238 := z.EncBinary()
				_ = yym238
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr228 || yy2arr228 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobRegisterRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym239 := z.DecBinary()
	_ = yym239
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct240 := r.ContainerType()
		if yyct240 == codecSelferValueTypeMap4362 {
			yyl240 := r.ReadMapStart()
			if yyl240 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl240, d)
			}
		} else if yyct240 == codecSelferValueTypeArray4362 {
			yyl240 := r.ReadArrayStart()
			if yyl240 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl240, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobRegisterRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys241Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys241Slc
	var yyhl241 bool = l >= 0
	for yyj241 := 0; ; yyj241++ {
		if yyhl241 {
			if yyj241 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys241Slc = r.DecodeBytes(yys241Slc, true, true)
		yys241 := string(yys241Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys241 {
		case "Job":
			if r.TryDecodeAsNil() {
				if x.Job != nil {
					x.Job = nil
				}
			} else {
				if x.Job == nil {
					x.Job = new(Job)
				}
				x.Job.CodecDecodeSelf(d)
			}
		case "EnforceIndex":
			if r.TryDecodeAsNil() {
				x.EnforceIndex = false
			} else {
				x.EnforceIndex = bool(r.DecodeBool())
			}
		case "JobModifyIndex":
			if r.TryDecodeAsNil() {
				x.JobModifyIndex = 0
			} else {
				x.JobModifyIndex = uint64(r.DecodeUint(64))
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys241)
		} // end switch yys241
	} // end for yyj241
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobRegisterRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj246 int
	var yyb246 bool
	var yyhl246 bool = l >= 0
	yyj246++
	if yyhl246 {
		yyb246 = yyj246 > l
	} else {
		yyb246 = r.CheckBreak()
	}
	if yyb246 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Job != nil {
			x.Job = nil
		}
	} else {
		if x.Job == nil {
			x.Job = new(Job)
		}
		x.Job.CodecDecodeSelf(d)
	}
	yyj246++
	if yyhl246 {
		yyb246 = yyj246 > l
	} else {
		yyb246 = r.CheckBreak()
	}
	if yyb246 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EnforceIndex = false
	} else {
		x.EnforceIndex = bool(r.DecodeBool())
	}
	yyj246++
	if yyhl246 {
		yyb246 = yyj246 > l
	} else {
		yyb246 = r.CheckBreak()
	}
	if yyb246 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobModifyIndex = 0
	} else {
		x.JobModifyIndex = uint64(r.DecodeUint(64))
	}
	yyj246++
	if yyhl246 {
		yyb246 = yyj246 > l
	} else {
		yyb246 = r.CheckBreak()
	}
	if yyb246 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj246++
		if yyhl246 {
			yyb246 = yyj246 > l
		} else {
			yyb246 = r.CheckBreak()
		}
		if yyb246 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj246-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobDeregisterRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym251 := z.EncBinary()
		_ = yym251
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep252 := !z.EncBinary()
			yy2arr252 := z.EncBasicHandle().StructToArray
			var yyq252 [2]bool
			_, _, _ = yysep252, yyq252, yy2arr252
			const yyr252 bool = false
			var yynn252 int
			if yyr252 || yy2arr252 {
				r.EncodeArrayStart(2)
			} else {
				yynn252 = 2
				for _, b := range yyq252 {
					if b {
						yynn252++
					}
				}
				r.EncodeMapStart(yynn252)
				yynn252 = 0
			}
			if yyr252 || yy2arr252 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym254 := z.EncBinary()
				_ = yym254
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym255 := z.EncBinary()
				_ = yym255
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			}
			if yyr252 || yy2arr252 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym257 := z.EncBinary()
				_ = yym257
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym258 := z.EncBinary()
				_ = yym258
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr252 || yy2arr252 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobDeregisterRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym259 := z.DecBinary()
	_ = yym259
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct260 := r.ContainerType()
		if yyct260 == codecSelferValueTypeMap4362 {
			yyl260 := r.ReadMapStart()
			if yyl260 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl260, d)
			}
		} else if yyct260 == codecSelferValueTypeArray4362 {
			yyl260 := r.ReadArrayStart()
			if yyl260 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl260, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobDeregisterRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys261Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys261Slc
	var yyhl261 bool = l >= 0
	for yyj261 := 0; ; yyj261++ {
		if yyhl261 {
			if yyj261 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys261Slc = r.DecodeBytes(yys261Slc, true, true)
		yys261 := string(yys261Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys261 {
		case "JobID":
			if r.TryDecodeAsNil() {
				x.JobID = ""
			} else {
				x.JobID = string(r.DecodeString())
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys261)
		} // end switch yys261
	} // end for yyj261
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobDeregisterRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj264 int
	var yyb264 bool
	var yyhl264 bool = l >= 0
	yyj264++
	if yyhl264 {
		yyb264 = yyj264 > l
	} else {
		yyb264 = r.CheckBreak()
	}
	if yyb264 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobID = ""
	} else {
		x.JobID = string(r.DecodeString())
	}
	yyj264++
	if yyhl264 {
		yyb264 = yyj264 > l
	} else {
		yyb264 = r.CheckBreak()
	}
	if yyb264 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj264++
		if yyhl264 {
			yyb264 = yyj264 > l
		} else {
			yyb264 = r.CheckBreak()
		}
		if yyb264 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj264-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobEvaluateRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym267 := z.EncBinary()
		_ = yym267
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep268 := !z.EncBinary()
			yy2arr268 := z.EncBasicHandle().StructToArray
			var yyq268 [2]bool
			_, _, _ = yysep268, yyq268, yy2arr268
			const yyr268 bool = false
			var yynn268 int
			if yyr268 || yy2arr268 {
				r.EncodeArrayStart(2)
			} else {
				yynn268 = 2
				for _, b := range yyq268 {
					if b {
						yynn268++
					}
				}
				r.EncodeMapStart(yynn268)
				yynn268 = 0
			}
			if yyr268 || yy2arr268 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym270 := z.EncBinary()
				_ = yym270
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym271 := z.EncBinary()
				_ = yym271
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			}
			if yyr268 || yy2arr268 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym273 := z.EncBinary()
				_ = yym273
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym274 := z.EncBinary()
				_ = yym274
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr268 || yy2arr268 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobEvaluateRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym275 := z.DecBinary()
	_ = yym275
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct276 := r.ContainerType()
		if yyct276 == codecSelferValueTypeMap4362 {
			yyl276 := r.ReadMapStart()
			if yyl276 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl276, d)
			}
		} else if yyct276 == codecSelferValueTypeArray4362 {
			yyl276 := r.ReadArrayStart()
			if yyl276 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl276, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobEvaluateRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys277Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys277Slc
	var yyhl277 bool = l >= 0
	for yyj277 := 0; ; yyj277++ {
		if yyhl277 {
			if yyj277 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys277Slc = r.DecodeBytes(yys277Slc, true, true)
		yys277 := string(yys277Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys277 {
		case "JobID":
			if r.TryDecodeAsNil() {
				x.JobID = ""
			} else {
				x.JobID = string(r.DecodeString())
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys277)
		} // end switch yys277
	} // end for yyj277
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobEvaluateRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj280 int
	var yyb280 bool
	var yyhl280 bool = l >= 0
	yyj280++
	if yyhl280 {
		yyb280 = yyj280 > l
	} else {
		yyb280 = r.CheckBreak()
	}
	if yyb280 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobID = ""
	} else {
		x.JobID = string(r.DecodeString())
	}
	yyj280++
	if yyhl280 {
		yyb280 = yyj280 > l
	} else {
		yyb280 = r.CheckBreak()
	}
	if yyb280 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj280++
		if yyhl280 {
			yyb280 = yyj280 > l
		} else {
			yyb280 = r.CheckBreak()
		}
		if yyb280 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj280-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobSpecificRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym283 := z.EncBinary()
		_ = yym283
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep284 := !z.EncBinary()
			yy2arr284 := z.EncBasicHandle().StructToArray
			var yyq284 [6]bool
			_, _, _ = yysep284, yyq284, yy2arr284
			const yyr284 bool = false
			var yynn284 int
			if yyr284 || yy2arr284 {
				r.EncodeArrayStart(6)
			} else {
				yynn284 = 6
				for _, b := range yyq284 {
					if b {
						yynn284++
					}
				}
				r.EncodeMapStart(yynn284)
				yynn284 = 0
			}
			if yyr284 || yy2arr284 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym286 := z.EncBinary()
				_ = yym286
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym287 := z.EncBinary()
				_ = yym287
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			}
			if yyr284 || yy2arr284 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym289 := z.EncBinary()
				_ = yym289
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym290 := z.EncBinary()
				_ = yym290
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr284 || yy2arr284 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym292 := z.EncBinary()
				_ = yym292
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MinQueryIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym293 := z.EncBinary()
				_ = yym293
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			}
			if yyr284 || yy2arr284 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym295 := z.EncBinary()
				_ = yym295
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MaxQueryTime"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym296 := z.EncBinary()
				_ = yym296
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			}
			if yyr284 || yy2arr284 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym298 := z.EncBinary()
				_ = yym298
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllowStale"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym299 := z.EncBinary()
				_ = yym299
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			}
			if yyr284 || yy2arr284 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym301 := z.EncBinary()
				_ = yym301
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Prefix"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym302 := z.EncBinary()
				_ = yym302
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			}
			if yyr284 || yy2arr284 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobSpecificRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym303 := z.DecBinary()
	_ = yym303
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct304 := r.ContainerType()
		if yyct304 == codecSelferValueTypeMap4362 {
			yyl304 := r.ReadMapStart()
			if yyl304 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl304, d)
			}
		} else if yyct304 == codecSelferValueTypeArray4362 {
			yyl304 := r.ReadArrayStart()
			if yyl304 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl304, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobSpecificRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys305Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys305Slc
	var yyhl305 bool = l >= 0
	for yyj305 := 0; ; yyj305++ {
		if yyhl305 {
			if yyj305 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys305Slc = r.DecodeBytes(yys305Slc, true, true)
		yys305 := string(yys305Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys305 {
		case "JobID":
			if r.TryDecodeAsNil() {
				x.JobID = ""
			} else {
				x.JobID = string(r.DecodeString())
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		case "MinQueryIndex":
			if r.TryDecodeAsNil() {
				x.MinQueryIndex = 0
			} else {
				x.MinQueryIndex = uint64(r.DecodeUint(64))
			}
		case "MaxQueryTime":
			if r.TryDecodeAsNil() {
				x.MaxQueryTime = 0
			} else {
				x.MaxQueryTime = time.Duration(r.DecodeInt(64))
			}
		case "AllowStale":
			if r.TryDecodeAsNil() {
				x.AllowStale = false
			} else {
				x.AllowStale = bool(r.DecodeBool())
			}
		case "Prefix":
			if r.TryDecodeAsNil() {
				x.Prefix = ""
			} else {
				x.Prefix = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys305)
		} // end switch yys305
	} // end for yyj305
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobSpecificRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj312 int
	var yyb312 bool
	var yyhl312 bool = l >= 0
	yyj312++
	if yyhl312 {
		yyb312 = yyj312 > l
	} else {
		yyb312 = r.CheckBreak()
	}
	if yyb312 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobID = ""
	} else {
		x.JobID = string(r.DecodeString())
	}
	yyj312++
	if yyhl312 {
		yyb312 = yyj312 > l
	} else {
		yyb312 = r.CheckBreak()
	}
	if yyb312 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	yyj312++
	if yyhl312 {
		yyb312 = yyj312 > l
	} else {
		yyb312 = r.CheckBreak()
	}
	if yyb312 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MinQueryIndex = 0
	} else {
		x.MinQueryIndex = uint64(r.DecodeUint(64))
	}
	yyj312++
	if yyhl312 {
		yyb312 = yyj312 > l
	} else {
		yyb312 = r.CheckBreak()
	}
	if yyb312 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MaxQueryTime = 0
	} else {
		x.MaxQueryTime = time.Duration(r.DecodeInt(64))
	}
	yyj312++
	if yyhl312 {
		yyb312 = yyj312 > l
	} else {
		yyb312 = r.CheckBreak()
	}
	if yyb312 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllowStale = false
	} else {
		x.AllowStale = bool(r.DecodeBool())
	}
	yyj312++
	if yyhl312 {
		yyb312 = yyj312 > l
	} else {
		yyb312 = r.CheckBreak()
	}
	if yyb312 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Prefix = ""
	} else {
		x.Prefix = string(r.DecodeString())
	}
	for {
		yyj312++
		if yyhl312 {
			yyb312 = yyj312 > l
		} else {
			yyb312 = r.CheckBreak()
		}
		if yyb312 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj312-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobListRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym319 := z.EncBinary()
		_ = yym319
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep320 := !z.EncBinary()
			yy2arr320 := z.EncBasicHandle().StructToArray
			var yyq320 [5]bool
			_, _, _ = yysep320, yyq320, yy2arr320
			const yyr320 bool = false
			var yynn320 int
			if yyr320 || yy2arr320 {
				r.EncodeArrayStart(5)
			} else {
				yynn320 = 5
				for _, b := range yyq320 {
					if b {
						yynn320++
					}
				}
				r.EncodeMapStart(yynn320)
				yynn320 = 0
			}
			if yyr320 || yy2arr320 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym322 := z.EncBinary()
				_ = yym322
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym323 := z.EncBinary()
				_ = yym323
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr320 || yy2arr320 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym325 := z.EncBinary()
				_ = yym325
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MinQueryIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym326 := z.EncBinary()
				_ = yym326
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			}
			if yyr320 || yy2arr320 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym328 := z.EncBinary()
				_ = yym328
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MaxQueryTime"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym329 := z.EncBinary()
				_ = yym329
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			}
			if yyr320 || yy2arr320 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym331 := z.EncBinary()
				_ = yym331
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllowStale"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym332 := z.EncBinary()
				_ = yym332
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			}
			if yyr320 || yy2arr320 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym334 := z.EncBinary()
				_ = yym334
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Prefix"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym335 := z.EncBinary()
				_ = yym335
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			}
			if yyr320 || yy2arr320 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobListRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym336 := z.DecBinary()
	_ = yym336
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct337 := r.ContainerType()
		if yyct337 == codecSelferValueTypeMap4362 {
			yyl337 := r.ReadMapStart()
			if yyl337 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl337, d)
			}
		} else if yyct337 == codecSelferValueTypeArray4362 {
			yyl337 := r.ReadArrayStart()
			if yyl337 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl337, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobListRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys338Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys338Slc
	var yyhl338 bool = l >= 0
	for yyj338 := 0; ; yyj338++ {
		if yyhl338 {
			if yyj338 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys338Slc = r.DecodeBytes(yys338Slc, true, true)
		yys338 := string(yys338Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys338 {
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		case "MinQueryIndex":
			if r.TryDecodeAsNil() {
				x.MinQueryIndex = 0
			} else {
				x.MinQueryIndex = uint64(r.DecodeUint(64))
			}
		case "MaxQueryTime":
			if r.TryDecodeAsNil() {
				x.MaxQueryTime = 0
			} else {
				x.MaxQueryTime = time.Duration(r.DecodeInt(64))
			}
		case "AllowStale":
			if r.TryDecodeAsNil() {
				x.AllowStale = false
			} else {
				x.AllowStale = bool(r.DecodeBool())
			}
		case "Prefix":
			if r.TryDecodeAsNil() {
				x.Prefix = ""
			} else {
				x.Prefix = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys338)
		} // end switch yys338
	} // end for yyj338
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobListRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj344 int
	var yyb344 bool
	var yyhl344 bool = l >= 0
	yyj344++
	if yyhl344 {
		yyb344 = yyj344 > l
	} else {
		yyb344 = r.CheckBreak()
	}
	if yyb344 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	yyj344++
	if yyhl344 {
		yyb344 = yyj344 > l
	} else {
		yyb344 = r.CheckBreak()
	}
	if yyb344 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MinQueryIndex = 0
	} else {
		x.MinQueryIndex = uint64(r.DecodeUint(64))
	}
	yyj344++
	if yyhl344 {
		yyb344 = yyj344 > l
	} else {
		yyb344 = r.CheckBreak()
	}
	if yyb344 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MaxQueryTime = 0
	} else {
		x.MaxQueryTime = time.Duration(r.DecodeInt(64))
	}
	yyj344++
	if yyhl344 {
		yyb344 = yyj344 > l
	} else {
		yyb344 = r.CheckBreak()
	}
	if yyb344 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllowStale = false
	} else {
		x.AllowStale = bool(r.DecodeBool())
	}
	yyj344++
	if yyhl344 {
		yyb344 = yyj344 > l
	} else {
		yyb344 = r.CheckBreak()
	}
	if yyb344 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Prefix = ""
	} else {
		x.Prefix = string(r.DecodeString())
	}
	for {
		yyj344++
		if yyhl344 {
			yyb344 = yyj344 > l
		} else {
			yyb344 = r.CheckBreak()
		}
		if yyb344 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj344-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobPlanRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym350 := z.EncBinary()
		_ = yym350
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep351 := !z.EncBinary()
			yy2arr351 := z.EncBasicHandle().StructToArray
			var yyq351 [3]bool
			_, _, _ = yysep351, yyq351, yy2arr351
			const yyr351 bool = false
			var yynn351 int
			if yyr351 || yy2arr351 {
				r.EncodeArrayStart(3)
			} else {
				yynn351 = 3
				for _, b := range yyq351 {
					if b {
						yynn351++
					}
				}
				r.EncodeMapStart(yynn351)
				yynn351 = 0
			}
			if yyr351 || yy2arr351 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Job == nil {
					r.EncodeNil()
				} else {
					x.Job.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Job"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Job == nil {
					r.EncodeNil()
				} else {
					x.Job.CodecEncodeSelf(e)
				}
			}
			if yyr351 || yy2arr351 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym354 := z.EncBinary()
				_ = yym354
				if false {
				} else {
					r.EncodeBool(bool(x.Diff))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Diff"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym355 := z.EncBinary()
				_ = yym355
				if false {
				} else {
					r.EncodeBool(bool(x.Diff))
				}
			}
			if yyr351 || yy2arr351 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym357 := z.EncBinary()
				_ = yym357
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym358 := z.EncBinary()
				_ = yym358
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr351 || yy2arr351 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobPlanRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym359 := z.DecBinary()
	_ = yym359
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct360 := r.ContainerType()
		if yyct360 == codecSelferValueTypeMap4362 {
			yyl360 := r.ReadMapStart()
			if yyl360 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl360, d)
			}
		} else if yyct360 == codecSelferValueTypeArray4362 {
			yyl360 := r.ReadArrayStart()
			if yyl360 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl360, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobPlanRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys361Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys361Slc
	var yyhl361 bool = l >= 0
	for yyj361 := 0; ; yyj361++ {
		if yyhl361 {
			if yyj361 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys361Slc = r.DecodeBytes(yys361Slc, true, true)
		yys361 := string(yys361Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys361 {
		case "Job":
			if r.TryDecodeAsNil() {
				if x.Job != nil {
					x.Job = nil
				}
			} else {
				if x.Job == nil {
					x.Job = new(Job)
				}
				x.Job.CodecDecodeSelf(d)
			}
		case "Diff":
			if r.TryDecodeAsNil() {
				x.Diff = false
			} else {
				x.Diff = bool(r.DecodeBool())
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys361)
		} // end switch yys361
	} // end for yyj361
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobPlanRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj365 int
	var yyb365 bool
	var yyhl365 bool = l >= 0
	yyj365++
	if yyhl365 {
		yyb365 = yyj365 > l
	} else {
		yyb365 = r.CheckBreak()
	}
	if yyb365 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Job != nil {
			x.Job = nil
		}
	} else {
		if x.Job == nil {
			x.Job = new(Job)
		}
		x.Job.CodecDecodeSelf(d)
	}
	yyj365++
	if yyhl365 {
		yyb365 = yyj365 > l
	} else {
		yyb365 = r.CheckBreak()
	}
	if yyb365 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Diff = false
	} else {
		x.Diff = bool(r.DecodeBool())
	}
	yyj365++
	if yyhl365 {
		yyb365 = yyj365 > l
	} else {
		yyb365 = r.CheckBreak()
	}
	if yyb365 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj365++
		if yyhl365 {
			yyb365 = yyj365 > l
		} else {
			yyb365 = r.CheckBreak()
		}
		if yyb365 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj365-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobSummaryRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym369 := z.EncBinary()
		_ = yym369
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep370 := !z.EncBinary()
			yy2arr370 := z.EncBasicHandle().StructToArray
			var yyq370 [6]bool
			_, _, _ = yysep370, yyq370, yy2arr370
			const yyr370 bool = false
			var yynn370 int
			if yyr370 || yy2arr370 {
				r.EncodeArrayStart(6)
			} else {
				yynn370 = 6
				for _, b := range yyq370 {
					if b {
						yynn370++
					}
				}
				r.EncodeMapStart(yynn370)
				yynn370 = 0
			}
			if yyr370 || yy2arr370 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym372 := z.EncBinary()
				_ = yym372
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym373 := z.EncBinary()
				_ = yym373
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			}
			if yyr370 || yy2arr370 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym375 := z.EncBinary()
				_ = yym375
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym376 := z.EncBinary()
				_ = yym376
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr370 || yy2arr370 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym378 := z.EncBinary()
				_ = yym378
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MinQueryIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym379 := z.EncBinary()
				_ = yym379
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			}
			if yyr370 || yy2arr370 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym381 := z.EncBinary()
				_ = yym381
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MaxQueryTime"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym382 := z.EncBinary()
				_ = yym382
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			}
			if yyr370 || yy2arr370 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym384 := z.EncBinary()
				_ = yym384
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllowStale"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym385 := z.EncBinary()
				_ = yym385
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			}
			if yyr370 || yy2arr370 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym387 := z.EncBinary()
				_ = yym387
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Prefix"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym388 := z.EncBinary()
				_ = yym388
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			}
			if yyr370 || yy2arr370 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobSummaryRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym389 := z.DecBinary()
	_ = yym389
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct390 := r.ContainerType()
		if yyct390 == codecSelferValueTypeMap4362 {
			yyl390 := r.ReadMapStart()
			if yyl390 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl390, d)
			}
		} else if yyct390 == codecSelferValueTypeArray4362 {
			yyl390 := r.ReadArrayStart()
			if yyl390 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl390, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobSummaryRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys391Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys391Slc
	var yyhl391 bool = l >= 0
	for yyj391 := 0; ; yyj391++ {
		if yyhl391 {
			if yyj391 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys391Slc = r.DecodeBytes(yys391Slc, true, true)
		yys391 := string(yys391Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys391 {
		case "JobID":
			if r.TryDecodeAsNil() {
				x.JobID = ""
			} else {
				x.JobID = string(r.DecodeString())
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		case "MinQueryIndex":
			if r.TryDecodeAsNil() {
				x.MinQueryIndex = 0
			} else {
				x.MinQueryIndex = uint64(r.DecodeUint(64))
			}
		case "MaxQueryTime":
			if r.TryDecodeAsNil() {
				x.MaxQueryTime = 0
			} else {
				x.MaxQueryTime = time.Duration(r.DecodeInt(64))
			}
		case "AllowStale":
			if r.TryDecodeAsNil() {
				x.AllowStale = false
			} else {
				x.AllowStale = bool(r.DecodeBool())
			}
		case "Prefix":
			if r.TryDecodeAsNil() {
				x.Prefix = ""
			} else {
				x.Prefix = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys391)
		} // end switch yys391
	} // end for yyj391
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobSummaryRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj398 int
	var yyb398 bool
	var yyhl398 bool = l >= 0
	yyj398++
	if yyhl398 {
		yyb398 = yyj398 > l
	} else {
		yyb398 = r.CheckBreak()
	}
	if yyb398 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobID = ""
	} else {
		x.JobID = string(r.DecodeString())
	}
	yyj398++
	if yyhl398 {
		yyb398 = yyj398 > l
	} else {
		yyb398 = r.CheckBreak()
	}
	if yyb398 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	yyj398++
	if yyhl398 {
		yyb398 = yyj398 > l
	} else {
		yyb398 = r.CheckBreak()
	}
	if yyb398 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MinQueryIndex = 0
	} else {
		x.MinQueryIndex = uint64(r.DecodeUint(64))
	}
	yyj398++
	if yyhl398 {
		yyb398 = yyj398 > l
	} else {
		yyb398 = r.CheckBreak()
	}
	if yyb398 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MaxQueryTime = 0
	} else {
		x.MaxQueryTime = time.Duration(r.DecodeInt(64))
	}
	yyj398++
	if yyhl398 {
		yyb398 = yyj398 > l
	} else {
		yyb398 = r.CheckBreak()
	}
	if yyb398 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllowStale = false
	} else {
		x.AllowStale = bool(r.DecodeBool())
	}
	yyj398++
	if yyhl398 {
		yyb398 = yyj398 > l
	} else {
		yyb398 = r.CheckBreak()
	}
	if yyb398 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Prefix = ""
	} else {
		x.Prefix = string(r.DecodeString())
	}
	for {
		yyj398++
		if yyhl398 {
			yyb398 = yyj398 > l
		} else {
			yyb398 = r.CheckBreak()
		}
		if yyb398 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj398-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *NodeListRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym405 := z.EncBinary()
		_ = yym405
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep406 := !z.EncBinary()
			yy2arr406 := z.EncBasicHandle().StructToArray
			var yyq406 [5]bool
			_, _, _ = yysep406, yyq406, yy2arr406
			const yyr406 bool = false
			var yynn406 int
			if yyr406 || yy2arr406 {
				r.EncodeArrayStart(5)
			} else {
				yynn406 = 5
				for _, b := range yyq406 {
					if b {
						yynn406++
					}
				}
				r.EncodeMapStart(yynn406)
				yynn406 = 0
			}
			if yyr406 || yy2arr406 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym408 := z.EncBinary()
				_ = yym408
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym409 := z.EncBinary()
				_ = yym409
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr406 || yy2arr406 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym411 := z.EncBinary()
				_ = yym411
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MinQueryIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym412 := z.EncBinary()
				_ = yym412
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			}
			if yyr406 || yy2arr406 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym414 := z.EncBinary()
				_ = yym414
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MaxQueryTime"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym415 := z.EncBinary()
				_ = yym415
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			}
			if yyr406 || yy2arr406 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym417 := z.EncBinary()
				_ = yym417
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllowStale"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym418 := z.EncBinary()
				_ = yym418
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			}
			if yyr406 || yy2arr406 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym420 := z.EncBinary()
				_ = yym420
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Prefix"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym421 := z.EncBinary()
				_ = yym421
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			}
			if yyr406 || yy2arr406 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *NodeListRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym422 := z.DecBinary()
	_ = yym422
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct423 := r.ContainerType()
		if yyct423 == codecSelferValueTypeMap4362 {
			yyl423 := r.ReadMapStart()
			if yyl423 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl423, d)
			}
		} else if yyct423 == codecSelferValueTypeArray4362 {
			yyl423 := r.ReadArrayStart()
			if yyl423 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl423, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *NodeListRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys424Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys424Slc
	var yyhl424 bool = l >= 0
	for yyj424 := 0; ; yyj424++ {
		if yyhl424 {
			if yyj424 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys424Slc = r.DecodeBytes(yys424Slc, true, true)
		yys424 := string(yys424Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys424 {
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		case "MinQueryIndex":
			if r.TryDecodeAsNil() {
				x.MinQueryIndex = 0
			} else {
				x.MinQueryIndex = uint64(r.DecodeUint(64))
			}
		case "MaxQueryTime":
			if r.TryDecodeAsNil() {
				x.MaxQueryTime = 0
			} else {
				x.MaxQueryTime = time.Duration(r.DecodeInt(64))
			}
		case "AllowStale":
			if r.TryDecodeAsNil() {
				x.AllowStale = false
			} else {
				x.AllowStale = bool(r.DecodeBool())
			}
		case "Prefix":
			if r.TryDecodeAsNil() {
				x.Prefix = ""
			} else {
				x.Prefix = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys424)
		} // end switch yys424
	} // end for yyj424
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *NodeListRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj430 int
	var yyb430 bool
	var yyhl430 bool = l >= 0
	yyj430++
	if yyhl430 {
		yyb430 = yyj430 > l
	} else {
		yyb430 = r.CheckBreak()
	}
	if yyb430 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	yyj430++
	if yyhl430 {
		yyb430 = yyj430 > l
	} else {
		yyb430 = r.CheckBreak()
	}
	if yyb430 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MinQueryIndex = 0
	} else {
		x.MinQueryIndex = uint64(r.DecodeUint(64))
	}
	yyj430++
	if yyhl430 {
		yyb430 = yyj430 > l
	} else {
		yyb430 = r.CheckBreak()
	}
	if yyb430 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MaxQueryTime = 0
	} else {
		x.MaxQueryTime = time.Duration(r.DecodeInt(64))
	}
	yyj430++
	if yyhl430 {
		yyb430 = yyj430 > l
	} else {
		yyb430 = r.CheckBreak()
	}
	if yyb430 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllowStale = false
	} else {
		x.AllowStale = bool(r.DecodeBool())
	}
	yyj430++
	if yyhl430 {
		yyb430 = yyj430 > l
	} else {
		yyb430 = r.CheckBreak()
	}
	if yyb430 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Prefix = ""
	} else {
		x.Prefix = string(r.DecodeString())
	}
	for {
		yyj430++
		if yyhl430 {
			yyb430 = yyj430 > l
		} else {
			yyb430 = r.CheckBreak()
		}
		if yyb430 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj430-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *EvalUpdateRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym436 := z.EncBinary()
		_ = yym436
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep437 := !z.EncBinary()
			yy2arr437 := z.EncBasicHandle().StructToArray
			var yyq437 [3]bool
			_, _, _ = yysep437, yyq437, yy2arr437
			const yyr437 bool = false
			var yynn437 int
			if yyr437 || yy2arr437 {
				r.EncodeArrayStart(3)
			} else {
				yynn437 = 3
				for _, b := range yyq437 {
					if b {
						yynn437++
					}
				}
				r.EncodeMapStart(yynn437)
				yynn437 = 0
			}
			if yyr437 || yy2arr437 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Evals == nil {
					r.EncodeNil()
				} else {
					yym439 := z.EncBinary()
					_ = yym439
					if false {
					} else {
						h.encSlicePtrtoEvaluation(([]*Evaluation)(x.Evals), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Evals"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Evals == nil {
					r.EncodeNil()
				} else {
					yym440 := z.EncBinary()
					_ = yym440
					if false {
					} else {
						h.encSlicePtrtoEvaluation(([]*Evaluation)(x.Evals), e)
					}
				}
			}
			if yyr437 || yy2arr437 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym442 := z.EncBinary()
				_ = yym442
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalToken))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalToken"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym443 := z.EncBinary()
				_ = yym443
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalToken))
				}
			}
			if yyr437 || yy2arr437 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym445 := z.EncBinary()
				_ = yym445
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym446 := z.EncBinary()
				_ = yym446
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr437 || yy2arr437 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *EvalUpdateRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym447 := z.DecBinary()
	_ = yym447
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct448 := r.ContainerType()
		if yyct448 == codecSelferValueTypeMap4362 {
			yyl448 := r.ReadMapStart()
			if yyl448 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl448, d)
			}
		} else if yyct448 == codecSelferValueTypeArray4362 {
			yyl448 := r.ReadArrayStart()
			if yyl448 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl448, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *EvalUpdateRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys449Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys449Slc
	var yyhl449 bool = l >= 0
	for yyj449 := 0; ; yyj449++ {
		if yyhl449 {
			if yyj449 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys449Slc = r.DecodeBytes(yys449Slc, true, true)
		yys449 := string(yys449Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys449 {
		case "Evals":
			if r.TryDecodeAsNil() {
				x.Evals = nil
			} else {
				yyv450 := &x.Evals
				yym451 := z.DecBinary()
				_ = yym451
				if false {
				} else {
					h.decSlicePtrtoEvaluation((*[]*Evaluation)(yyv450), d)
				}
			}
		case "EvalToken":
			if r.TryDecodeAsNil() {
				x.EvalToken = ""
			} else {
				x.EvalToken = string(r.DecodeString())
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys449)
		} // end switch yys449
	} // end for yyj449
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *EvalUpdateRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj454 int
	var yyb454 bool
	var yyhl454 bool = l >= 0
	yyj454++
	if yyhl454 {
		yyb454 = yyj454 > l
	} else {
		yyb454 = r.CheckBreak()
	}
	if yyb454 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Evals = nil
	} else {
		yyv455 := &x.Evals
		yym456 := z.DecBinary()
		_ = yym456
		if false {
		} else {
			h.decSlicePtrtoEvaluation((*[]*Evaluation)(yyv455), d)
		}
	}
	yyj454++
	if yyhl454 {
		yyb454 = yyj454 > l
	} else {
		yyb454 = r.CheckBreak()
	}
	if yyb454 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalToken = ""
	} else {
		x.EvalToken = string(r.DecodeString())
	}
	yyj454++
	if yyhl454 {
		yyb454 = yyj454 > l
	} else {
		yyb454 = r.CheckBreak()
	}
	if yyb454 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj454++
		if yyhl454 {
			yyb454 = yyj454 > l
		} else {
			yyb454 = r.CheckBreak()
		}
		if yyb454 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj454-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *EvalDeleteRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym459 := z.EncBinary()
		_ = yym459
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep460 := !z.EncBinary()
			yy2arr460 := z.EncBasicHandle().StructToArray
			var yyq460 [3]bool
			_, _, _ = yysep460, yyq460, yy2arr460
			const yyr460 bool = false
			var yynn460 int
			if yyr460 || yy2arr460 {
				r.EncodeArrayStart(3)
			} else {
				yynn460 = 3
				for _, b := range yyq460 {
					if b {
						yynn460++
					}
				}
				r.EncodeMapStart(yynn460)
				yynn460 = 0
			}
			if yyr460 || yy2arr460 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Evals == nil {
					r.EncodeNil()
				} else {
					yym462 := z.EncBinary()
					_ = yym462
					if false {
					} else {
						z.F.EncSliceStringV(x.Evals, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Evals"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Evals == nil {
					r.EncodeNil()
				} else {
					yym463 := z.EncBinary()
					_ = yym463
					if false {
					} else {
						z.F.EncSliceStringV(x.Evals, false, e)
					}
				}
			}
			if yyr460 || yy2arr460 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Allocs == nil {
					r.EncodeNil()
				} else {
					yym465 := z.EncBinary()
					_ = yym465
					if false {
					} else {
						z.F.EncSliceStringV(x.Allocs, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Allocs"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Allocs == nil {
					r.EncodeNil()
				} else {
					yym466 := z.EncBinary()
					_ = yym466
					if false {
					} else {
						z.F.EncSliceStringV(x.Allocs, false, e)
					}
				}
			}
			if yyr460 || yy2arr460 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym468 := z.EncBinary()
				_ = yym468
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym469 := z.EncBinary()
				_ = yym469
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr460 || yy2arr460 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *EvalDeleteRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym470 := z.DecBinary()
	_ = yym470
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct471 := r.ContainerType()
		if yyct471 == codecSelferValueTypeMap4362 {
			yyl471 := r.ReadMapStart()
			if yyl471 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl471, d)
			}
		} else if yyct471 == codecSelferValueTypeArray4362 {
			yyl471 := r.ReadArrayStart()
			if yyl471 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl471, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *EvalDeleteRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys472Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys472Slc
	var yyhl472 bool = l >= 0
	for yyj472 := 0; ; yyj472++ {
		if yyhl472 {
			if yyj472 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys472Slc = r.DecodeBytes(yys472Slc, true, true)
		yys472 := string(yys472Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys472 {
		case "Evals":
			if r.TryDecodeAsNil() {
				x.Evals = nil
			} else {
				yyv473 := &x.Evals
				yym474 := z.DecBinary()
				_ = yym474
				if false {
				} else {
					z.F.DecSliceStringX(yyv473, false, d)
				}
			}
		case "Allocs":
			if r.TryDecodeAsNil() {
				x.Allocs = nil
			} else {
				yyv475 := &x.Allocs
				yym476 := z.DecBinary()
				_ = yym476
				if false {
				} else {
					z.F.DecSliceStringX(yyv475, false, d)
				}
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys472)
		} // end switch yys472
	} // end for yyj472
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *EvalDeleteRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj478 int
	var yyb478 bool
	var yyhl478 bool = l >= 0
	yyj478++
	if yyhl478 {
		yyb478 = yyj478 > l
	} else {
		yyb478 = r.CheckBreak()
	}
	if yyb478 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Evals = nil
	} else {
		yyv479 := &x.Evals
		yym480 := z.DecBinary()
		_ = yym480
		if false {
		} else {
			z.F.DecSliceStringX(yyv479, false, d)
		}
	}
	yyj478++
	if yyhl478 {
		yyb478 = yyj478 > l
	} else {
		yyb478 = r.CheckBreak()
	}
	if yyb478 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Allocs = nil
	} else {
		yyv481 := &x.Allocs
		yym482 := z.DecBinary()
		_ = yym482
		if false {
		} else {
			z.F.DecSliceStringX(yyv481, false, d)
		}
	}
	yyj478++
	if yyhl478 {
		yyb478 = yyj478 > l
	} else {
		yyb478 = r.CheckBreak()
	}
	if yyb478 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj478++
		if yyhl478 {
			yyb478 = yyj478 > l
		} else {
			yyb478 = r.CheckBreak()
		}
		if yyb478 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj478-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *EvalSpecificRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym484 := z.EncBinary()
		_ = yym484
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep485 := !z.EncBinary()
			yy2arr485 := z.EncBasicHandle().StructToArray
			var yyq485 [6]bool
			_, _, _ = yysep485, yyq485, yy2arr485
			const yyr485 bool = false
			var yynn485 int
			if yyr485 || yy2arr485 {
				r.EncodeArrayStart(6)
			} else {
				yynn485 = 6
				for _, b := range yyq485 {
					if b {
						yynn485++
					}
				}
				r.EncodeMapStart(yynn485)
				yynn485 = 0
			}
			if yyr485 || yy2arr485 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym487 := z.EncBinary()
				_ = yym487
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym488 := z.EncBinary()
				_ = yym488
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			}
			if yyr485 || yy2arr485 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym490 := z.EncBinary()
				_ = yym490
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym491 := z.EncBinary()
				_ = yym491
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr485 || yy2arr485 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym493 := z.EncBinary()
				_ = yym493
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MinQueryIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym494 := z.EncBinary()
				_ = yym494
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			}
			if yyr485 || yy2arr485 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym496 := z.EncBinary()
				_ = yym496
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MaxQueryTime"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym497 := z.EncBinary()
				_ = yym497
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			}
			if yyr485 || yy2arr485 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym499 := z.EncBinary()
				_ = yym499
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllowStale"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym500 := z.EncBinary()
				_ = yym500
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			}
			if yyr485 || yy2arr485 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym502 := z.EncBinary()
				_ = yym502
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Prefix"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym503 := z.EncBinary()
				_ = yym503
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			}
			if yyr485 || yy2arr485 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *EvalSpecificRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym504 := z.DecBinary()
	_ = yym504
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct505 := r.ContainerType()
		if yyct505 == codecSelferValueTypeMap4362 {
			yyl505 := r.ReadMapStart()
			if yyl505 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl505, d)
			}
		} else if yyct505 == codecSelferValueTypeArray4362 {
			yyl505 := r.ReadArrayStart()
			if yyl505 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl505, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *EvalSpecificRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys506Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys506Slc
	var yyhl506 bool = l >= 0
	for yyj506 := 0; ; yyj506++ {
		if yyhl506 {
			if yyj506 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys506Slc = r.DecodeBytes(yys506Slc, true, true)
		yys506 := string(yys506Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys506 {
		case "EvalID":
			if r.TryDecodeAsNil() {
				x.EvalID = ""
			} else {
				x.EvalID = string(r.DecodeString())
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		case "MinQueryIndex":
			if r.TryDecodeAsNil() {
				x.MinQueryIndex = 0
			} else {
				x.MinQueryIndex = uint64(r.DecodeUint(64))
			}
		case "MaxQueryTime":
			if r.TryDecodeAsNil() {
				x.MaxQueryTime = 0
			} else {
				x.MaxQueryTime = time.Duration(r.DecodeInt(64))
			}
		case "AllowStale":
			if r.TryDecodeAsNil() {
				x.AllowStale = false
			} else {
				x.AllowStale = bool(r.DecodeBool())
			}
		case "Prefix":
			if r.TryDecodeAsNil() {
				x.Prefix = ""
			} else {
				x.Prefix = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys506)
		} // end switch yys506
	} // end for yyj506
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *EvalSpecificRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj513 int
	var yyb513 bool
	var yyhl513 bool = l >= 0
	yyj513++
	if yyhl513 {
		yyb513 = yyj513 > l
	} else {
		yyb513 = r.CheckBreak()
	}
	if yyb513 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalID = ""
	} else {
		x.EvalID = string(r.DecodeString())
	}
	yyj513++
	if yyhl513 {
		yyb513 = yyj513 > l
	} else {
		yyb513 = r.CheckBreak()
	}
	if yyb513 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	yyj513++
	if yyhl513 {
		yyb513 = yyj513 > l
	} else {
		yyb513 = r.CheckBreak()
	}
	if yyb513 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MinQueryIndex = 0
	} else {
		x.MinQueryIndex = uint64(r.DecodeUint(64))
	}
	yyj513++
	if yyhl513 {
		yyb513 = yyj513 > l
	} else {
		yyb513 = r.CheckBreak()
	}
	if yyb513 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MaxQueryTime = 0
	} else {
		x.MaxQueryTime = time.Duration(r.DecodeInt(64))
	}
	yyj513++
	if yyhl513 {
		yyb513 = yyj513 > l
	} else {
		yyb513 = r.CheckBreak()
	}
	if yyb513 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllowStale = false
	} else {
		x.AllowStale = bool(r.DecodeBool())
	}
	yyj513++
	if yyhl513 {
		yyb513 = yyj513 > l
	} else {
		yyb513 = r.CheckBreak()
	}
	if yyb513 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Prefix = ""
	} else {
		x.Prefix = string(r.DecodeString())
	}
	for {
		yyj513++
		if yyhl513 {
			yyb513 = yyj513 > l
		} else {
			yyb513 = r.CheckBreak()
		}
		if yyb513 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj513-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *EvalAckRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym520 := z.EncBinary()
		_ = yym520
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep521 := !z.EncBinary()
			yy2arr521 := z.EncBasicHandle().StructToArray
			var yyq521 [3]bool
			_, _, _ = yysep521, yyq521, yy2arr521
			const yyr521 bool = false
			var yynn521 int
			if yyr521 || yy2arr521 {
				r.EncodeArrayStart(3)
			} else {
				yynn521 = 3
				for _, b := range yyq521 {
					if b {
						yynn521++
					}
				}
				r.EncodeMapStart(yynn521)
				yynn521 = 0
			}
			if yyr521 || yy2arr521 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym523 := z.EncBinary()
				_ = yym523
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym524 := z.EncBinary()
				_ = yym524
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			}
			if yyr521 || yy2arr521 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym526 := z.EncBinary()
				_ = yym526
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Token))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Token"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym527 := z.EncBinary()
				_ = yym527
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Token))
				}
			}
			if yyr521 || yy2arr521 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym529 := z.EncBinary()
				_ = yym529
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym530 := z.EncBinary()
				_ = yym530
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr521 || yy2arr521 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *EvalAckRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym531 := z.DecBinary()
	_ = yym531
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct532 := r.ContainerType()
		if yyct532 == codecSelferValueTypeMap4362 {
			yyl532 := r.ReadMapStart()
			if yyl532 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl532, d)
			}
		} else if yyct532 == codecSelferValueTypeArray4362 {
			yyl532 := r.ReadArrayStart()
			if yyl532 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl532, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *EvalAckRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys533Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys533Slc
	var yyhl533 bool = l >= 0
	for yyj533 := 0; ; yyj533++ {
		if yyhl533 {
			if yyj533 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys533Slc = r.DecodeBytes(yys533Slc, true, true)
		yys533 := string(yys533Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys533 {
		case "EvalID":
			if r.TryDecodeAsNil() {
				x.EvalID = ""
			} else {
				x.EvalID = string(r.DecodeString())
			}
		case "Token":
			if r.TryDecodeAsNil() {
				x.Token = ""
			} else {
				x.Token = string(r.DecodeString())
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys533)
		} // end switch yys533
	} // end for yyj533
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *EvalAckRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj537 int
	var yyb537 bool
	var yyhl537 bool = l >= 0
	yyj537++
	if yyhl537 {
		yyb537 = yyj537 > l
	} else {
		yyb537 = r.CheckBreak()
	}
	if yyb537 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalID = ""
	} else {
		x.EvalID = string(r.DecodeString())
	}
	yyj537++
	if yyhl537 {
		yyb537 = yyj537 > l
	} else {
		yyb537 = r.CheckBreak()
	}
	if yyb537 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Token = ""
	} else {
		x.Token = string(r.DecodeString())
	}
	yyj537++
	if yyhl537 {
		yyb537 = yyj537 > l
	} else {
		yyb537 = r.CheckBreak()
	}
	if yyb537 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj537++
		if yyhl537 {
			yyb537 = yyj537 > l
		} else {
			yyb537 = r.CheckBreak()
		}
		if yyb537 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj537-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *EvalDequeueRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym541 := z.EncBinary()
		_ = yym541
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep542 := !z.EncBinary()
			yy2arr542 := z.EncBasicHandle().StructToArray
			var yyq542 [3]bool
			_, _, _ = yysep542, yyq542, yy2arr542
			const yyr542 bool = false
			var yynn542 int
			if yyr542 || yy2arr542 {
				r.EncodeArrayStart(3)
			} else {
				yynn542 = 3
				for _, b := range yyq542 {
					if b {
						yynn542++
					}
				}
				r.EncodeMapStart(yynn542)
				yynn542 = 0
			}
			if yyr542 || yy2arr542 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Schedulers == nil {
					r.EncodeNil()
				} else {
					yym544 := z.EncBinary()
					_ = yym544
					if false {
					} else {
						z.F.EncSliceStringV(x.Schedulers, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Schedulers"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Schedulers == nil {
					r.EncodeNil()
				} else {
					yym545 := z.EncBinary()
					_ = yym545
					if false {
					} else {
						z.F.EncSliceStringV(x.Schedulers, false, e)
					}
				}
			}
			if yyr542 || yy2arr542 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym547 := z.EncBinary()
				_ = yym547
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Timeout) {
				} else {
					r.EncodeInt(int64(x.Timeout))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Timeout"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym548 := z.EncBinary()
				_ = yym548
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Timeout) {
				} else {
					r.EncodeInt(int64(x.Timeout))
				}
			}
			if yyr542 || yy2arr542 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym550 := z.EncBinary()
				_ = yym550
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym551 := z.EncBinary()
				_ = yym551
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr542 || yy2arr542 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *EvalDequeueRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym552 := z.DecBinary()
	_ = yym552
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct553 := r.ContainerType()
		if yyct553 == codecSelferValueTypeMap4362 {
			yyl553 := r.ReadMapStart()
			if yyl553 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl553, d)
			}
		} else if yyct553 == codecSelferValueTypeArray4362 {
			yyl553 := r.ReadArrayStart()
			if yyl553 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl553, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *EvalDequeueRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys554Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys554Slc
	var yyhl554 bool = l >= 0
	for yyj554 := 0; ; yyj554++ {
		if yyhl554 {
			if yyj554 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys554Slc = r.DecodeBytes(yys554Slc, true, true)
		yys554 := string(yys554Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys554 {
		case "Schedulers":
			if r.TryDecodeAsNil() {
				x.Schedulers = nil
			} else {
				yyv555 := &x.Schedulers
				yym556 := z.DecBinary()
				_ = yym556
				if false {
				} else {
					z.F.DecSliceStringX(yyv555, false, d)
				}
			}
		case "Timeout":
			if r.TryDecodeAsNil() {
				x.Timeout = 0
			} else {
				x.Timeout = time.Duration(r.DecodeInt(64))
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys554)
		} // end switch yys554
	} // end for yyj554
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *EvalDequeueRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj559 int
	var yyb559 bool
	var yyhl559 bool = l >= 0
	yyj559++
	if yyhl559 {
		yyb559 = yyj559 > l
	} else {
		yyb559 = r.CheckBreak()
	}
	if yyb559 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Schedulers = nil
	} else {
		yyv560 := &x.Schedulers
		yym561 := z.DecBinary()
		_ = yym561
		if false {
		} else {
			z.F.DecSliceStringX(yyv560, false, d)
		}
	}
	yyj559++
	if yyhl559 {
		yyb559 = yyj559 > l
	} else {
		yyb559 = r.CheckBreak()
	}
	if yyb559 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Timeout = 0
	} else {
		x.Timeout = time.Duration(r.DecodeInt(64))
	}
	yyj559++
	if yyhl559 {
		yyb559 = yyj559 > l
	} else {
		yyb559 = r.CheckBreak()
	}
	if yyb559 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj559++
		if yyhl559 {
			yyb559 = yyj559 > l
		} else {
			yyb559 = r.CheckBreak()
		}
		if yyb559 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj559-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *EvalListRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym564 := z.EncBinary()
		_ = yym564
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep565 := !z.EncBinary()
			yy2arr565 := z.EncBasicHandle().StructToArray
			var yyq565 [5]bool
			_, _, _ = yysep565, yyq565, yy2arr565
			const yyr565 bool = false
			var yynn565 int
			if yyr565 || yy2arr565 {
				r.EncodeArrayStart(5)
			} else {
				yynn565 = 5
				for _, b := range yyq565 {
					if b {
						yynn565++
					}
				}
				r.EncodeMapStart(yynn565)
				yynn565 = 0
			}
			if yyr565 || yy2arr565 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym567 := z.EncBinary()
				_ = yym567
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym568 := z.EncBinary()
				_ = yym568
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr565 || yy2arr565 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym570 := z.EncBinary()
				_ = yym570
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MinQueryIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym571 := z.EncBinary()
				_ = yym571
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			}
			if yyr565 || yy2arr565 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym573 := z.EncBinary()
				_ = yym573
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MaxQueryTime"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym574 := z.EncBinary()
				_ = yym574
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			}
			if yyr565 || yy2arr565 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym576 := z.EncBinary()
				_ = yym576
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllowStale"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym577 := z.EncBinary()
				_ = yym577
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			}
			if yyr565 || yy2arr565 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym579 := z.EncBinary()
				_ = yym579
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Prefix"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym580 := z.EncBinary()
				_ = yym580
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			}
			if yyr565 || yy2arr565 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *EvalListRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym581 := z.DecBinary()
	_ = yym581
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct582 := r.ContainerType()
		if yyct582 == codecSelferValueTypeMap4362 {
			yyl582 := r.ReadMapStart()
			if yyl582 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl582, d)
			}
		} else if yyct582 == codecSelferValueTypeArray4362 {
			yyl582 := r.ReadArrayStart()
			if yyl582 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl582, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *EvalListRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys583Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys583Slc
	var yyhl583 bool = l >= 0
	for yyj583 := 0; ; yyj583++ {
		if yyhl583 {
			if yyj583 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys583Slc = r.DecodeBytes(yys583Slc, true, true)
		yys583 := string(yys583Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys583 {
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		case "MinQueryIndex":
			if r.TryDecodeAsNil() {
				x.MinQueryIndex = 0
			} else {
				x.MinQueryIndex = uint64(r.DecodeUint(64))
			}
		case "MaxQueryTime":
			if r.TryDecodeAsNil() {
				x.MaxQueryTime = 0
			} else {
				x.MaxQueryTime = time.Duration(r.DecodeInt(64))
			}
		case "AllowStale":
			if r.TryDecodeAsNil() {
				x.AllowStale = false
			} else {
				x.AllowStale = bool(r.DecodeBool())
			}
		case "Prefix":
			if r.TryDecodeAsNil() {
				x.Prefix = ""
			} else {
				x.Prefix = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys583)
		} // end switch yys583
	} // end for yyj583
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *EvalListRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj589 int
	var yyb589 bool
	var yyhl589 bool = l >= 0
	yyj589++
	if yyhl589 {
		yyb589 = yyj589 > l
	} else {
		yyb589 = r.CheckBreak()
	}
	if yyb589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	yyj589++
	if yyhl589 {
		yyb589 = yyj589 > l
	} else {
		yyb589 = r.CheckBreak()
	}
	if yyb589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MinQueryIndex = 0
	} else {
		x.MinQueryIndex = uint64(r.DecodeUint(64))
	}
	yyj589++
	if yyhl589 {
		yyb589 = yyj589 > l
	} else {
		yyb589 = r.CheckBreak()
	}
	if yyb589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MaxQueryTime = 0
	} else {
		x.MaxQueryTime = time.Duration(r.DecodeInt(64))
	}
	yyj589++
	if yyhl589 {
		yyb589 = yyj589 > l
	} else {
		yyb589 = r.CheckBreak()
	}
	if yyb589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllowStale = false
	} else {
		x.AllowStale = bool(r.DecodeBool())
	}
	yyj589++
	if yyhl589 {
		yyb589 = yyj589 > l
	} else {
		yyb589 = r.CheckBreak()
	}
	if yyb589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Prefix = ""
	} else {
		x.Prefix = string(r.DecodeString())
	}
	for {
		yyj589++
		if yyhl589 {
			yyb589 = yyj589 > l
		} else {
			yyb589 = r.CheckBreak()
		}
		if yyb589 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj589-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *PlanRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym595 := z.EncBinary()
		_ = yym595
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep596 := !z.EncBinary()
			yy2arr596 := z.EncBasicHandle().StructToArray
			var yyq596 [2]bool
			_, _, _ = yysep596, yyq596, yy2arr596
			const yyr596 bool = false
			var yynn596 int
			if yyr596 || yy2arr596 {
				r.EncodeArrayStart(2)
			} else {
				yynn596 = 2
				for _, b := range yyq596 {
					if b {
						yynn596++
					}
				}
				r.EncodeMapStart(yynn596)
				yynn596 = 0
			}
			if yyr596 || yy2arr596 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Plan == nil {
					r.EncodeNil()
				} else {
					x.Plan.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Plan"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Plan == nil {
					r.EncodeNil()
				} else {
					x.Plan.CodecEncodeSelf(e)
				}
			}
			if yyr596 || yy2arr596 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym599 := z.EncBinary()
				_ = yym599
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym600 := z.EncBinary()
				_ = yym600
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr596 || yy2arr596 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *PlanRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym601 := z.DecBinary()
	_ = yym601
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct602 := r.ContainerType()
		if yyct602 == codecSelferValueTypeMap4362 {
			yyl602 := r.ReadMapStart()
			if yyl602 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl602, d)
			}
		} else if yyct602 == codecSelferValueTypeArray4362 {
			yyl602 := r.ReadArrayStart()
			if yyl602 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl602, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *PlanRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys603Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys603Slc
	var yyhl603 bool = l >= 0
	for yyj603 := 0; ; yyj603++ {
		if yyhl603 {
			if yyj603 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys603Slc = r.DecodeBytes(yys603Slc, true, true)
		yys603 := string(yys603Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys603 {
		case "Plan":
			if r.TryDecodeAsNil() {
				if x.Plan != nil {
					x.Plan = nil
				}
			} else {
				if x.Plan == nil {
					x.Plan = new(Plan)
				}
				x.Plan.CodecDecodeSelf(d)
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys603)
		} // end switch yys603
	} // end for yyj603
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *PlanRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj606 int
	var yyb606 bool
	var yyhl606 bool = l >= 0
	yyj606++
	if yyhl606 {
		yyb606 = yyj606 > l
	} else {
		yyb606 = r.CheckBreak()
	}
	if yyb606 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Plan != nil {
			x.Plan = nil
		}
	} else {
		if x.Plan == nil {
			x.Plan = new(Plan)
		}
		x.Plan.CodecDecodeSelf(d)
	}
	yyj606++
	if yyhl606 {
		yyb606 = yyj606 > l
	} else {
		yyb606 = r.CheckBreak()
	}
	if yyb606 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj606++
		if yyhl606 {
			yyb606 = yyj606 > l
		} else {
			yyb606 = r.CheckBreak()
		}
		if yyb606 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj606-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *AllocUpdateRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym609 := z.EncBinary()
		_ = yym609
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep610 := !z.EncBinary()
			yy2arr610 := z.EncBasicHandle().StructToArray
			var yyq610 [3]bool
			_, _, _ = yysep610, yyq610, yy2arr610
			const yyr610 bool = false
			var yynn610 int
			if yyr610 || yy2arr610 {
				r.EncodeArrayStart(3)
			} else {
				yynn610 = 3
				for _, b := range yyq610 {
					if b {
						yynn610++
					}
				}
				r.EncodeMapStart(yynn610)
				yynn610 = 0
			}
			if yyr610 || yy2arr610 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Alloc == nil {
					r.EncodeNil()
				} else {
					yym612 := z.EncBinary()
					_ = yym612
					if false {
					} else {
						h.encSlicePtrtoAllocation(([]*Allocation)(x.Alloc), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Alloc"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Alloc == nil {
					r.EncodeNil()
				} else {
					yym613 := z.EncBinary()
					_ = yym613
					if false {
					} else {
						h.encSlicePtrtoAllocation(([]*Allocation)(x.Alloc), e)
					}
				}
			}
			if yyr610 || yy2arr610 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Job == nil {
					r.EncodeNil()
				} else {
					x.Job.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Job"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Job == nil {
					r.EncodeNil()
				} else {
					x.Job.CodecEncodeSelf(e)
				}
			}
			if yyr610 || yy2arr610 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym616 := z.EncBinary()
				_ = yym616
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym617 := z.EncBinary()
				_ = yym617
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr610 || yy2arr610 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *AllocUpdateRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym618 := z.DecBinary()
	_ = yym618
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct619 := r.ContainerType()
		if yyct619 == codecSelferValueTypeMap4362 {
			yyl619 := r.ReadMapStart()
			if yyl619 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl619, d)
			}
		} else if yyct619 == codecSelferValueTypeArray4362 {
			yyl619 := r.ReadArrayStart()
			if yyl619 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl619, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *AllocUpdateRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys620Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys620Slc
	var yyhl620 bool = l >= 0
	for yyj620 := 0; ; yyj620++ {
		if yyhl620 {
			if yyj620 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys620Slc = r.DecodeBytes(yys620Slc, true, true)
		yys620 := string(yys620Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys620 {
		case "Alloc":
			if r.TryDecodeAsNil() {
				x.Alloc = nil
			} else {
				yyv621 := &x.Alloc
				yym622 := z.DecBinary()
				_ = yym622
				if false {
				} else {
					h.decSlicePtrtoAllocation((*[]*Allocation)(yyv621), d)
				}
			}
		case "Job":
			if r.TryDecodeAsNil() {
				if x.Job != nil {
					x.Job = nil
				}
			} else {
				if x.Job == nil {
					x.Job = new(Job)
				}
				x.Job.CodecDecodeSelf(d)
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys620)
		} // end switch yys620
	} // end for yyj620
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *AllocUpdateRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj625 int
	var yyb625 bool
	var yyhl625 bool = l >= 0
	yyj625++
	if yyhl625 {
		yyb625 = yyj625 > l
	} else {
		yyb625 = r.CheckBreak()
	}
	if yyb625 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Alloc = nil
	} else {
		yyv626 := &x.Alloc
		yym627 := z.DecBinary()
		_ = yym627
		if false {
		} else {
			h.decSlicePtrtoAllocation((*[]*Allocation)(yyv626), d)
		}
	}
	yyj625++
	if yyhl625 {
		yyb625 = yyj625 > l
	} else {
		yyb625 = r.CheckBreak()
	}
	if yyb625 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Job != nil {
			x.Job = nil
		}
	} else {
		if x.Job == nil {
			x.Job = new(Job)
		}
		x.Job.CodecDecodeSelf(d)
	}
	yyj625++
	if yyhl625 {
		yyb625 = yyj625 > l
	} else {
		yyb625 = r.CheckBreak()
	}
	if yyb625 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj625++
		if yyhl625 {
			yyb625 = yyj625 > l
		} else {
			yyb625 = r.CheckBreak()
		}
		if yyb625 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj625-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *AllocListRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym630 := z.EncBinary()
		_ = yym630
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep631 := !z.EncBinary()
			yy2arr631 := z.EncBasicHandle().StructToArray
			var yyq631 [5]bool
			_, _, _ = yysep631, yyq631, yy2arr631
			const yyr631 bool = false
			var yynn631 int
			if yyr631 || yy2arr631 {
				r.EncodeArrayStart(5)
			} else {
				yynn631 = 5
				for _, b := range yyq631 {
					if b {
						yynn631++
					}
				}
				r.EncodeMapStart(yynn631)
				yynn631 = 0
			}
			if yyr631 || yy2arr631 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym633 := z.EncBinary()
				_ = yym633
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym634 := z.EncBinary()
				_ = yym634
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr631 || yy2arr631 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym636 := z.EncBinary()
				_ = yym636
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MinQueryIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym637 := z.EncBinary()
				_ = yym637
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			}
			if yyr631 || yy2arr631 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym639 := z.EncBinary()
				_ = yym639
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MaxQueryTime"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym640 := z.EncBinary()
				_ = yym640
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			}
			if yyr631 || yy2arr631 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym642 := z.EncBinary()
				_ = yym642
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllowStale"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym643 := z.EncBinary()
				_ = yym643
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			}
			if yyr631 || yy2arr631 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym645 := z.EncBinary()
				_ = yym645
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Prefix"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym646 := z.EncBinary()
				_ = yym646
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			}
			if yyr631 || yy2arr631 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *AllocListRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym647 := z.DecBinary()
	_ = yym647
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct648 := r.ContainerType()
		if yyct648 == codecSelferValueTypeMap4362 {
			yyl648 := r.ReadMapStart()
			if yyl648 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl648, d)
			}
		} else if yyct648 == codecSelferValueTypeArray4362 {
			yyl648 := r.ReadArrayStart()
			if yyl648 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl648, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *AllocListRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys649Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys649Slc
	var yyhl649 bool = l >= 0
	for yyj649 := 0; ; yyj649++ {
		if yyhl649 {
			if yyj649 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys649Slc = r.DecodeBytes(yys649Slc, true, true)
		yys649 := string(yys649Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys649 {
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		case "MinQueryIndex":
			if r.TryDecodeAsNil() {
				x.MinQueryIndex = 0
			} else {
				x.MinQueryIndex = uint64(r.DecodeUint(64))
			}
		case "MaxQueryTime":
			if r.TryDecodeAsNil() {
				x.MaxQueryTime = 0
			} else {
				x.MaxQueryTime = time.Duration(r.DecodeInt(64))
			}
		case "AllowStale":
			if r.TryDecodeAsNil() {
				x.AllowStale = false
			} else {
				x.AllowStale = bool(r.DecodeBool())
			}
		case "Prefix":
			if r.TryDecodeAsNil() {
				x.Prefix = ""
			} else {
				x.Prefix = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys649)
		} // end switch yys649
	} // end for yyj649
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *AllocListRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj655 int
	var yyb655 bool
	var yyhl655 bool = l >= 0
	yyj655++
	if yyhl655 {
		yyb655 = yyj655 > l
	} else {
		yyb655 = r.CheckBreak()
	}
	if yyb655 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	yyj655++
	if yyhl655 {
		yyb655 = yyj655 > l
	} else {
		yyb655 = r.CheckBreak()
	}
	if yyb655 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MinQueryIndex = 0
	} else {
		x.MinQueryIndex = uint64(r.DecodeUint(64))
	}
	yyj655++
	if yyhl655 {
		yyb655 = yyj655 > l
	} else {
		yyb655 = r.CheckBreak()
	}
	if yyb655 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MaxQueryTime = 0
	} else {
		x.MaxQueryTime = time.Duration(r.DecodeInt(64))
	}
	yyj655++
	if yyhl655 {
		yyb655 = yyj655 > l
	} else {
		yyb655 = r.CheckBreak()
	}
	if yyb655 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllowStale = false
	} else {
		x.AllowStale = bool(r.DecodeBool())
	}
	yyj655++
	if yyhl655 {
		yyb655 = yyj655 > l
	} else {
		yyb655 = r.CheckBreak()
	}
	if yyb655 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Prefix = ""
	} else {
		x.Prefix = string(r.DecodeString())
	}
	for {
		yyj655++
		if yyhl655 {
			yyb655 = yyj655 > l
		} else {
			yyb655 = r.CheckBreak()
		}
		if yyb655 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj655-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *AllocSpecificRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym661 := z.EncBinary()
		_ = yym661
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep662 := !z.EncBinary()
			yy2arr662 := z.EncBasicHandle().StructToArray
			var yyq662 [6]bool
			_, _, _ = yysep662, yyq662, yy2arr662
			const yyr662 bool = false
			var yynn662 int
			if yyr662 || yy2arr662 {
				r.EncodeArrayStart(6)
			} else {
				yynn662 = 6
				for _, b := range yyq662 {
					if b {
						yynn662++
					}
				}
				r.EncodeMapStart(yynn662)
				yynn662 = 0
			}
			if yyr662 || yy2arr662 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym664 := z.EncBinary()
				_ = yym664
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.AllocID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllocID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym665 := z.EncBinary()
				_ = yym665
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.AllocID))
				}
			}
			if yyr662 || yy2arr662 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym667 := z.EncBinary()
				_ = yym667
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym668 := z.EncBinary()
				_ = yym668
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr662 || yy2arr662 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym670 := z.EncBinary()
				_ = yym670
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MinQueryIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym671 := z.EncBinary()
				_ = yym671
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			}
			if yyr662 || yy2arr662 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym673 := z.EncBinary()
				_ = yym673
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MaxQueryTime"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym674 := z.EncBinary()
				_ = yym674
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			}
			if yyr662 || yy2arr662 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym676 := z.EncBinary()
				_ = yym676
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllowStale"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym677 := z.EncBinary()
				_ = yym677
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			}
			if yyr662 || yy2arr662 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym679 := z.EncBinary()
				_ = yym679
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Prefix"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym680 := z.EncBinary()
				_ = yym680
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			}
			if yyr662 || yy2arr662 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *AllocSpecificRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym681 := z.DecBinary()
	_ = yym681
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct682 := r.ContainerType()
		if yyct682 == codecSelferValueTypeMap4362 {
			yyl682 := r.ReadMapStart()
			if yyl682 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl682, d)
			}
		} else if yyct682 == codecSelferValueTypeArray4362 {
			yyl682 := r.ReadArrayStart()
			if yyl682 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl682, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *AllocSpecificRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys683Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys683Slc
	var yyhl683 bool = l >= 0
	for yyj683 := 0; ; yyj683++ {
		if yyhl683 {
			if yyj683 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys683Slc = r.DecodeBytes(yys683Slc, true, true)
		yys683 := string(yys683Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys683 {
		case "AllocID":
			if r.TryDecodeAsNil() {
				x.AllocID = ""
			} else {
				x.AllocID = string(r.DecodeString())
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		case "MinQueryIndex":
			if r.TryDecodeAsNil() {
				x.MinQueryIndex = 0
			} else {
				x.MinQueryIndex = uint64(r.DecodeUint(64))
			}
		case "MaxQueryTime":
			if r.TryDecodeAsNil() {
				x.MaxQueryTime = 0
			} else {
				x.MaxQueryTime = time.Duration(r.DecodeInt(64))
			}
		case "AllowStale":
			if r.TryDecodeAsNil() {
				x.AllowStale = false
			} else {
				x.AllowStale = bool(r.DecodeBool())
			}
		case "Prefix":
			if r.TryDecodeAsNil() {
				x.Prefix = ""
			} else {
				x.Prefix = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys683)
		} // end switch yys683
	} // end for yyj683
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *AllocSpecificRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj690 int
	var yyb690 bool
	var yyhl690 bool = l >= 0
	yyj690++
	if yyhl690 {
		yyb690 = yyj690 > l
	} else {
		yyb690 = r.CheckBreak()
	}
	if yyb690 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllocID = ""
	} else {
		x.AllocID = string(r.DecodeString())
	}
	yyj690++
	if yyhl690 {
		yyb690 = yyj690 > l
	} else {
		yyb690 = r.CheckBreak()
	}
	if yyb690 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	yyj690++
	if yyhl690 {
		yyb690 = yyj690 > l
	} else {
		yyb690 = r.CheckBreak()
	}
	if yyb690 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MinQueryIndex = 0
	} else {
		x.MinQueryIndex = uint64(r.DecodeUint(64))
	}
	yyj690++
	if yyhl690 {
		yyb690 = yyj690 > l
	} else {
		yyb690 = r.CheckBreak()
	}
	if yyb690 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MaxQueryTime = 0
	} else {
		x.MaxQueryTime = time.Duration(r.DecodeInt(64))
	}
	yyj690++
	if yyhl690 {
		yyb690 = yyj690 > l
	} else {
		yyb690 = r.CheckBreak()
	}
	if yyb690 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllowStale = false
	} else {
		x.AllowStale = bool(r.DecodeBool())
	}
	yyj690++
	if yyhl690 {
		yyb690 = yyj690 > l
	} else {
		yyb690 = r.CheckBreak()
	}
	if yyb690 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Prefix = ""
	} else {
		x.Prefix = string(r.DecodeString())
	}
	for {
		yyj690++
		if yyhl690 {
			yyb690 = yyj690 > l
		} else {
			yyb690 = r.CheckBreak()
		}
		if yyb690 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj690-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *AllocsGetRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym697 := z.EncBinary()
		_ = yym697
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep698 := !z.EncBinary()
			yy2arr698 := z.EncBasicHandle().StructToArray
			var yyq698 [6]bool
			_, _, _ = yysep698, yyq698, yy2arr698
			const yyr698 bool = false
			var yynn698 int
			if yyr698 || yy2arr698 {
				r.EncodeArrayStart(6)
			} else {
				yynn698 = 6
				for _, b := range yyq698 {
					if b {
						yynn698++
					}
				}
				r.EncodeMapStart(yynn698)
				yynn698 = 0
			}
			if yyr698 || yy2arr698 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.AllocIDs == nil {
					r.EncodeNil()
				} else {
					yym700 := z.EncBinary()
					_ = yym700
					if false {
					} else {
						z.F.EncSliceStringV(x.AllocIDs, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllocIDs"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.AllocIDs == nil {
					r.EncodeNil()
				} else {
					yym701 := z.EncBinary()
					_ = yym701
					if false {
					} else {
						z.F.EncSliceStringV(x.AllocIDs, false, e)
					}
				}
			}
			if yyr698 || yy2arr698 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym703 := z.EncBinary()
				_ = yym703
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym704 := z.EncBinary()
				_ = yym704
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr698 || yy2arr698 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym706 := z.EncBinary()
				_ = yym706
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MinQueryIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym707 := z.EncBinary()
				_ = yym707
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			}
			if yyr698 || yy2arr698 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym709 := z.EncBinary()
				_ = yym709
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MaxQueryTime"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym710 := z.EncBinary()
				_ = yym710
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			}
			if yyr698 || yy2arr698 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym712 := z.EncBinary()
				_ = yym712
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllowStale"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym713 := z.EncBinary()
				_ = yym713
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			}
			if yyr698 || yy2arr698 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym715 := z.EncBinary()
				_ = yym715
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Prefix"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym716 := z.EncBinary()
				_ = yym716
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			}
			if yyr698 || yy2arr698 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *AllocsGetRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym717 := z.DecBinary()
	_ = yym717
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct718 := r.ContainerType()
		if yyct718 == codecSelferValueTypeMap4362 {
			yyl718 := r.ReadMapStart()
			if yyl718 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl718, d)
			}
		} else if yyct718 == codecSelferValueTypeArray4362 {
			yyl718 := r.ReadArrayStart()
			if yyl718 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl718, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *AllocsGetRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys719Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys719Slc
	var yyhl719 bool = l >= 0
	for yyj719 := 0; ; yyj719++ {
		if yyhl719 {
			if yyj719 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys719Slc = r.DecodeBytes(yys719Slc, true, true)
		yys719 := string(yys719Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys719 {
		case "AllocIDs":
			if r.TryDecodeAsNil() {
				x.AllocIDs = nil
			} else {
				yyv720 := &x.AllocIDs
				yym721 := z.DecBinary()
				_ = yym721
				if false {
				} else {
					z.F.DecSliceStringX(yyv720, false, d)
				}
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		case "MinQueryIndex":
			if r.TryDecodeAsNil() {
				x.MinQueryIndex = 0
			} else {
				x.MinQueryIndex = uint64(r.DecodeUint(64))
			}
		case "MaxQueryTime":
			if r.TryDecodeAsNil() {
				x.MaxQueryTime = 0
			} else {
				x.MaxQueryTime = time.Duration(r.DecodeInt(64))
			}
		case "AllowStale":
			if r.TryDecodeAsNil() {
				x.AllowStale = false
			} else {
				x.AllowStale = bool(r.DecodeBool())
			}
		case "Prefix":
			if r.TryDecodeAsNil() {
				x.Prefix = ""
			} else {
				x.Prefix = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys719)
		} // end switch yys719
	} // end for yyj719
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *AllocsGetRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj727 int
	var yyb727 bool
	var yyhl727 bool = l >= 0
	yyj727++
	if yyhl727 {
		yyb727 = yyj727 > l
	} else {
		yyb727 = r.CheckBreak()
	}
	if yyb727 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllocIDs = nil
	} else {
		yyv728 := &x.AllocIDs
		yym729 := z.DecBinary()
		_ = yym729
		if false {
		} else {
			z.F.DecSliceStringX(yyv728, false, d)
		}
	}
	yyj727++
	if yyhl727 {
		yyb727 = yyj727 > l
	} else {
		yyb727 = r.CheckBreak()
	}
	if yyb727 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	yyj727++
	if yyhl727 {
		yyb727 = yyj727 > l
	} else {
		yyb727 = r.CheckBreak()
	}
	if yyb727 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MinQueryIndex = 0
	} else {
		x.MinQueryIndex = uint64(r.DecodeUint(64))
	}
	yyj727++
	if yyhl727 {
		yyb727 = yyj727 > l
	} else {
		yyb727 = r.CheckBreak()
	}
	if yyb727 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MaxQueryTime = 0
	} else {
		x.MaxQueryTime = time.Duration(r.DecodeInt(64))
	}
	yyj727++
	if yyhl727 {
		yyb727 = yyj727 > l
	} else {
		yyb727 = r.CheckBreak()
	}
	if yyb727 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllowStale = false
	} else {
		x.AllowStale = bool(r.DecodeBool())
	}
	yyj727++
	if yyhl727 {
		yyb727 = yyj727 > l
	} else {
		yyb727 = r.CheckBreak()
	}
	if yyb727 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Prefix = ""
	} else {
		x.Prefix = string(r.DecodeString())
	}
	for {
		yyj727++
		if yyhl727 {
			yyb727 = yyj727 > l
		} else {
			yyb727 = r.CheckBreak()
		}
		if yyb727 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj727-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *PeriodicForceRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym735 := z.EncBinary()
		_ = yym735
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep736 := !z.EncBinary()
			yy2arr736 := z.EncBasicHandle().StructToArray
			var yyq736 [2]bool
			_, _, _ = yysep736, yyq736, yy2arr736
			const yyr736 bool = false
			var yynn736 int
			if yyr736 || yy2arr736 {
				r.EncodeArrayStart(2)
			} else {
				yynn736 = 2
				for _, b := range yyq736 {
					if b {
						yynn736++
					}
				}
				r.EncodeMapStart(yynn736)
				yynn736 = 0
			}
			if yyr736 || yy2arr736 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym738 := z.EncBinary()
				_ = yym738
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym739 := z.EncBinary()
				_ = yym739
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			}
			if yyr736 || yy2arr736 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym741 := z.EncBinary()
				_ = yym741
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym742 := z.EncBinary()
				_ = yym742
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr736 || yy2arr736 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *PeriodicForceRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym743 := z.DecBinary()
	_ = yym743
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct744 := r.ContainerType()
		if yyct744 == codecSelferValueTypeMap4362 {
			yyl744 := r.ReadMapStart()
			if yyl744 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl744, d)
			}
		} else if yyct744 == codecSelferValueTypeArray4362 {
			yyl744 := r.ReadArrayStart()
			if yyl744 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl744, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *PeriodicForceRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys745Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys745Slc
	var yyhl745 bool = l >= 0
	for yyj745 := 0; ; yyj745++ {
		if yyhl745 {
			if yyj745 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys745Slc = r.DecodeBytes(yys745Slc, true, true)
		yys745 := string(yys745Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys745 {
		case "JobID":
			if r.TryDecodeAsNil() {
				x.JobID = ""
			} else {
				x.JobID = string(r.DecodeString())
			}
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys745)
		} // end switch yys745
	} // end for yyj745
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *PeriodicForceRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj748 int
	var yyb748 bool
	var yyhl748 bool = l >= 0
	yyj748++
	if yyhl748 {
		yyb748 = yyj748 > l
	} else {
		yyb748 = r.CheckBreak()
	}
	if yyb748 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobID = ""
	} else {
		x.JobID = string(r.DecodeString())
	}
	yyj748++
	if yyhl748 {
		yyb748 = yyj748 > l
	} else {
		yyb748 = r.CheckBreak()
	}
	if yyb748 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	for {
		yyj748++
		if yyhl748 {
			yyb748 = yyj748 > l
		} else {
			yyb748 = r.CheckBreak()
		}
		if yyb748 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj748-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *GenericRequest) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym751 := z.EncBinary()
		_ = yym751
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep752 := !z.EncBinary()
			yy2arr752 := z.EncBasicHandle().StructToArray
			var yyq752 [5]bool
			_, _, _ = yysep752, yyq752, yy2arr752
			const yyr752 bool = false
			var yynn752 int
			if yyr752 || yy2arr752 {
				r.EncodeArrayStart(5)
			} else {
				yynn752 = 5
				for _, b := range yyq752 {
					if b {
						yynn752++
					}
				}
				r.EncodeMapStart(yynn752)
				yynn752 = 0
			}
			if yyr752 || yy2arr752 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym754 := z.EncBinary()
				_ = yym754
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym755 := z.EncBinary()
				_ = yym755
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr752 || yy2arr752 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym757 := z.EncBinary()
				_ = yym757
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MinQueryIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym758 := z.EncBinary()
				_ = yym758
				if false {
				} else {
					r.EncodeUint(uint64(x.MinQueryIndex))
				}
			}
			if yyr752 || yy2arr752 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym760 := z.EncBinary()
				_ = yym760
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MaxQueryTime"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym761 := z.EncBinary()
				_ = yym761
				if false {
				} else if z.HasExtensions() && z.EncExt(x.MaxQueryTime) {
				} else {
					r.EncodeInt(int64(x.MaxQueryTime))
				}
			}
			if yyr752 || yy2arr752 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym763 := z.EncBinary()
				_ = yym763
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllowStale"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym764 := z.EncBinary()
				_ = yym764
				if false {
				} else {
					r.EncodeBool(bool(x.AllowStale))
				}
			}
			if yyr752 || yy2arr752 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym766 := z.EncBinary()
				_ = yym766
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Prefix"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym767 := z.EncBinary()
				_ = yym767
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Prefix))
				}
			}
			if yyr752 || yy2arr752 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *GenericRequest) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym768 := z.DecBinary()
	_ = yym768
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct769 := r.ContainerType()
		if yyct769 == codecSelferValueTypeMap4362 {
			yyl769 := r.ReadMapStart()
			if yyl769 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl769, d)
			}
		} else if yyct769 == codecSelferValueTypeArray4362 {
			yyl769 := r.ReadArrayStart()
			if yyl769 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl769, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *GenericRequest) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys770Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys770Slc
	var yyhl770 bool = l >= 0
	for yyj770 := 0; ; yyj770++ {
		if yyhl770 {
			if yyj770 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys770Slc = r.DecodeBytes(yys770Slc, true, true)
		yys770 := string(yys770Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys770 {
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		case "MinQueryIndex":
			if r.TryDecodeAsNil() {
				x.MinQueryIndex = 0
			} else {
				x.MinQueryIndex = uint64(r.DecodeUint(64))
			}
		case "MaxQueryTime":
			if r.TryDecodeAsNil() {
				x.MaxQueryTime = 0
			} else {
				x.MaxQueryTime = time.Duration(r.DecodeInt(64))
			}
		case "AllowStale":
			if r.TryDecodeAsNil() {
				x.AllowStale = false
			} else {
				x.AllowStale = bool(r.DecodeBool())
			}
		case "Prefix":
			if r.TryDecodeAsNil() {
				x.Prefix = ""
			} else {
				x.Prefix = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys770)
		} // end switch yys770
	} // end for yyj770
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *GenericRequest) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj776 int
	var yyb776 bool
	var yyhl776 bool = l >= 0
	yyj776++
	if yyhl776 {
		yyb776 = yyj776 > l
	} else {
		yyb776 = r.CheckBreak()
	}
	if yyb776 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	yyj776++
	if yyhl776 {
		yyb776 = yyj776 > l
	} else {
		yyb776 = r.CheckBreak()
	}
	if yyb776 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MinQueryIndex = 0
	} else {
		x.MinQueryIndex = uint64(r.DecodeUint(64))
	}
	yyj776++
	if yyhl776 {
		yyb776 = yyj776 > l
	} else {
		yyb776 = r.CheckBreak()
	}
	if yyb776 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MaxQueryTime = 0
	} else {
		x.MaxQueryTime = time.Duration(r.DecodeInt(64))
	}
	yyj776++
	if yyhl776 {
		yyb776 = yyj776 > l
	} else {
		yyb776 = r.CheckBreak()
	}
	if yyb776 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllowStale = false
	} else {
		x.AllowStale = bool(r.DecodeBool())
	}
	yyj776++
	if yyhl776 {
		yyb776 = yyj776 > l
	} else {
		yyb776 = r.CheckBreak()
	}
	if yyb776 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Prefix = ""
	} else {
		x.Prefix = string(r.DecodeString())
	}
	for {
		yyj776++
		if yyhl776 {
			yyb776 = yyj776 > l
		} else {
			yyb776 = r.CheckBreak()
		}
		if yyb776 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj776-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *GenericResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym782 := z.EncBinary()
		_ = yym782
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep783 := !z.EncBinary()
			yy2arr783 := z.EncBasicHandle().StructToArray
			var yyq783 [1]bool
			_, _, _ = yysep783, yyq783, yy2arr783
			const yyr783 bool = false
			var yynn783 int
			if yyr783 || yy2arr783 {
				r.EncodeArrayStart(1)
			} else {
				yynn783 = 1
				for _, b := range yyq783 {
					if b {
						yynn783++
					}
				}
				r.EncodeMapStart(yynn783)
				yynn783 = 0
			}
			if yyr783 || yy2arr783 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym785 := z.EncBinary()
				_ = yym785
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym786 := z.EncBinary()
				_ = yym786
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr783 || yy2arr783 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *GenericResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym787 := z.DecBinary()
	_ = yym787
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct788 := r.ContainerType()
		if yyct788 == codecSelferValueTypeMap4362 {
			yyl788 := r.ReadMapStart()
			if yyl788 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl788, d)
			}
		} else if yyct788 == codecSelferValueTypeArray4362 {
			yyl788 := r.ReadArrayStart()
			if yyl788 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl788, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *GenericResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys789Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys789Slc
	var yyhl789 bool = l >= 0
	for yyj789 := 0; ; yyj789++ {
		if yyhl789 {
			if yyj789 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys789Slc = r.DecodeBytes(yys789Slc, true, true)
		yys789 := string(yys789Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys789 {
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys789)
		} // end switch yys789
	} // end for yyj789
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *GenericResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj791 int
	var yyb791 bool
	var yyhl791 bool = l >= 0
	yyj791++
	if yyhl791 {
		yyb791 = yyj791 > l
	} else {
		yyb791 = r.CheckBreak()
	}
	if yyb791 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	for {
		yyj791++
		if yyhl791 {
			yyb791 = yyj791 > l
		} else {
			yyb791 = r.CheckBreak()
		}
		if yyb791 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj791-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *VersionResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym793 := z.EncBinary()
		_ = yym793
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep794 := !z.EncBinary()
			yy2arr794 := z.EncBasicHandle().StructToArray
			var yyq794 [5]bool
			_, _, _ = yysep794, yyq794, yy2arr794
			const yyr794 bool = false
			var yynn794 int
			if yyr794 || yy2arr794 {
				r.EncodeArrayStart(5)
			} else {
				yynn794 = 5
				for _, b := range yyq794 {
					if b {
						yynn794++
					}
				}
				r.EncodeMapStart(yynn794)
				yynn794 = 0
			}
			if yyr794 || yy2arr794 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym796 := z.EncBinary()
				_ = yym796
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Build))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Build"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym797 := z.EncBinary()
				_ = yym797
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Build))
				}
			}
			if yyr794 || yy2arr794 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Versions == nil {
					r.EncodeNil()
				} else {
					yym799 := z.EncBinary()
					_ = yym799
					if false {
					} else {
						z.F.EncMapStringIntV(x.Versions, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Versions"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Versions == nil {
					r.EncodeNil()
				} else {
					yym800 := z.EncBinary()
					_ = yym800
					if false {
					} else {
						z.F.EncMapStringIntV(x.Versions, false, e)
					}
				}
			}
			if yyr794 || yy2arr794 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym802 := z.EncBinary()
				_ = yym802
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym803 := z.EncBinary()
				_ = yym803
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr794 || yy2arr794 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym805 := z.EncBinary()
				_ = yym805
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym806 := z.EncBinary()
				_ = yym806
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr794 || yy2arr794 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym808 := z.EncBinary()
				_ = yym808
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym809 := z.EncBinary()
				_ = yym809
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr794 || yy2arr794 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *VersionResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym810 := z.DecBinary()
	_ = yym810
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct811 := r.ContainerType()
		if yyct811 == codecSelferValueTypeMap4362 {
			yyl811 := r.ReadMapStart()
			if yyl811 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl811, d)
			}
		} else if yyct811 == codecSelferValueTypeArray4362 {
			yyl811 := r.ReadArrayStart()
			if yyl811 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl811, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *VersionResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys812Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys812Slc
	var yyhl812 bool = l >= 0
	for yyj812 := 0; ; yyj812++ {
		if yyhl812 {
			if yyj812 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys812Slc = r.DecodeBytes(yys812Slc, true, true)
		yys812 := string(yys812Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys812 {
		case "Build":
			if r.TryDecodeAsNil() {
				x.Build = ""
			} else {
				x.Build = string(r.DecodeString())
			}
		case "Versions":
			if r.TryDecodeAsNil() {
				x.Versions = nil
			} else {
				yyv814 := &x.Versions
				yym815 := z.DecBinary()
				_ = yym815
				if false {
				} else {
					z.F.DecMapStringIntX(yyv814, false, d)
				}
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys812)
		} // end switch yys812
	} // end for yyj812
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *VersionResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj819 int
	var yyb819 bool
	var yyhl819 bool = l >= 0
	yyj819++
	if yyhl819 {
		yyb819 = yyj819 > l
	} else {
		yyb819 = r.CheckBreak()
	}
	if yyb819 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Build = ""
	} else {
		x.Build = string(r.DecodeString())
	}
	yyj819++
	if yyhl819 {
		yyb819 = yyj819 > l
	} else {
		yyb819 = r.CheckBreak()
	}
	if yyb819 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Versions = nil
	} else {
		yyv821 := &x.Versions
		yym822 := z.DecBinary()
		_ = yym822
		if false {
		} else {
			z.F.DecMapStringIntX(yyv821, false, d)
		}
	}
	yyj819++
	if yyhl819 {
		yyb819 = yyj819 > l
	} else {
		yyb819 = r.CheckBreak()
	}
	if yyb819 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj819++
	if yyhl819 {
		yyb819 = yyj819 > l
	} else {
		yyb819 = r.CheckBreak()
	}
	if yyb819 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj819++
	if yyhl819 {
		yyb819 = yyj819 > l
	} else {
		yyb819 = r.CheckBreak()
	}
	if yyb819 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj819++
		if yyhl819 {
			yyb819 = yyj819 > l
		} else {
			yyb819 = r.CheckBreak()
		}
		if yyb819 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj819-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobRegisterResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym826 := z.EncBinary()
		_ = yym826
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep827 := !z.EncBinary()
			yy2arr827 := z.EncBasicHandle().StructToArray
			var yyq827 [6]bool
			_, _, _ = yysep827, yyq827, yy2arr827
			const yyr827 bool = false
			var yynn827 int
			if yyr827 || yy2arr827 {
				r.EncodeArrayStart(6)
			} else {
				yynn827 = 6
				for _, b := range yyq827 {
					if b {
						yynn827++
					}
				}
				r.EncodeMapStart(yynn827)
				yynn827 = 0
			}
			if yyr827 || yy2arr827 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym829 := z.EncBinary()
				_ = yym829
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym830 := z.EncBinary()
				_ = yym830
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			}
			if yyr827 || yy2arr827 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym832 := z.EncBinary()
				_ = yym832
				if false {
				} else {
					r.EncodeUint(uint64(x.EvalCreateIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalCreateIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym833 := z.EncBinary()
				_ = yym833
				if false {
				} else {
					r.EncodeUint(uint64(x.EvalCreateIndex))
				}
			}
			if yyr827 || yy2arr827 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym835 := z.EncBinary()
				_ = yym835
				if false {
				} else {
					r.EncodeUint(uint64(x.JobModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym836 := z.EncBinary()
				_ = yym836
				if false {
				} else {
					r.EncodeUint(uint64(x.JobModifyIndex))
				}
			}
			if yyr827 || yy2arr827 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym838 := z.EncBinary()
				_ = yym838
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym839 := z.EncBinary()
				_ = yym839
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr827 || yy2arr827 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym841 := z.EncBinary()
				_ = yym841
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym842 := z.EncBinary()
				_ = yym842
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr827 || yy2arr827 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym844 := z.EncBinary()
				_ = yym844
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym845 := z.EncBinary()
				_ = yym845
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr827 || yy2arr827 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobRegisterResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym846 := z.DecBinary()
	_ = yym846
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct847 := r.ContainerType()
		if yyct847 == codecSelferValueTypeMap4362 {
			yyl847 := r.ReadMapStart()
			if yyl847 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl847, d)
			}
		} else if yyct847 == codecSelferValueTypeArray4362 {
			yyl847 := r.ReadArrayStart()
			if yyl847 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl847, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobRegisterResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys848Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys848Slc
	var yyhl848 bool = l >= 0
	for yyj848 := 0; ; yyj848++ {
		if yyhl848 {
			if yyj848 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys848Slc = r.DecodeBytes(yys848Slc, true, true)
		yys848 := string(yys848Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys848 {
		case "EvalID":
			if r.TryDecodeAsNil() {
				x.EvalID = ""
			} else {
				x.EvalID = string(r.DecodeString())
			}
		case "EvalCreateIndex":
			if r.TryDecodeAsNil() {
				x.EvalCreateIndex = 0
			} else {
				x.EvalCreateIndex = uint64(r.DecodeUint(64))
			}
		case "JobModifyIndex":
			if r.TryDecodeAsNil() {
				x.JobModifyIndex = 0
			} else {
				x.JobModifyIndex = uint64(r.DecodeUint(64))
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys848)
		} // end switch yys848
	} // end for yyj848
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobRegisterResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj855 int
	var yyb855 bool
	var yyhl855 bool = l >= 0
	yyj855++
	if yyhl855 {
		yyb855 = yyj855 > l
	} else {
		yyb855 = r.CheckBreak()
	}
	if yyb855 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalID = ""
	} else {
		x.EvalID = string(r.DecodeString())
	}
	yyj855++
	if yyhl855 {
		yyb855 = yyj855 > l
	} else {
		yyb855 = r.CheckBreak()
	}
	if yyb855 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalCreateIndex = 0
	} else {
		x.EvalCreateIndex = uint64(r.DecodeUint(64))
	}
	yyj855++
	if yyhl855 {
		yyb855 = yyj855 > l
	} else {
		yyb855 = r.CheckBreak()
	}
	if yyb855 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobModifyIndex = 0
	} else {
		x.JobModifyIndex = uint64(r.DecodeUint(64))
	}
	yyj855++
	if yyhl855 {
		yyb855 = yyj855 > l
	} else {
		yyb855 = r.CheckBreak()
	}
	if yyb855 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj855++
	if yyhl855 {
		yyb855 = yyj855 > l
	} else {
		yyb855 = r.CheckBreak()
	}
	if yyb855 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj855++
	if yyhl855 {
		yyb855 = yyj855 > l
	} else {
		yyb855 = r.CheckBreak()
	}
	if yyb855 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj855++
		if yyhl855 {
			yyb855 = yyj855 > l
		} else {
			yyb855 = r.CheckBreak()
		}
		if yyb855 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj855-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobDeregisterResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym862 := z.EncBinary()
		_ = yym862
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep863 := !z.EncBinary()
			yy2arr863 := z.EncBasicHandle().StructToArray
			var yyq863 [6]bool
			_, _, _ = yysep863, yyq863, yy2arr863
			const yyr863 bool = false
			var yynn863 int
			if yyr863 || yy2arr863 {
				r.EncodeArrayStart(6)
			} else {
				yynn863 = 6
				for _, b := range yyq863 {
					if b {
						yynn863++
					}
				}
				r.EncodeMapStart(yynn863)
				yynn863 = 0
			}
			if yyr863 || yy2arr863 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym865 := z.EncBinary()
				_ = yym865
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym866 := z.EncBinary()
				_ = yym866
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			}
			if yyr863 || yy2arr863 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym868 := z.EncBinary()
				_ = yym868
				if false {
				} else {
					r.EncodeUint(uint64(x.EvalCreateIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalCreateIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym869 := z.EncBinary()
				_ = yym869
				if false {
				} else {
					r.EncodeUint(uint64(x.EvalCreateIndex))
				}
			}
			if yyr863 || yy2arr863 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym871 := z.EncBinary()
				_ = yym871
				if false {
				} else {
					r.EncodeUint(uint64(x.JobModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym872 := z.EncBinary()
				_ = yym872
				if false {
				} else {
					r.EncodeUint(uint64(x.JobModifyIndex))
				}
			}
			if yyr863 || yy2arr863 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym874 := z.EncBinary()
				_ = yym874
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym875 := z.EncBinary()
				_ = yym875
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr863 || yy2arr863 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym877 := z.EncBinary()
				_ = yym877
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym878 := z.EncBinary()
				_ = yym878
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr863 || yy2arr863 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym880 := z.EncBinary()
				_ = yym880
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym881 := z.EncBinary()
				_ = yym881
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr863 || yy2arr863 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobDeregisterResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym882 := z.DecBinary()
	_ = yym882
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct883 := r.ContainerType()
		if yyct883 == codecSelferValueTypeMap4362 {
			yyl883 := r.ReadMapStart()
			if yyl883 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl883, d)
			}
		} else if yyct883 == codecSelferValueTypeArray4362 {
			yyl883 := r.ReadArrayStart()
			if yyl883 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl883, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobDeregisterResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys884Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys884Slc
	var yyhl884 bool = l >= 0
	for yyj884 := 0; ; yyj884++ {
		if yyhl884 {
			if yyj884 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys884Slc = r.DecodeBytes(yys884Slc, true, true)
		yys884 := string(yys884Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys884 {
		case "EvalID":
			if r.TryDecodeAsNil() {
				x.EvalID = ""
			} else {
				x.EvalID = string(r.DecodeString())
			}
		case "EvalCreateIndex":
			if r.TryDecodeAsNil() {
				x.EvalCreateIndex = 0
			} else {
				x.EvalCreateIndex = uint64(r.DecodeUint(64))
			}
		case "JobModifyIndex":
			if r.TryDecodeAsNil() {
				x.JobModifyIndex = 0
			} else {
				x.JobModifyIndex = uint64(r.DecodeUint(64))
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys884)
		} // end switch yys884
	} // end for yyj884
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobDeregisterResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj891 int
	var yyb891 bool
	var yyhl891 bool = l >= 0
	yyj891++
	if yyhl891 {
		yyb891 = yyj891 > l
	} else {
		yyb891 = r.CheckBreak()
	}
	if yyb891 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalID = ""
	} else {
		x.EvalID = string(r.DecodeString())
	}
	yyj891++
	if yyhl891 {
		yyb891 = yyj891 > l
	} else {
		yyb891 = r.CheckBreak()
	}
	if yyb891 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalCreateIndex = 0
	} else {
		x.EvalCreateIndex = uint64(r.DecodeUint(64))
	}
	yyj891++
	if yyhl891 {
		yyb891 = yyj891 > l
	} else {
		yyb891 = r.CheckBreak()
	}
	if yyb891 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobModifyIndex = 0
	} else {
		x.JobModifyIndex = uint64(r.DecodeUint(64))
	}
	yyj891++
	if yyhl891 {
		yyb891 = yyj891 > l
	} else {
		yyb891 = r.CheckBreak()
	}
	if yyb891 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj891++
	if yyhl891 {
		yyb891 = yyj891 > l
	} else {
		yyb891 = r.CheckBreak()
	}
	if yyb891 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj891++
	if yyhl891 {
		yyb891 = yyj891 > l
	} else {
		yyb891 = r.CheckBreak()
	}
	if yyb891 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj891++
		if yyhl891 {
			yyb891 = yyj891 > l
		} else {
			yyb891 = r.CheckBreak()
		}
		if yyb891 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj891-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *NodeUpdateResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym898 := z.EncBinary()
		_ = yym898
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep899 := !z.EncBinary()
			yy2arr899 := z.EncBasicHandle().StructToArray
			var yyq899 [10]bool
			_, _, _ = yysep899, yyq899, yy2arr899
			const yyr899 bool = false
			var yynn899 int
			if yyr899 || yy2arr899 {
				r.EncodeArrayStart(10)
			} else {
				yynn899 = 10
				for _, b := range yyq899 {
					if b {
						yynn899++
					}
				}
				r.EncodeMapStart(yynn899)
				yynn899 = 0
			}
			if yyr899 || yy2arr899 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym901 := z.EncBinary()
				_ = yym901
				if false {
				} else if z.HasExtensions() && z.EncExt(x.HeartbeatTTL) {
				} else {
					r.EncodeInt(int64(x.HeartbeatTTL))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("HeartbeatTTL"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym902 := z.EncBinary()
				_ = yym902
				if false {
				} else if z.HasExtensions() && z.EncExt(x.HeartbeatTTL) {
				} else {
					r.EncodeInt(int64(x.HeartbeatTTL))
				}
			}
			if yyr899 || yy2arr899 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.EvalIDs == nil {
					r.EncodeNil()
				} else {
					yym904 := z.EncBinary()
					_ = yym904
					if false {
					} else {
						z.F.EncSliceStringV(x.EvalIDs, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalIDs"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.EvalIDs == nil {
					r.EncodeNil()
				} else {
					yym905 := z.EncBinary()
					_ = yym905
					if false {
					} else {
						z.F.EncSliceStringV(x.EvalIDs, false, e)
					}
				}
			}
			if yyr899 || yy2arr899 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym907 := z.EncBinary()
				_ = yym907
				if false {
				} else {
					r.EncodeUint(uint64(x.EvalCreateIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalCreateIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym908 := z.EncBinary()
				_ = yym908
				if false {
				} else {
					r.EncodeUint(uint64(x.EvalCreateIndex))
				}
			}
			if yyr899 || yy2arr899 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym910 := z.EncBinary()
				_ = yym910
				if false {
				} else {
					r.EncodeUint(uint64(x.NodeModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym911 := z.EncBinary()
				_ = yym911
				if false {
				} else {
					r.EncodeUint(uint64(x.NodeModifyIndex))
				}
			}
			if yyr899 || yy2arr899 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym913 := z.EncBinary()
				_ = yym913
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.LeaderRPCAddr))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LeaderRPCAddr"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym914 := z.EncBinary()
				_ = yym914
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.LeaderRPCAddr))
				}
			}
			if yyr899 || yy2arr899 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym916 := z.EncBinary()
				_ = yym916
				if false {
				} else {
					r.EncodeInt(int64(x.NumNodes))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NumNodes"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym917 := z.EncBinary()
				_ = yym917
				if false {
				} else {
					r.EncodeInt(int64(x.NumNodes))
				}
			}
			if yyr899 || yy2arr899 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Servers == nil {
					r.EncodeNil()
				} else {
					yym919 := z.EncBinary()
					_ = yym919
					if false {
					} else {
						h.encSlicePtrtoNodeServerInfo(([]*NodeServerInfo)(x.Servers), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Servers"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Servers == nil {
					r.EncodeNil()
				} else {
					yym920 := z.EncBinary()
					_ = yym920
					if false {
					} else {
						h.encSlicePtrtoNodeServerInfo(([]*NodeServerInfo)(x.Servers), e)
					}
				}
			}
			if yyr899 || yy2arr899 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym922 := z.EncBinary()
				_ = yym922
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym923 := z.EncBinary()
				_ = yym923
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr899 || yy2arr899 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym925 := z.EncBinary()
				_ = yym925
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym926 := z.EncBinary()
				_ = yym926
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr899 || yy2arr899 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym928 := z.EncBinary()
				_ = yym928
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym929 := z.EncBinary()
				_ = yym929
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr899 || yy2arr899 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *NodeUpdateResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym930 := z.DecBinary()
	_ = yym930
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct931 := r.ContainerType()
		if yyct931 == codecSelferValueTypeMap4362 {
			yyl931 := r.ReadMapStart()
			if yyl931 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl931, d)
			}
		} else if yyct931 == codecSelferValueTypeArray4362 {
			yyl931 := r.ReadArrayStart()
			if yyl931 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl931, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *NodeUpdateResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys932Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys932Slc
	var yyhl932 bool = l >= 0
	for yyj932 := 0; ; yyj932++ {
		if yyhl932 {
			if yyj932 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys932Slc = r.DecodeBytes(yys932Slc, true, true)
		yys932 := string(yys932Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys932 {
		case "HeartbeatTTL":
			if r.TryDecodeAsNil() {
				x.HeartbeatTTL = 0
			} else {
				x.HeartbeatTTL = time.Duration(r.DecodeInt(64))
			}
		case "EvalIDs":
			if r.TryDecodeAsNil() {
				x.EvalIDs = nil
			} else {
				yyv934 := &x.EvalIDs
				yym935 := z.DecBinary()
				_ = yym935
				if false {
				} else {
					z.F.DecSliceStringX(yyv934, false, d)
				}
			}
		case "EvalCreateIndex":
			if r.TryDecodeAsNil() {
				x.EvalCreateIndex = 0
			} else {
				x.EvalCreateIndex = uint64(r.DecodeUint(64))
			}
		case "NodeModifyIndex":
			if r.TryDecodeAsNil() {
				x.NodeModifyIndex = 0
			} else {
				x.NodeModifyIndex = uint64(r.DecodeUint(64))
			}
		case "LeaderRPCAddr":
			if r.TryDecodeAsNil() {
				x.LeaderRPCAddr = ""
			} else {
				x.LeaderRPCAddr = string(r.DecodeString())
			}
		case "NumNodes":
			if r.TryDecodeAsNil() {
				x.NumNodes = 0
			} else {
				x.NumNodes = int32(r.DecodeInt(32))
			}
		case "Servers":
			if r.TryDecodeAsNil() {
				x.Servers = nil
			} else {
				yyv940 := &x.Servers
				yym941 := z.DecBinary()
				_ = yym941
				if false {
				} else {
					h.decSlicePtrtoNodeServerInfo((*[]*NodeServerInfo)(yyv940), d)
				}
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys932)
		} // end switch yys932
	} // end for yyj932
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *NodeUpdateResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj945 int
	var yyb945 bool
	var yyhl945 bool = l >= 0
	yyj945++
	if yyhl945 {
		yyb945 = yyj945 > l
	} else {
		yyb945 = r.CheckBreak()
	}
	if yyb945 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.HeartbeatTTL = 0
	} else {
		x.HeartbeatTTL = time.Duration(r.DecodeInt(64))
	}
	yyj945++
	if yyhl945 {
		yyb945 = yyj945 > l
	} else {
		yyb945 = r.CheckBreak()
	}
	if yyb945 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalIDs = nil
	} else {
		yyv947 := &x.EvalIDs
		yym948 := z.DecBinary()
		_ = yym948
		if false {
		} else {
			z.F.DecSliceStringX(yyv947, false, d)
		}
	}
	yyj945++
	if yyhl945 {
		yyb945 = yyj945 > l
	} else {
		yyb945 = r.CheckBreak()
	}
	if yyb945 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalCreateIndex = 0
	} else {
		x.EvalCreateIndex = uint64(r.DecodeUint(64))
	}
	yyj945++
	if yyhl945 {
		yyb945 = yyj945 > l
	} else {
		yyb945 = r.CheckBreak()
	}
	if yyb945 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeModifyIndex = 0
	} else {
		x.NodeModifyIndex = uint64(r.DecodeUint(64))
	}
	yyj945++
	if yyhl945 {
		yyb945 = yyj945 > l
	} else {
		yyb945 = r.CheckBreak()
	}
	if yyb945 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LeaderRPCAddr = ""
	} else {
		x.LeaderRPCAddr = string(r.DecodeString())
	}
	yyj945++
	if yyhl945 {
		yyb945 = yyj945 > l
	} else {
		yyb945 = r.CheckBreak()
	}
	if yyb945 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NumNodes = 0
	} else {
		x.NumNodes = int32(r.DecodeInt(32))
	}
	yyj945++
	if yyhl945 {
		yyb945 = yyj945 > l
	} else {
		yyb945 = r.CheckBreak()
	}
	if yyb945 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Servers = nil
	} else {
		yyv953 := &x.Servers
		yym954 := z.DecBinary()
		_ = yym954
		if false {
		} else {
			h.decSlicePtrtoNodeServerInfo((*[]*NodeServerInfo)(yyv953), d)
		}
	}
	yyj945++
	if yyhl945 {
		yyb945 = yyj945 > l
	} else {
		yyb945 = r.CheckBreak()
	}
	if yyb945 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj945++
	if yyhl945 {
		yyb945 = yyj945 > l
	} else {
		yyb945 = r.CheckBreak()
	}
	if yyb945 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj945++
	if yyhl945 {
		yyb945 = yyj945 > l
	} else {
		yyb945 = r.CheckBreak()
	}
	if yyb945 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj945++
		if yyhl945 {
			yyb945 = yyj945 > l
		} else {
			yyb945 = r.CheckBreak()
		}
		if yyb945 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj945-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *NodeDrainUpdateResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym958 := z.EncBinary()
		_ = yym958
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep959 := !z.EncBinary()
			yy2arr959 := z.EncBasicHandle().StructToArray
			var yyq959 [6]bool
			_, _, _ = yysep959, yyq959, yy2arr959
			const yyr959 bool = false
			var yynn959 int
			if yyr959 || yy2arr959 {
				r.EncodeArrayStart(6)
			} else {
				yynn959 = 6
				for _, b := range yyq959 {
					if b {
						yynn959++
					}
				}
				r.EncodeMapStart(yynn959)
				yynn959 = 0
			}
			if yyr959 || yy2arr959 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.EvalIDs == nil {
					r.EncodeNil()
				} else {
					yym961 := z.EncBinary()
					_ = yym961
					if false {
					} else {
						z.F.EncSliceStringV(x.EvalIDs, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalIDs"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.EvalIDs == nil {
					r.EncodeNil()
				} else {
					yym962 := z.EncBinary()
					_ = yym962
					if false {
					} else {
						z.F.EncSliceStringV(x.EvalIDs, false, e)
					}
				}
			}
			if yyr959 || yy2arr959 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym964 := z.EncBinary()
				_ = yym964
				if false {
				} else {
					r.EncodeUint(uint64(x.EvalCreateIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalCreateIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym965 := z.EncBinary()
				_ = yym965
				if false {
				} else {
					r.EncodeUint(uint64(x.EvalCreateIndex))
				}
			}
			if yyr959 || yy2arr959 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym967 := z.EncBinary()
				_ = yym967
				if false {
				} else {
					r.EncodeUint(uint64(x.NodeModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym968 := z.EncBinary()
				_ = yym968
				if false {
				} else {
					r.EncodeUint(uint64(x.NodeModifyIndex))
				}
			}
			if yyr959 || yy2arr959 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym970 := z.EncBinary()
				_ = yym970
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym971 := z.EncBinary()
				_ = yym971
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr959 || yy2arr959 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym973 := z.EncBinary()
				_ = yym973
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym974 := z.EncBinary()
				_ = yym974
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr959 || yy2arr959 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym976 := z.EncBinary()
				_ = yym976
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym977 := z.EncBinary()
				_ = yym977
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr959 || yy2arr959 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *NodeDrainUpdateResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym978 := z.DecBinary()
	_ = yym978
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct979 := r.ContainerType()
		if yyct979 == codecSelferValueTypeMap4362 {
			yyl979 := r.ReadMapStart()
			if yyl979 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl979, d)
			}
		} else if yyct979 == codecSelferValueTypeArray4362 {
			yyl979 := r.ReadArrayStart()
			if yyl979 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl979, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *NodeDrainUpdateResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys980Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys980Slc
	var yyhl980 bool = l >= 0
	for yyj980 := 0; ; yyj980++ {
		if yyhl980 {
			if yyj980 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys980Slc = r.DecodeBytes(yys980Slc, true, true)
		yys980 := string(yys980Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys980 {
		case "EvalIDs":
			if r.TryDecodeAsNil() {
				x.EvalIDs = nil
			} else {
				yyv981 := &x.EvalIDs
				yym982 := z.DecBinary()
				_ = yym982
				if false {
				} else {
					z.F.DecSliceStringX(yyv981, false, d)
				}
			}
		case "EvalCreateIndex":
			if r.TryDecodeAsNil() {
				x.EvalCreateIndex = 0
			} else {
				x.EvalCreateIndex = uint64(r.DecodeUint(64))
			}
		case "NodeModifyIndex":
			if r.TryDecodeAsNil() {
				x.NodeModifyIndex = 0
			} else {
				x.NodeModifyIndex = uint64(r.DecodeUint(64))
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys980)
		} // end switch yys980
	} // end for yyj980
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *NodeDrainUpdateResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj988 int
	var yyb988 bool
	var yyhl988 bool = l >= 0
	yyj988++
	if yyhl988 {
		yyb988 = yyj988 > l
	} else {
		yyb988 = r.CheckBreak()
	}
	if yyb988 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalIDs = nil
	} else {
		yyv989 := &x.EvalIDs
		yym990 := z.DecBinary()
		_ = yym990
		if false {
		} else {
			z.F.DecSliceStringX(yyv989, false, d)
		}
	}
	yyj988++
	if yyhl988 {
		yyb988 = yyj988 > l
	} else {
		yyb988 = r.CheckBreak()
	}
	if yyb988 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalCreateIndex = 0
	} else {
		x.EvalCreateIndex = uint64(r.DecodeUint(64))
	}
	yyj988++
	if yyhl988 {
		yyb988 = yyj988 > l
	} else {
		yyb988 = r.CheckBreak()
	}
	if yyb988 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeModifyIndex = 0
	} else {
		x.NodeModifyIndex = uint64(r.DecodeUint(64))
	}
	yyj988++
	if yyhl988 {
		yyb988 = yyj988 > l
	} else {
		yyb988 = r.CheckBreak()
	}
	if yyb988 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj988++
	if yyhl988 {
		yyb988 = yyj988 > l
	} else {
		yyb988 = r.CheckBreak()
	}
	if yyb988 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj988++
	if yyhl988 {
		yyb988 = yyj988 > l
	} else {
		yyb988 = r.CheckBreak()
	}
	if yyb988 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj988++
		if yyhl988 {
			yyb988 = yyj988 > l
		} else {
			yyb988 = r.CheckBreak()
		}
		if yyb988 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj988-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *NodeAllocsResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym996 := z.EncBinary()
		_ = yym996
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep997 := !z.EncBinary()
			yy2arr997 := z.EncBasicHandle().StructToArray
			var yyq997 [4]bool
			_, _, _ = yysep997, yyq997, yy2arr997
			const yyr997 bool = false
			var yynn997 int
			if yyr997 || yy2arr997 {
				r.EncodeArrayStart(4)
			} else {
				yynn997 = 4
				for _, b := range yyq997 {
					if b {
						yynn997++
					}
				}
				r.EncodeMapStart(yynn997)
				yynn997 = 0
			}
			if yyr997 || yy2arr997 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Allocs == nil {
					r.EncodeNil()
				} else {
					yym999 := z.EncBinary()
					_ = yym999
					if false {
					} else {
						h.encSlicePtrtoAllocation(([]*Allocation)(x.Allocs), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Allocs"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Allocs == nil {
					r.EncodeNil()
				} else {
					yym1000 := z.EncBinary()
					_ = yym1000
					if false {
					} else {
						h.encSlicePtrtoAllocation(([]*Allocation)(x.Allocs), e)
					}
				}
			}
			if yyr997 || yy2arr997 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1002 := z.EncBinary()
				_ = yym1002
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1003 := z.EncBinary()
				_ = yym1003
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr997 || yy2arr997 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1005 := z.EncBinary()
				_ = yym1005
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1006 := z.EncBinary()
				_ = yym1006
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr997 || yy2arr997 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1008 := z.EncBinary()
				_ = yym1008
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1009 := z.EncBinary()
				_ = yym1009
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr997 || yy2arr997 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *NodeAllocsResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1010 := z.DecBinary()
	_ = yym1010
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1011 := r.ContainerType()
		if yyct1011 == codecSelferValueTypeMap4362 {
			yyl1011 := r.ReadMapStart()
			if yyl1011 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1011, d)
			}
		} else if yyct1011 == codecSelferValueTypeArray4362 {
			yyl1011 := r.ReadArrayStart()
			if yyl1011 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1011, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *NodeAllocsResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1012Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1012Slc
	var yyhl1012 bool = l >= 0
	for yyj1012 := 0; ; yyj1012++ {
		if yyhl1012 {
			if yyj1012 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1012Slc = r.DecodeBytes(yys1012Slc, true, true)
		yys1012 := string(yys1012Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1012 {
		case "Allocs":
			if r.TryDecodeAsNil() {
				x.Allocs = nil
			} else {
				yyv1013 := &x.Allocs
				yym1014 := z.DecBinary()
				_ = yym1014
				if false {
				} else {
					h.decSlicePtrtoAllocation((*[]*Allocation)(yyv1013), d)
				}
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1012)
		} // end switch yys1012
	} // end for yyj1012
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *NodeAllocsResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1018 int
	var yyb1018 bool
	var yyhl1018 bool = l >= 0
	yyj1018++
	if yyhl1018 {
		yyb1018 = yyj1018 > l
	} else {
		yyb1018 = r.CheckBreak()
	}
	if yyb1018 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Allocs = nil
	} else {
		yyv1019 := &x.Allocs
		yym1020 := z.DecBinary()
		_ = yym1020
		if false {
		} else {
			h.decSlicePtrtoAllocation((*[]*Allocation)(yyv1019), d)
		}
	}
	yyj1018++
	if yyhl1018 {
		yyb1018 = yyj1018 > l
	} else {
		yyb1018 = r.CheckBreak()
	}
	if yyb1018 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1018++
	if yyhl1018 {
		yyb1018 = yyj1018 > l
	} else {
		yyb1018 = r.CheckBreak()
	}
	if yyb1018 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1018++
	if yyhl1018 {
		yyb1018 = yyj1018 > l
	} else {
		yyb1018 = r.CheckBreak()
	}
	if yyb1018 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1018++
		if yyhl1018 {
			yyb1018 = yyj1018 > l
		} else {
			yyb1018 = r.CheckBreak()
		}
		if yyb1018 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1018-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *NodeClientAllocsResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1024 := z.EncBinary()
		_ = yym1024
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1025 := !z.EncBinary()
			yy2arr1025 := z.EncBasicHandle().StructToArray
			var yyq1025 [4]bool
			_, _, _ = yysep1025, yyq1025, yy2arr1025
			const yyr1025 bool = false
			var yynn1025 int
			if yyr1025 || yy2arr1025 {
				r.EncodeArrayStart(4)
			} else {
				yynn1025 = 4
				for _, b := range yyq1025 {
					if b {
						yynn1025++
					}
				}
				r.EncodeMapStart(yynn1025)
				yynn1025 = 0
			}
			if yyr1025 || yy2arr1025 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Allocs == nil {
					r.EncodeNil()
				} else {
					yym1027 := z.EncBinary()
					_ = yym1027
					if false {
					} else {
						z.F.EncMapStringUint64V(x.Allocs, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Allocs"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Allocs == nil {
					r.EncodeNil()
				} else {
					yym1028 := z.EncBinary()
					_ = yym1028
					if false {
					} else {
						z.F.EncMapStringUint64V(x.Allocs, false, e)
					}
				}
			}
			if yyr1025 || yy2arr1025 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1030 := z.EncBinary()
				_ = yym1030
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1031 := z.EncBinary()
				_ = yym1031
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1025 || yy2arr1025 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1033 := z.EncBinary()
				_ = yym1033
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1034 := z.EncBinary()
				_ = yym1034
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr1025 || yy2arr1025 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1036 := z.EncBinary()
				_ = yym1036
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1037 := z.EncBinary()
				_ = yym1037
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr1025 || yy2arr1025 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *NodeClientAllocsResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1038 := z.DecBinary()
	_ = yym1038
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1039 := r.ContainerType()
		if yyct1039 == codecSelferValueTypeMap4362 {
			yyl1039 := r.ReadMapStart()
			if yyl1039 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1039, d)
			}
		} else if yyct1039 == codecSelferValueTypeArray4362 {
			yyl1039 := r.ReadArrayStart()
			if yyl1039 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1039, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *NodeClientAllocsResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1040Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1040Slc
	var yyhl1040 bool = l >= 0
	for yyj1040 := 0; ; yyj1040++ {
		if yyhl1040 {
			if yyj1040 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1040Slc = r.DecodeBytes(yys1040Slc, true, true)
		yys1040 := string(yys1040Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1040 {
		case "Allocs":
			if r.TryDecodeAsNil() {
				x.Allocs = nil
			} else {
				yyv1041 := &x.Allocs
				yym1042 := z.DecBinary()
				_ = yym1042
				if false {
				} else {
					z.F.DecMapStringUint64X(yyv1041, false, d)
				}
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1040)
		} // end switch yys1040
	} // end for yyj1040
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *NodeClientAllocsResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1046 int
	var yyb1046 bool
	var yyhl1046 bool = l >= 0
	yyj1046++
	if yyhl1046 {
		yyb1046 = yyj1046 > l
	} else {
		yyb1046 = r.CheckBreak()
	}
	if yyb1046 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Allocs = nil
	} else {
		yyv1047 := &x.Allocs
		yym1048 := z.DecBinary()
		_ = yym1048
		if false {
		} else {
			z.F.DecMapStringUint64X(yyv1047, false, d)
		}
	}
	yyj1046++
	if yyhl1046 {
		yyb1046 = yyj1046 > l
	} else {
		yyb1046 = r.CheckBreak()
	}
	if yyb1046 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1046++
	if yyhl1046 {
		yyb1046 = yyj1046 > l
	} else {
		yyb1046 = r.CheckBreak()
	}
	if yyb1046 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1046++
	if yyhl1046 {
		yyb1046 = yyj1046 > l
	} else {
		yyb1046 = r.CheckBreak()
	}
	if yyb1046 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1046++
		if yyhl1046 {
			yyb1046 = yyj1046 > l
		} else {
			yyb1046 = r.CheckBreak()
		}
		if yyb1046 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1046-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *SingleNodeResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1052 := z.EncBinary()
		_ = yym1052
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1053 := !z.EncBinary()
			yy2arr1053 := z.EncBasicHandle().StructToArray
			var yyq1053 [4]bool
			_, _, _ = yysep1053, yyq1053, yy2arr1053
			const yyr1053 bool = false
			var yynn1053 int
			if yyr1053 || yy2arr1053 {
				r.EncodeArrayStart(4)
			} else {
				yynn1053 = 4
				for _, b := range yyq1053 {
					if b {
						yynn1053++
					}
				}
				r.EncodeMapStart(yynn1053)
				yynn1053 = 0
			}
			if yyr1053 || yy2arr1053 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Node == nil {
					r.EncodeNil()
				} else {
					x.Node.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Node"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Node == nil {
					r.EncodeNil()
				} else {
					x.Node.CodecEncodeSelf(e)
				}
			}
			if yyr1053 || yy2arr1053 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1056 := z.EncBinary()
				_ = yym1056
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1057 := z.EncBinary()
				_ = yym1057
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1053 || yy2arr1053 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1059 := z.EncBinary()
				_ = yym1059
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1060 := z.EncBinary()
				_ = yym1060
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr1053 || yy2arr1053 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1062 := z.EncBinary()
				_ = yym1062
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1063 := z.EncBinary()
				_ = yym1063
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr1053 || yy2arr1053 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *SingleNodeResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1064 := z.DecBinary()
	_ = yym1064
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1065 := r.ContainerType()
		if yyct1065 == codecSelferValueTypeMap4362 {
			yyl1065 := r.ReadMapStart()
			if yyl1065 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1065, d)
			}
		} else if yyct1065 == codecSelferValueTypeArray4362 {
			yyl1065 := r.ReadArrayStart()
			if yyl1065 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1065, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *SingleNodeResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1066Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1066Slc
	var yyhl1066 bool = l >= 0
	for yyj1066 := 0; ; yyj1066++ {
		if yyhl1066 {
			if yyj1066 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1066Slc = r.DecodeBytes(yys1066Slc, true, true)
		yys1066 := string(yys1066Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1066 {
		case "Node":
			if r.TryDecodeAsNil() {
				if x.Node != nil {
					x.Node = nil
				}
			} else {
				if x.Node == nil {
					x.Node = new(Node)
				}
				x.Node.CodecDecodeSelf(d)
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1066)
		} // end switch yys1066
	} // end for yyj1066
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *SingleNodeResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1071 int
	var yyb1071 bool
	var yyhl1071 bool = l >= 0
	yyj1071++
	if yyhl1071 {
		yyb1071 = yyj1071 > l
	} else {
		yyb1071 = r.CheckBreak()
	}
	if yyb1071 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Node != nil {
			x.Node = nil
		}
	} else {
		if x.Node == nil {
			x.Node = new(Node)
		}
		x.Node.CodecDecodeSelf(d)
	}
	yyj1071++
	if yyhl1071 {
		yyb1071 = yyj1071 > l
	} else {
		yyb1071 = r.CheckBreak()
	}
	if yyb1071 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1071++
	if yyhl1071 {
		yyb1071 = yyj1071 > l
	} else {
		yyb1071 = r.CheckBreak()
	}
	if yyb1071 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1071++
	if yyhl1071 {
		yyb1071 = yyj1071 > l
	} else {
		yyb1071 = r.CheckBreak()
	}
	if yyb1071 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1071++
		if yyhl1071 {
			yyb1071 = yyj1071 > l
		} else {
			yyb1071 = r.CheckBreak()
		}
		if yyb1071 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1071-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *NodeListResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1076 := z.EncBinary()
		_ = yym1076
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1077 := !z.EncBinary()
			yy2arr1077 := z.EncBasicHandle().StructToArray
			var yyq1077 [4]bool
			_, _, _ = yysep1077, yyq1077, yy2arr1077
			const yyr1077 bool = false
			var yynn1077 int
			if yyr1077 || yy2arr1077 {
				r.EncodeArrayStart(4)
			} else {
				yynn1077 = 4
				for _, b := range yyq1077 {
					if b {
						yynn1077++
					}
				}
				r.EncodeMapStart(yynn1077)
				yynn1077 = 0
			}
			if yyr1077 || yy2arr1077 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Nodes == nil {
					r.EncodeNil()
				} else {
					yym1079 := z.EncBinary()
					_ = yym1079
					if false {
					} else {
						h.encSlicePtrtoNodeListStub(([]*NodeListStub)(x.Nodes), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Nodes"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Nodes == nil {
					r.EncodeNil()
				} else {
					yym1080 := z.EncBinary()
					_ = yym1080
					if false {
					} else {
						h.encSlicePtrtoNodeListStub(([]*NodeListStub)(x.Nodes), e)
					}
				}
			}
			if yyr1077 || yy2arr1077 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1082 := z.EncBinary()
				_ = yym1082
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1083 := z.EncBinary()
				_ = yym1083
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1077 || yy2arr1077 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1085 := z.EncBinary()
				_ = yym1085
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1086 := z.EncBinary()
				_ = yym1086
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr1077 || yy2arr1077 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1088 := z.EncBinary()
				_ = yym1088
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1089 := z.EncBinary()
				_ = yym1089
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr1077 || yy2arr1077 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *NodeListResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1090 := z.DecBinary()
	_ = yym1090
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1091 := r.ContainerType()
		if yyct1091 == codecSelferValueTypeMap4362 {
			yyl1091 := r.ReadMapStart()
			if yyl1091 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1091, d)
			}
		} else if yyct1091 == codecSelferValueTypeArray4362 {
			yyl1091 := r.ReadArrayStart()
			if yyl1091 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1091, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *NodeListResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1092Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1092Slc
	var yyhl1092 bool = l >= 0
	for yyj1092 := 0; ; yyj1092++ {
		if yyhl1092 {
			if yyj1092 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1092Slc = r.DecodeBytes(yys1092Slc, true, true)
		yys1092 := string(yys1092Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1092 {
		case "Nodes":
			if r.TryDecodeAsNil() {
				x.Nodes = nil
			} else {
				yyv1093 := &x.Nodes
				yym1094 := z.DecBinary()
				_ = yym1094
				if false {
				} else {
					h.decSlicePtrtoNodeListStub((*[]*NodeListStub)(yyv1093), d)
				}
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1092)
		} // end switch yys1092
	} // end for yyj1092
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *NodeListResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1098 int
	var yyb1098 bool
	var yyhl1098 bool = l >= 0
	yyj1098++
	if yyhl1098 {
		yyb1098 = yyj1098 > l
	} else {
		yyb1098 = r.CheckBreak()
	}
	if yyb1098 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Nodes = nil
	} else {
		yyv1099 := &x.Nodes
		yym1100 := z.DecBinary()
		_ = yym1100
		if false {
		} else {
			h.decSlicePtrtoNodeListStub((*[]*NodeListStub)(yyv1099), d)
		}
	}
	yyj1098++
	if yyhl1098 {
		yyb1098 = yyj1098 > l
	} else {
		yyb1098 = r.CheckBreak()
	}
	if yyb1098 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1098++
	if yyhl1098 {
		yyb1098 = yyj1098 > l
	} else {
		yyb1098 = r.CheckBreak()
	}
	if yyb1098 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1098++
	if yyhl1098 {
		yyb1098 = yyj1098 > l
	} else {
		yyb1098 = r.CheckBreak()
	}
	if yyb1098 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1098++
		if yyhl1098 {
			yyb1098 = yyj1098 > l
		} else {
			yyb1098 = r.CheckBreak()
		}
		if yyb1098 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1098-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *SingleJobResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1104 := z.EncBinary()
		_ = yym1104
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1105 := !z.EncBinary()
			yy2arr1105 := z.EncBasicHandle().StructToArray
			var yyq1105 [4]bool
			_, _, _ = yysep1105, yyq1105, yy2arr1105
			const yyr1105 bool = false
			var yynn1105 int
			if yyr1105 || yy2arr1105 {
				r.EncodeArrayStart(4)
			} else {
				yynn1105 = 4
				for _, b := range yyq1105 {
					if b {
						yynn1105++
					}
				}
				r.EncodeMapStart(yynn1105)
				yynn1105 = 0
			}
			if yyr1105 || yy2arr1105 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Job == nil {
					r.EncodeNil()
				} else {
					x.Job.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Job"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Job == nil {
					r.EncodeNil()
				} else {
					x.Job.CodecEncodeSelf(e)
				}
			}
			if yyr1105 || yy2arr1105 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1108 := z.EncBinary()
				_ = yym1108
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1109 := z.EncBinary()
				_ = yym1109
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1105 || yy2arr1105 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1111 := z.EncBinary()
				_ = yym1111
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1112 := z.EncBinary()
				_ = yym1112
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr1105 || yy2arr1105 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1114 := z.EncBinary()
				_ = yym1114
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1115 := z.EncBinary()
				_ = yym1115
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr1105 || yy2arr1105 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *SingleJobResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1116 := z.DecBinary()
	_ = yym1116
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1117 := r.ContainerType()
		if yyct1117 == codecSelferValueTypeMap4362 {
			yyl1117 := r.ReadMapStart()
			if yyl1117 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1117, d)
			}
		} else if yyct1117 == codecSelferValueTypeArray4362 {
			yyl1117 := r.ReadArrayStart()
			if yyl1117 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1117, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *SingleJobResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1118Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1118Slc
	var yyhl1118 bool = l >= 0
	for yyj1118 := 0; ; yyj1118++ {
		if yyhl1118 {
			if yyj1118 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1118Slc = r.DecodeBytes(yys1118Slc, true, true)
		yys1118 := string(yys1118Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1118 {
		case "Job":
			if r.TryDecodeAsNil() {
				if x.Job != nil {
					x.Job = nil
				}
			} else {
				if x.Job == nil {
					x.Job = new(Job)
				}
				x.Job.CodecDecodeSelf(d)
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1118)
		} // end switch yys1118
	} // end for yyj1118
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *SingleJobResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1123 int
	var yyb1123 bool
	var yyhl1123 bool = l >= 0
	yyj1123++
	if yyhl1123 {
		yyb1123 = yyj1123 > l
	} else {
		yyb1123 = r.CheckBreak()
	}
	if yyb1123 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Job != nil {
			x.Job = nil
		}
	} else {
		if x.Job == nil {
			x.Job = new(Job)
		}
		x.Job.CodecDecodeSelf(d)
	}
	yyj1123++
	if yyhl1123 {
		yyb1123 = yyj1123 > l
	} else {
		yyb1123 = r.CheckBreak()
	}
	if yyb1123 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1123++
	if yyhl1123 {
		yyb1123 = yyj1123 > l
	} else {
		yyb1123 = r.CheckBreak()
	}
	if yyb1123 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1123++
	if yyhl1123 {
		yyb1123 = yyj1123 > l
	} else {
		yyb1123 = r.CheckBreak()
	}
	if yyb1123 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1123++
		if yyhl1123 {
			yyb1123 = yyj1123 > l
		} else {
			yyb1123 = r.CheckBreak()
		}
		if yyb1123 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1123-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobSummaryResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1128 := z.EncBinary()
		_ = yym1128
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1129 := !z.EncBinary()
			yy2arr1129 := z.EncBasicHandle().StructToArray
			var yyq1129 [4]bool
			_, _, _ = yysep1129, yyq1129, yy2arr1129
			const yyr1129 bool = false
			var yynn1129 int
			if yyr1129 || yy2arr1129 {
				r.EncodeArrayStart(4)
			} else {
				yynn1129 = 4
				for _, b := range yyq1129 {
					if b {
						yynn1129++
					}
				}
				r.EncodeMapStart(yynn1129)
				yynn1129 = 0
			}
			if yyr1129 || yy2arr1129 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.JobSummary == nil {
					r.EncodeNil()
				} else {
					x.JobSummary.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobSummary"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.JobSummary == nil {
					r.EncodeNil()
				} else {
					x.JobSummary.CodecEncodeSelf(e)
				}
			}
			if yyr1129 || yy2arr1129 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1132 := z.EncBinary()
				_ = yym1132
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1133 := z.EncBinary()
				_ = yym1133
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1129 || yy2arr1129 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1135 := z.EncBinary()
				_ = yym1135
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1136 := z.EncBinary()
				_ = yym1136
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr1129 || yy2arr1129 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1138 := z.EncBinary()
				_ = yym1138
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1139 := z.EncBinary()
				_ = yym1139
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr1129 || yy2arr1129 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobSummaryResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1140 := z.DecBinary()
	_ = yym1140
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1141 := r.ContainerType()
		if yyct1141 == codecSelferValueTypeMap4362 {
			yyl1141 := r.ReadMapStart()
			if yyl1141 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1141, d)
			}
		} else if yyct1141 == codecSelferValueTypeArray4362 {
			yyl1141 := r.ReadArrayStart()
			if yyl1141 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1141, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobSummaryResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1142Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1142Slc
	var yyhl1142 bool = l >= 0
	for yyj1142 := 0; ; yyj1142++ {
		if yyhl1142 {
			if yyj1142 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1142Slc = r.DecodeBytes(yys1142Slc, true, true)
		yys1142 := string(yys1142Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1142 {
		case "JobSummary":
			if r.TryDecodeAsNil() {
				if x.JobSummary != nil {
					x.JobSummary = nil
				}
			} else {
				if x.JobSummary == nil {
					x.JobSummary = new(JobSummary)
				}
				x.JobSummary.CodecDecodeSelf(d)
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1142)
		} // end switch yys1142
	} // end for yyj1142
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobSummaryResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1147 int
	var yyb1147 bool
	var yyhl1147 bool = l >= 0
	yyj1147++
	if yyhl1147 {
		yyb1147 = yyj1147 > l
	} else {
		yyb1147 = r.CheckBreak()
	}
	if yyb1147 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.JobSummary != nil {
			x.JobSummary = nil
		}
	} else {
		if x.JobSummary == nil {
			x.JobSummary = new(JobSummary)
		}
		x.JobSummary.CodecDecodeSelf(d)
	}
	yyj1147++
	if yyhl1147 {
		yyb1147 = yyj1147 > l
	} else {
		yyb1147 = r.CheckBreak()
	}
	if yyb1147 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1147++
	if yyhl1147 {
		yyb1147 = yyj1147 > l
	} else {
		yyb1147 = r.CheckBreak()
	}
	if yyb1147 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1147++
	if yyhl1147 {
		yyb1147 = yyj1147 > l
	} else {
		yyb1147 = r.CheckBreak()
	}
	if yyb1147 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1147++
		if yyhl1147 {
			yyb1147 = yyj1147 > l
		} else {
			yyb1147 = r.CheckBreak()
		}
		if yyb1147 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1147-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobListResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1152 := z.EncBinary()
		_ = yym1152
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1153 := !z.EncBinary()
			yy2arr1153 := z.EncBasicHandle().StructToArray
			var yyq1153 [4]bool
			_, _, _ = yysep1153, yyq1153, yy2arr1153
			const yyr1153 bool = false
			var yynn1153 int
			if yyr1153 || yy2arr1153 {
				r.EncodeArrayStart(4)
			} else {
				yynn1153 = 4
				for _, b := range yyq1153 {
					if b {
						yynn1153++
					}
				}
				r.EncodeMapStart(yynn1153)
				yynn1153 = 0
			}
			if yyr1153 || yy2arr1153 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Jobs == nil {
					r.EncodeNil()
				} else {
					yym1155 := z.EncBinary()
					_ = yym1155
					if false {
					} else {
						h.encSlicePtrtoJobListStub(([]*JobListStub)(x.Jobs), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Jobs"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Jobs == nil {
					r.EncodeNil()
				} else {
					yym1156 := z.EncBinary()
					_ = yym1156
					if false {
					} else {
						h.encSlicePtrtoJobListStub(([]*JobListStub)(x.Jobs), e)
					}
				}
			}
			if yyr1153 || yy2arr1153 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1158 := z.EncBinary()
				_ = yym1158
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1159 := z.EncBinary()
				_ = yym1159
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1153 || yy2arr1153 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1161 := z.EncBinary()
				_ = yym1161
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1162 := z.EncBinary()
				_ = yym1162
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr1153 || yy2arr1153 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1164 := z.EncBinary()
				_ = yym1164
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1165 := z.EncBinary()
				_ = yym1165
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr1153 || yy2arr1153 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobListResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1166 := z.DecBinary()
	_ = yym1166
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1167 := r.ContainerType()
		if yyct1167 == codecSelferValueTypeMap4362 {
			yyl1167 := r.ReadMapStart()
			if yyl1167 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1167, d)
			}
		} else if yyct1167 == codecSelferValueTypeArray4362 {
			yyl1167 := r.ReadArrayStart()
			if yyl1167 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1167, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobListResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1168Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1168Slc
	var yyhl1168 bool = l >= 0
	for yyj1168 := 0; ; yyj1168++ {
		if yyhl1168 {
			if yyj1168 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1168Slc = r.DecodeBytes(yys1168Slc, true, true)
		yys1168 := string(yys1168Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1168 {
		case "Jobs":
			if r.TryDecodeAsNil() {
				x.Jobs = nil
			} else {
				yyv1169 := &x.Jobs
				yym1170 := z.DecBinary()
				_ = yym1170
				if false {
				} else {
					h.decSlicePtrtoJobListStub((*[]*JobListStub)(yyv1169), d)
				}
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1168)
		} // end switch yys1168
	} // end for yyj1168
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobListResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1174 int
	var yyb1174 bool
	var yyhl1174 bool = l >= 0
	yyj1174++
	if yyhl1174 {
		yyb1174 = yyj1174 > l
	} else {
		yyb1174 = r.CheckBreak()
	}
	if yyb1174 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Jobs = nil
	} else {
		yyv1175 := &x.Jobs
		yym1176 := z.DecBinary()
		_ = yym1176
		if false {
		} else {
			h.decSlicePtrtoJobListStub((*[]*JobListStub)(yyv1175), d)
		}
	}
	yyj1174++
	if yyhl1174 {
		yyb1174 = yyj1174 > l
	} else {
		yyb1174 = r.CheckBreak()
	}
	if yyb1174 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1174++
	if yyhl1174 {
		yyb1174 = yyj1174 > l
	} else {
		yyb1174 = r.CheckBreak()
	}
	if yyb1174 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1174++
	if yyhl1174 {
		yyb1174 = yyj1174 > l
	} else {
		yyb1174 = r.CheckBreak()
	}
	if yyb1174 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1174++
		if yyhl1174 {
			yyb1174 = yyj1174 > l
		} else {
			yyb1174 = r.CheckBreak()
		}
		if yyb1174 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1174-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobPlanResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1180 := z.EncBinary()
		_ = yym1180
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1181 := !z.EncBinary()
			yy2arr1181 := z.EncBasicHandle().StructToArray
			var yyq1181 [7]bool
			_, _, _ = yysep1181, yyq1181, yy2arr1181
			const yyr1181 bool = false
			var yynn1181 int
			if yyr1181 || yy2arr1181 {
				r.EncodeArrayStart(7)
			} else {
				yynn1181 = 7
				for _, b := range yyq1181 {
					if b {
						yynn1181++
					}
				}
				r.EncodeMapStart(yynn1181)
				yynn1181 = 0
			}
			if yyr1181 || yy2arr1181 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Annotations == nil {
					r.EncodeNil()
				} else {
					x.Annotations.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Annotations"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Annotations == nil {
					r.EncodeNil()
				} else {
					x.Annotations.CodecEncodeSelf(e)
				}
			}
			if yyr1181 || yy2arr1181 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.FailedTGAllocs == nil {
					r.EncodeNil()
				} else {
					yym1184 := z.EncBinary()
					_ = yym1184
					if false {
					} else {
						h.encMapstringPtrtoAllocMetric((map[string]*AllocMetric)(x.FailedTGAllocs), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("FailedTGAllocs"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.FailedTGAllocs == nil {
					r.EncodeNil()
				} else {
					yym1185 := z.EncBinary()
					_ = yym1185
					if false {
					} else {
						h.encMapstringPtrtoAllocMetric((map[string]*AllocMetric)(x.FailedTGAllocs), e)
					}
				}
			}
			if yyr1181 || yy2arr1181 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1187 := z.EncBinary()
				_ = yym1187
				if false {
				} else {
					r.EncodeUint(uint64(x.JobModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1188 := z.EncBinary()
				_ = yym1188
				if false {
				} else {
					r.EncodeUint(uint64(x.JobModifyIndex))
				}
			}
			if yyr1181 || yy2arr1181 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.CreatedEvals == nil {
					r.EncodeNil()
				} else {
					yym1190 := z.EncBinary()
					_ = yym1190
					if false {
					} else {
						h.encSlicePtrtoEvaluation(([]*Evaluation)(x.CreatedEvals), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("CreatedEvals"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.CreatedEvals == nil {
					r.EncodeNil()
				} else {
					yym1191 := z.EncBinary()
					_ = yym1191
					if false {
					} else {
						h.encSlicePtrtoEvaluation(([]*Evaluation)(x.CreatedEvals), e)
					}
				}
			}
			if yyr1181 || yy2arr1181 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Diff == nil {
					r.EncodeNil()
				} else {
					yym1193 := z.EncBinary()
					_ = yym1193
					if false {
					} else if z.HasExtensions() && z.EncExt(x.Diff) {
					} else {
						z.EncFallback(x.Diff)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Diff"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Diff == nil {
					r.EncodeNil()
				} else {
					yym1194 := z.EncBinary()
					_ = yym1194
					if false {
					} else if z.HasExtensions() && z.EncExt(x.Diff) {
					} else {
						z.EncFallback(x.Diff)
					}
				}
			}
			if yyr1181 || yy2arr1181 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yy1196 := &x.NextPeriodicLaunch
				yym1197 := z.EncBinary()
				_ = yym1197
				if false {
				} else if yym1198 := z.TimeRtidIfBinc(); yym1198 != 0 {
					r.EncodeBuiltin(yym1198, yy1196)
				} else if z.HasExtensions() && z.EncExt(yy1196) {
				} else if yym1197 {
					z.EncBinaryMarshal(yy1196)
				} else if !yym1197 && z.IsJSONHandle() {
					z.EncJSONMarshal(yy1196)
				} else {
					z.EncFallback(yy1196)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NextPeriodicLaunch"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yy1199 := &x.NextPeriodicLaunch
				yym1200 := z.EncBinary()
				_ = yym1200
				if false {
				} else if yym1201 := z.TimeRtidIfBinc(); yym1201 != 0 {
					r.EncodeBuiltin(yym1201, yy1199)
				} else if z.HasExtensions() && z.EncExt(yy1199) {
				} else if yym1200 {
					z.EncBinaryMarshal(yy1199)
				} else if !yym1200 && z.IsJSONHandle() {
					z.EncJSONMarshal(yy1199)
				} else {
					z.EncFallback(yy1199)
				}
			}
			if yyr1181 || yy2arr1181 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1203 := z.EncBinary()
				_ = yym1203
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1204 := z.EncBinary()
				_ = yym1204
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1181 || yy2arr1181 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobPlanResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1205 := z.DecBinary()
	_ = yym1205
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1206 := r.ContainerType()
		if yyct1206 == codecSelferValueTypeMap4362 {
			yyl1206 := r.ReadMapStart()
			if yyl1206 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1206, d)
			}
		} else if yyct1206 == codecSelferValueTypeArray4362 {
			yyl1206 := r.ReadArrayStart()
			if yyl1206 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1206, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobPlanResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1207Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1207Slc
	var yyhl1207 bool = l >= 0
	for yyj1207 := 0; ; yyj1207++ {
		if yyhl1207 {
			if yyj1207 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1207Slc = r.DecodeBytes(yys1207Slc, true, true)
		yys1207 := string(yys1207Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1207 {
		case "Annotations":
			if r.TryDecodeAsNil() {
				if x.Annotations != nil {
					x.Annotations = nil
				}
			} else {
				if x.Annotations == nil {
					x.Annotations = new(PlanAnnotations)
				}
				x.Annotations.CodecDecodeSelf(d)
			}
		case "FailedTGAllocs":
			if r.TryDecodeAsNil() {
				x.FailedTGAllocs = nil
			} else {
				yyv1209 := &x.FailedTGAllocs
				yym1210 := z.DecBinary()
				_ = yym1210
				if false {
				} else {
					h.decMapstringPtrtoAllocMetric((*map[string]*AllocMetric)(yyv1209), d)
				}
			}
		case "JobModifyIndex":
			if r.TryDecodeAsNil() {
				x.JobModifyIndex = 0
			} else {
				x.JobModifyIndex = uint64(r.DecodeUint(64))
			}
		case "CreatedEvals":
			if r.TryDecodeAsNil() {
				x.CreatedEvals = nil
			} else {
				yyv1212 := &x.CreatedEvals
				yym1213 := z.DecBinary()
				_ = yym1213
				if false {
				} else {
					h.decSlicePtrtoEvaluation((*[]*Evaluation)(yyv1212), d)
				}
			}
		case "Diff":
			if r.TryDecodeAsNil() {
				if x.Diff != nil {
					x.Diff = nil
				}
			} else {
				if x.Diff == nil {
					x.Diff = new(JobDiff)
				}
				yym1215 := z.DecBinary()
				_ = yym1215
				if false {
				} else if z.HasExtensions() && z.DecExt(x.Diff) {
				} else {
					z.DecFallback(x.Diff, false)
				}
			}
		case "NextPeriodicLaunch":
			if r.TryDecodeAsNil() {
				x.NextPeriodicLaunch = time.Time{}
			} else {
				yyv1216 := &x.NextPeriodicLaunch
				yym1217 := z.DecBinary()
				_ = yym1217
				if false {
				} else if yym1218 := z.TimeRtidIfBinc(); yym1218 != 0 {
					r.DecodeBuiltin(yym1218, yyv1216)
				} else if z.HasExtensions() && z.DecExt(yyv1216) {
				} else if yym1217 {
					z.DecBinaryUnmarshal(yyv1216)
				} else if !yym1217 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(yyv1216)
				} else {
					z.DecFallback(yyv1216, false)
				}
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys1207)
		} // end switch yys1207
	} // end for yyj1207
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobPlanResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1220 int
	var yyb1220 bool
	var yyhl1220 bool = l >= 0
	yyj1220++
	if yyhl1220 {
		yyb1220 = yyj1220 > l
	} else {
		yyb1220 = r.CheckBreak()
	}
	if yyb1220 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Annotations != nil {
			x.Annotations = nil
		}
	} else {
		if x.Annotations == nil {
			x.Annotations = new(PlanAnnotations)
		}
		x.Annotations.CodecDecodeSelf(d)
	}
	yyj1220++
	if yyhl1220 {
		yyb1220 = yyj1220 > l
	} else {
		yyb1220 = r.CheckBreak()
	}
	if yyb1220 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.FailedTGAllocs = nil
	} else {
		yyv1222 := &x.FailedTGAllocs
		yym1223 := z.DecBinary()
		_ = yym1223
		if false {
		} else {
			h.decMapstringPtrtoAllocMetric((*map[string]*AllocMetric)(yyv1222), d)
		}
	}
	yyj1220++
	if yyhl1220 {
		yyb1220 = yyj1220 > l
	} else {
		yyb1220 = r.CheckBreak()
	}
	if yyb1220 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobModifyIndex = 0
	} else {
		x.JobModifyIndex = uint64(r.DecodeUint(64))
	}
	yyj1220++
	if yyhl1220 {
		yyb1220 = yyj1220 > l
	} else {
		yyb1220 = r.CheckBreak()
	}
	if yyb1220 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.CreatedEvals = nil
	} else {
		yyv1225 := &x.CreatedEvals
		yym1226 := z.DecBinary()
		_ = yym1226
		if false {
		} else {
			h.decSlicePtrtoEvaluation((*[]*Evaluation)(yyv1225), d)
		}
	}
	yyj1220++
	if yyhl1220 {
		yyb1220 = yyj1220 > l
	} else {
		yyb1220 = r.CheckBreak()
	}
	if yyb1220 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Diff != nil {
			x.Diff = nil
		}
	} else {
		if x.Diff == nil {
			x.Diff = new(JobDiff)
		}
		yym1228 := z.DecBinary()
		_ = yym1228
		if false {
		} else if z.HasExtensions() && z.DecExt(x.Diff) {
		} else {
			z.DecFallback(x.Diff, false)
		}
	}
	yyj1220++
	if yyhl1220 {
		yyb1220 = yyj1220 > l
	} else {
		yyb1220 = r.CheckBreak()
	}
	if yyb1220 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NextPeriodicLaunch = time.Time{}
	} else {
		yyv1229 := &x.NextPeriodicLaunch
		yym1230 := z.DecBinary()
		_ = yym1230
		if false {
		} else if yym1231 := z.TimeRtidIfBinc(); yym1231 != 0 {
			r.DecodeBuiltin(yym1231, yyv1229)
		} else if z.HasExtensions() && z.DecExt(yyv1229) {
		} else if yym1230 {
			z.DecBinaryUnmarshal(yyv1229)
		} else if !yym1230 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(yyv1229)
		} else {
			z.DecFallback(yyv1229, false)
		}
	}
	yyj1220++
	if yyhl1220 {
		yyb1220 = yyj1220 > l
	} else {
		yyb1220 = r.CheckBreak()
	}
	if yyb1220 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	for {
		yyj1220++
		if yyhl1220 {
			yyb1220 = yyj1220 > l
		} else {
			yyb1220 = r.CheckBreak()
		}
		if yyb1220 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1220-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *SingleAllocResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1233 := z.EncBinary()
		_ = yym1233
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1234 := !z.EncBinary()
			yy2arr1234 := z.EncBasicHandle().StructToArray
			var yyq1234 [4]bool
			_, _, _ = yysep1234, yyq1234, yy2arr1234
			const yyr1234 bool = false
			var yynn1234 int
			if yyr1234 || yy2arr1234 {
				r.EncodeArrayStart(4)
			} else {
				yynn1234 = 4
				for _, b := range yyq1234 {
					if b {
						yynn1234++
					}
				}
				r.EncodeMapStart(yynn1234)
				yynn1234 = 0
			}
			if yyr1234 || yy2arr1234 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Alloc == nil {
					r.EncodeNil()
				} else {
					x.Alloc.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Alloc"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Alloc == nil {
					r.EncodeNil()
				} else {
					x.Alloc.CodecEncodeSelf(e)
				}
			}
			if yyr1234 || yy2arr1234 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1237 := z.EncBinary()
				_ = yym1237
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1238 := z.EncBinary()
				_ = yym1238
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1234 || yy2arr1234 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1240 := z.EncBinary()
				_ = yym1240
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1241 := z.EncBinary()
				_ = yym1241
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr1234 || yy2arr1234 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1243 := z.EncBinary()
				_ = yym1243
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1244 := z.EncBinary()
				_ = yym1244
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr1234 || yy2arr1234 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *SingleAllocResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1245 := z.DecBinary()
	_ = yym1245
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1246 := r.ContainerType()
		if yyct1246 == codecSelferValueTypeMap4362 {
			yyl1246 := r.ReadMapStart()
			if yyl1246 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1246, d)
			}
		} else if yyct1246 == codecSelferValueTypeArray4362 {
			yyl1246 := r.ReadArrayStart()
			if yyl1246 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1246, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *SingleAllocResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1247Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1247Slc
	var yyhl1247 bool = l >= 0
	for yyj1247 := 0; ; yyj1247++ {
		if yyhl1247 {
			if yyj1247 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1247Slc = r.DecodeBytes(yys1247Slc, true, true)
		yys1247 := string(yys1247Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1247 {
		case "Alloc":
			if r.TryDecodeAsNil() {
				if x.Alloc != nil {
					x.Alloc = nil
				}
			} else {
				if x.Alloc == nil {
					x.Alloc = new(Allocation)
				}
				x.Alloc.CodecDecodeSelf(d)
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1247)
		} // end switch yys1247
	} // end for yyj1247
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *SingleAllocResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1252 int
	var yyb1252 bool
	var yyhl1252 bool = l >= 0
	yyj1252++
	if yyhl1252 {
		yyb1252 = yyj1252 > l
	} else {
		yyb1252 = r.CheckBreak()
	}
	if yyb1252 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Alloc != nil {
			x.Alloc = nil
		}
	} else {
		if x.Alloc == nil {
			x.Alloc = new(Allocation)
		}
		x.Alloc.CodecDecodeSelf(d)
	}
	yyj1252++
	if yyhl1252 {
		yyb1252 = yyj1252 > l
	} else {
		yyb1252 = r.CheckBreak()
	}
	if yyb1252 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1252++
	if yyhl1252 {
		yyb1252 = yyj1252 > l
	} else {
		yyb1252 = r.CheckBreak()
	}
	if yyb1252 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1252++
	if yyhl1252 {
		yyb1252 = yyj1252 > l
	} else {
		yyb1252 = r.CheckBreak()
	}
	if yyb1252 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1252++
		if yyhl1252 {
			yyb1252 = yyj1252 > l
		} else {
			yyb1252 = r.CheckBreak()
		}
		if yyb1252 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1252-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *AllocsGetResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1257 := z.EncBinary()
		_ = yym1257
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1258 := !z.EncBinary()
			yy2arr1258 := z.EncBasicHandle().StructToArray
			var yyq1258 [4]bool
			_, _, _ = yysep1258, yyq1258, yy2arr1258
			const yyr1258 bool = false
			var yynn1258 int
			if yyr1258 || yy2arr1258 {
				r.EncodeArrayStart(4)
			} else {
				yynn1258 = 4
				for _, b := range yyq1258 {
					if b {
						yynn1258++
					}
				}
				r.EncodeMapStart(yynn1258)
				yynn1258 = 0
			}
			if yyr1258 || yy2arr1258 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Allocs == nil {
					r.EncodeNil()
				} else {
					yym1260 := z.EncBinary()
					_ = yym1260
					if false {
					} else {
						h.encSlicePtrtoAllocation(([]*Allocation)(x.Allocs), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Allocs"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Allocs == nil {
					r.EncodeNil()
				} else {
					yym1261 := z.EncBinary()
					_ = yym1261
					if false {
					} else {
						h.encSlicePtrtoAllocation(([]*Allocation)(x.Allocs), e)
					}
				}
			}
			if yyr1258 || yy2arr1258 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1263 := z.EncBinary()
				_ = yym1263
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1264 := z.EncBinary()
				_ = yym1264
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1258 || yy2arr1258 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1266 := z.EncBinary()
				_ = yym1266
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1267 := z.EncBinary()
				_ = yym1267
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr1258 || yy2arr1258 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1269 := z.EncBinary()
				_ = yym1269
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1270 := z.EncBinary()
				_ = yym1270
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr1258 || yy2arr1258 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *AllocsGetResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1271 := z.DecBinary()
	_ = yym1271
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1272 := r.ContainerType()
		if yyct1272 == codecSelferValueTypeMap4362 {
			yyl1272 := r.ReadMapStart()
			if yyl1272 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1272, d)
			}
		} else if yyct1272 == codecSelferValueTypeArray4362 {
			yyl1272 := r.ReadArrayStart()
			if yyl1272 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1272, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *AllocsGetResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1273Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1273Slc
	var yyhl1273 bool = l >= 0
	for yyj1273 := 0; ; yyj1273++ {
		if yyhl1273 {
			if yyj1273 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1273Slc = r.DecodeBytes(yys1273Slc, true, true)
		yys1273 := string(yys1273Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1273 {
		case "Allocs":
			if r.TryDecodeAsNil() {
				x.Allocs = nil
			} else {
				yyv1274 := &x.Allocs
				yym1275 := z.DecBinary()
				_ = yym1275
				if false {
				} else {
					h.decSlicePtrtoAllocation((*[]*Allocation)(yyv1274), d)
				}
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1273)
		} // end switch yys1273
	} // end for yyj1273
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *AllocsGetResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1279 int
	var yyb1279 bool
	var yyhl1279 bool = l >= 0
	yyj1279++
	if yyhl1279 {
		yyb1279 = yyj1279 > l
	} else {
		yyb1279 = r.CheckBreak()
	}
	if yyb1279 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Allocs = nil
	} else {
		yyv1280 := &x.Allocs
		yym1281 := z.DecBinary()
		_ = yym1281
		if false {
		} else {
			h.decSlicePtrtoAllocation((*[]*Allocation)(yyv1280), d)
		}
	}
	yyj1279++
	if yyhl1279 {
		yyb1279 = yyj1279 > l
	} else {
		yyb1279 = r.CheckBreak()
	}
	if yyb1279 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1279++
	if yyhl1279 {
		yyb1279 = yyj1279 > l
	} else {
		yyb1279 = r.CheckBreak()
	}
	if yyb1279 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1279++
	if yyhl1279 {
		yyb1279 = yyj1279 > l
	} else {
		yyb1279 = r.CheckBreak()
	}
	if yyb1279 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1279++
		if yyhl1279 {
			yyb1279 = yyj1279 > l
		} else {
			yyb1279 = r.CheckBreak()
		}
		if yyb1279 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1279-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobAllocationsResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1285 := z.EncBinary()
		_ = yym1285
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1286 := !z.EncBinary()
			yy2arr1286 := z.EncBasicHandle().StructToArray
			var yyq1286 [4]bool
			_, _, _ = yysep1286, yyq1286, yy2arr1286
			const yyr1286 bool = false
			var yynn1286 int
			if yyr1286 || yy2arr1286 {
				r.EncodeArrayStart(4)
			} else {
				yynn1286 = 4
				for _, b := range yyq1286 {
					if b {
						yynn1286++
					}
				}
				r.EncodeMapStart(yynn1286)
				yynn1286 = 0
			}
			if yyr1286 || yy2arr1286 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Allocations == nil {
					r.EncodeNil()
				} else {
					yym1288 := z.EncBinary()
					_ = yym1288
					if false {
					} else {
						h.encSlicePtrtoAllocListStub(([]*AllocListStub)(x.Allocations), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Allocations"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Allocations == nil {
					r.EncodeNil()
				} else {
					yym1289 := z.EncBinary()
					_ = yym1289
					if false {
					} else {
						h.encSlicePtrtoAllocListStub(([]*AllocListStub)(x.Allocations), e)
					}
				}
			}
			if yyr1286 || yy2arr1286 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1291 := z.EncBinary()
				_ = yym1291
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1292 := z.EncBinary()
				_ = yym1292
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1286 || yy2arr1286 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1294 := z.EncBinary()
				_ = yym1294
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1295 := z.EncBinary()
				_ = yym1295
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr1286 || yy2arr1286 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1297 := z.EncBinary()
				_ = yym1297
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1298 := z.EncBinary()
				_ = yym1298
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr1286 || yy2arr1286 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobAllocationsResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1299 := z.DecBinary()
	_ = yym1299
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1300 := r.ContainerType()
		if yyct1300 == codecSelferValueTypeMap4362 {
			yyl1300 := r.ReadMapStart()
			if yyl1300 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1300, d)
			}
		} else if yyct1300 == codecSelferValueTypeArray4362 {
			yyl1300 := r.ReadArrayStart()
			if yyl1300 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1300, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobAllocationsResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1301Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1301Slc
	var yyhl1301 bool = l >= 0
	for yyj1301 := 0; ; yyj1301++ {
		if yyhl1301 {
			if yyj1301 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1301Slc = r.DecodeBytes(yys1301Slc, true, true)
		yys1301 := string(yys1301Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1301 {
		case "Allocations":
			if r.TryDecodeAsNil() {
				x.Allocations = nil
			} else {
				yyv1302 := &x.Allocations
				yym1303 := z.DecBinary()
				_ = yym1303
				if false {
				} else {
					h.decSlicePtrtoAllocListStub((*[]*AllocListStub)(yyv1302), d)
				}
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1301)
		} // end switch yys1301
	} // end for yyj1301
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobAllocationsResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1307 int
	var yyb1307 bool
	var yyhl1307 bool = l >= 0
	yyj1307++
	if yyhl1307 {
		yyb1307 = yyj1307 > l
	} else {
		yyb1307 = r.CheckBreak()
	}
	if yyb1307 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Allocations = nil
	} else {
		yyv1308 := &x.Allocations
		yym1309 := z.DecBinary()
		_ = yym1309
		if false {
		} else {
			h.decSlicePtrtoAllocListStub((*[]*AllocListStub)(yyv1308), d)
		}
	}
	yyj1307++
	if yyhl1307 {
		yyb1307 = yyj1307 > l
	} else {
		yyb1307 = r.CheckBreak()
	}
	if yyb1307 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1307++
	if yyhl1307 {
		yyb1307 = yyj1307 > l
	} else {
		yyb1307 = r.CheckBreak()
	}
	if yyb1307 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1307++
	if yyhl1307 {
		yyb1307 = yyj1307 > l
	} else {
		yyb1307 = r.CheckBreak()
	}
	if yyb1307 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1307++
		if yyhl1307 {
			yyb1307 = yyj1307 > l
		} else {
			yyb1307 = r.CheckBreak()
		}
		if yyb1307 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1307-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobEvaluationsResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1313 := z.EncBinary()
		_ = yym1313
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1314 := !z.EncBinary()
			yy2arr1314 := z.EncBasicHandle().StructToArray
			var yyq1314 [4]bool
			_, _, _ = yysep1314, yyq1314, yy2arr1314
			const yyr1314 bool = false
			var yynn1314 int
			if yyr1314 || yy2arr1314 {
				r.EncodeArrayStart(4)
			} else {
				yynn1314 = 4
				for _, b := range yyq1314 {
					if b {
						yynn1314++
					}
				}
				r.EncodeMapStart(yynn1314)
				yynn1314 = 0
			}
			if yyr1314 || yy2arr1314 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Evaluations == nil {
					r.EncodeNil()
				} else {
					yym1316 := z.EncBinary()
					_ = yym1316
					if false {
					} else {
						h.encSlicePtrtoEvaluation(([]*Evaluation)(x.Evaluations), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Evaluations"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Evaluations == nil {
					r.EncodeNil()
				} else {
					yym1317 := z.EncBinary()
					_ = yym1317
					if false {
					} else {
						h.encSlicePtrtoEvaluation(([]*Evaluation)(x.Evaluations), e)
					}
				}
			}
			if yyr1314 || yy2arr1314 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1319 := z.EncBinary()
				_ = yym1319
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1320 := z.EncBinary()
				_ = yym1320
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1314 || yy2arr1314 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1322 := z.EncBinary()
				_ = yym1322
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1323 := z.EncBinary()
				_ = yym1323
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr1314 || yy2arr1314 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1325 := z.EncBinary()
				_ = yym1325
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1326 := z.EncBinary()
				_ = yym1326
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr1314 || yy2arr1314 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobEvaluationsResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1327 := z.DecBinary()
	_ = yym1327
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1328 := r.ContainerType()
		if yyct1328 == codecSelferValueTypeMap4362 {
			yyl1328 := r.ReadMapStart()
			if yyl1328 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1328, d)
			}
		} else if yyct1328 == codecSelferValueTypeArray4362 {
			yyl1328 := r.ReadArrayStart()
			if yyl1328 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1328, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobEvaluationsResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1329Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1329Slc
	var yyhl1329 bool = l >= 0
	for yyj1329 := 0; ; yyj1329++ {
		if yyhl1329 {
			if yyj1329 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1329Slc = r.DecodeBytes(yys1329Slc, true, true)
		yys1329 := string(yys1329Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1329 {
		case "Evaluations":
			if r.TryDecodeAsNil() {
				x.Evaluations = nil
			} else {
				yyv1330 := &x.Evaluations
				yym1331 := z.DecBinary()
				_ = yym1331
				if false {
				} else {
					h.decSlicePtrtoEvaluation((*[]*Evaluation)(yyv1330), d)
				}
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1329)
		} // end switch yys1329
	} // end for yyj1329
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobEvaluationsResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1335 int
	var yyb1335 bool
	var yyhl1335 bool = l >= 0
	yyj1335++
	if yyhl1335 {
		yyb1335 = yyj1335 > l
	} else {
		yyb1335 = r.CheckBreak()
	}
	if yyb1335 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Evaluations = nil
	} else {
		yyv1336 := &x.Evaluations
		yym1337 := z.DecBinary()
		_ = yym1337
		if false {
		} else {
			h.decSlicePtrtoEvaluation((*[]*Evaluation)(yyv1336), d)
		}
	}
	yyj1335++
	if yyhl1335 {
		yyb1335 = yyj1335 > l
	} else {
		yyb1335 = r.CheckBreak()
	}
	if yyb1335 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1335++
	if yyhl1335 {
		yyb1335 = yyj1335 > l
	} else {
		yyb1335 = r.CheckBreak()
	}
	if yyb1335 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1335++
	if yyhl1335 {
		yyb1335 = yyj1335 > l
	} else {
		yyb1335 = r.CheckBreak()
	}
	if yyb1335 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1335++
		if yyhl1335 {
			yyb1335 = yyj1335 > l
		} else {
			yyb1335 = r.CheckBreak()
		}
		if yyb1335 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1335-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *SingleEvalResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1341 := z.EncBinary()
		_ = yym1341
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1342 := !z.EncBinary()
			yy2arr1342 := z.EncBasicHandle().StructToArray
			var yyq1342 [4]bool
			_, _, _ = yysep1342, yyq1342, yy2arr1342
			const yyr1342 bool = false
			var yynn1342 int
			if yyr1342 || yy2arr1342 {
				r.EncodeArrayStart(4)
			} else {
				yynn1342 = 4
				for _, b := range yyq1342 {
					if b {
						yynn1342++
					}
				}
				r.EncodeMapStart(yynn1342)
				yynn1342 = 0
			}
			if yyr1342 || yy2arr1342 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Eval == nil {
					r.EncodeNil()
				} else {
					x.Eval.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Eval"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Eval == nil {
					r.EncodeNil()
				} else {
					x.Eval.CodecEncodeSelf(e)
				}
			}
			if yyr1342 || yy2arr1342 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1345 := z.EncBinary()
				_ = yym1345
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1346 := z.EncBinary()
				_ = yym1346
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1342 || yy2arr1342 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1348 := z.EncBinary()
				_ = yym1348
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1349 := z.EncBinary()
				_ = yym1349
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr1342 || yy2arr1342 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1351 := z.EncBinary()
				_ = yym1351
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1352 := z.EncBinary()
				_ = yym1352
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr1342 || yy2arr1342 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *SingleEvalResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1353 := z.DecBinary()
	_ = yym1353
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1354 := r.ContainerType()
		if yyct1354 == codecSelferValueTypeMap4362 {
			yyl1354 := r.ReadMapStart()
			if yyl1354 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1354, d)
			}
		} else if yyct1354 == codecSelferValueTypeArray4362 {
			yyl1354 := r.ReadArrayStart()
			if yyl1354 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1354, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *SingleEvalResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1355Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1355Slc
	var yyhl1355 bool = l >= 0
	for yyj1355 := 0; ; yyj1355++ {
		if yyhl1355 {
			if yyj1355 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1355Slc = r.DecodeBytes(yys1355Slc, true, true)
		yys1355 := string(yys1355Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1355 {
		case "Eval":
			if r.TryDecodeAsNil() {
				if x.Eval != nil {
					x.Eval = nil
				}
			} else {
				if x.Eval == nil {
					x.Eval = new(Evaluation)
				}
				x.Eval.CodecDecodeSelf(d)
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1355)
		} // end switch yys1355
	} // end for yyj1355
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *SingleEvalResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1360 int
	var yyb1360 bool
	var yyhl1360 bool = l >= 0
	yyj1360++
	if yyhl1360 {
		yyb1360 = yyj1360 > l
	} else {
		yyb1360 = r.CheckBreak()
	}
	if yyb1360 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Eval != nil {
			x.Eval = nil
		}
	} else {
		if x.Eval == nil {
			x.Eval = new(Evaluation)
		}
		x.Eval.CodecDecodeSelf(d)
	}
	yyj1360++
	if yyhl1360 {
		yyb1360 = yyj1360 > l
	} else {
		yyb1360 = r.CheckBreak()
	}
	if yyb1360 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1360++
	if yyhl1360 {
		yyb1360 = yyj1360 > l
	} else {
		yyb1360 = r.CheckBreak()
	}
	if yyb1360 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1360++
	if yyhl1360 {
		yyb1360 = yyj1360 > l
	} else {
		yyb1360 = r.CheckBreak()
	}
	if yyb1360 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1360++
		if yyhl1360 {
			yyb1360 = yyj1360 > l
		} else {
			yyb1360 = r.CheckBreak()
		}
		if yyb1360 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1360-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *EvalDequeueResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1365 := z.EncBinary()
		_ = yym1365
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1366 := !z.EncBinary()
			yy2arr1366 := z.EncBasicHandle().StructToArray
			var yyq1366 [5]bool
			_, _, _ = yysep1366, yyq1366, yy2arr1366
			const yyr1366 bool = false
			var yynn1366 int
			if yyr1366 || yy2arr1366 {
				r.EncodeArrayStart(5)
			} else {
				yynn1366 = 5
				for _, b := range yyq1366 {
					if b {
						yynn1366++
					}
				}
				r.EncodeMapStart(yynn1366)
				yynn1366 = 0
			}
			if yyr1366 || yy2arr1366 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Eval == nil {
					r.EncodeNil()
				} else {
					x.Eval.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Eval"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Eval == nil {
					r.EncodeNil()
				} else {
					x.Eval.CodecEncodeSelf(e)
				}
			}
			if yyr1366 || yy2arr1366 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1369 := z.EncBinary()
				_ = yym1369
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Token))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Token"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1370 := z.EncBinary()
				_ = yym1370
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Token))
				}
			}
			if yyr1366 || yy2arr1366 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1372 := z.EncBinary()
				_ = yym1372
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1373 := z.EncBinary()
				_ = yym1373
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1366 || yy2arr1366 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1375 := z.EncBinary()
				_ = yym1375
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1376 := z.EncBinary()
				_ = yym1376
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr1366 || yy2arr1366 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1378 := z.EncBinary()
				_ = yym1378
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1379 := z.EncBinary()
				_ = yym1379
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr1366 || yy2arr1366 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *EvalDequeueResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1380 := z.DecBinary()
	_ = yym1380
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1381 := r.ContainerType()
		if yyct1381 == codecSelferValueTypeMap4362 {
			yyl1381 := r.ReadMapStart()
			if yyl1381 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1381, d)
			}
		} else if yyct1381 == codecSelferValueTypeArray4362 {
			yyl1381 := r.ReadArrayStart()
			if yyl1381 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1381, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *EvalDequeueResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1382Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1382Slc
	var yyhl1382 bool = l >= 0
	for yyj1382 := 0; ; yyj1382++ {
		if yyhl1382 {
			if yyj1382 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1382Slc = r.DecodeBytes(yys1382Slc, true, true)
		yys1382 := string(yys1382Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1382 {
		case "Eval":
			if r.TryDecodeAsNil() {
				if x.Eval != nil {
					x.Eval = nil
				}
			} else {
				if x.Eval == nil {
					x.Eval = new(Evaluation)
				}
				x.Eval.CodecDecodeSelf(d)
			}
		case "Token":
			if r.TryDecodeAsNil() {
				x.Token = ""
			} else {
				x.Token = string(r.DecodeString())
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1382)
		} // end switch yys1382
	} // end for yyj1382
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *EvalDequeueResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1388 int
	var yyb1388 bool
	var yyhl1388 bool = l >= 0
	yyj1388++
	if yyhl1388 {
		yyb1388 = yyj1388 > l
	} else {
		yyb1388 = r.CheckBreak()
	}
	if yyb1388 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Eval != nil {
			x.Eval = nil
		}
	} else {
		if x.Eval == nil {
			x.Eval = new(Evaluation)
		}
		x.Eval.CodecDecodeSelf(d)
	}
	yyj1388++
	if yyhl1388 {
		yyb1388 = yyj1388 > l
	} else {
		yyb1388 = r.CheckBreak()
	}
	if yyb1388 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Token = ""
	} else {
		x.Token = string(r.DecodeString())
	}
	yyj1388++
	if yyhl1388 {
		yyb1388 = yyj1388 > l
	} else {
		yyb1388 = r.CheckBreak()
	}
	if yyb1388 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1388++
	if yyhl1388 {
		yyb1388 = yyj1388 > l
	} else {
		yyb1388 = r.CheckBreak()
	}
	if yyb1388 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1388++
	if yyhl1388 {
		yyb1388 = yyj1388 > l
	} else {
		yyb1388 = r.CheckBreak()
	}
	if yyb1388 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1388++
		if yyhl1388 {
			yyb1388 = yyj1388 > l
		} else {
			yyb1388 = r.CheckBreak()
		}
		if yyb1388 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1388-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *PlanResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1394 := z.EncBinary()
		_ = yym1394
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1395 := !z.EncBinary()
			yy2arr1395 := z.EncBasicHandle().StructToArray
			var yyq1395 [2]bool
			_, _, _ = yysep1395, yyq1395, yy2arr1395
			const yyr1395 bool = false
			var yynn1395 int
			if yyr1395 || yy2arr1395 {
				r.EncodeArrayStart(2)
			} else {
				yynn1395 = 2
				for _, b := range yyq1395 {
					if b {
						yynn1395++
					}
				}
				r.EncodeMapStart(yynn1395)
				yynn1395 = 0
			}
			if yyr1395 || yy2arr1395 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Result == nil {
					r.EncodeNil()
				} else {
					x.Result.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Result"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Result == nil {
					r.EncodeNil()
				} else {
					x.Result.CodecEncodeSelf(e)
				}
			}
			if yyr1395 || yy2arr1395 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1398 := z.EncBinary()
				_ = yym1398
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1399 := z.EncBinary()
				_ = yym1399
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1395 || yy2arr1395 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *PlanResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1400 := z.DecBinary()
	_ = yym1400
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1401 := r.ContainerType()
		if yyct1401 == codecSelferValueTypeMap4362 {
			yyl1401 := r.ReadMapStart()
			if yyl1401 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1401, d)
			}
		} else if yyct1401 == codecSelferValueTypeArray4362 {
			yyl1401 := r.ReadArrayStart()
			if yyl1401 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1401, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *PlanResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1402Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1402Slc
	var yyhl1402 bool = l >= 0
	for yyj1402 := 0; ; yyj1402++ {
		if yyhl1402 {
			if yyj1402 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1402Slc = r.DecodeBytes(yys1402Slc, true, true)
		yys1402 := string(yys1402Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1402 {
		case "Result":
			if r.TryDecodeAsNil() {
				if x.Result != nil {
					x.Result = nil
				}
			} else {
				if x.Result == nil {
					x.Result = new(PlanResult)
				}
				x.Result.CodecDecodeSelf(d)
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys1402)
		} // end switch yys1402
	} // end for yyj1402
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *PlanResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1405 int
	var yyb1405 bool
	var yyhl1405 bool = l >= 0
	yyj1405++
	if yyhl1405 {
		yyb1405 = yyj1405 > l
	} else {
		yyb1405 = r.CheckBreak()
	}
	if yyb1405 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Result != nil {
			x.Result = nil
		}
	} else {
		if x.Result == nil {
			x.Result = new(PlanResult)
		}
		x.Result.CodecDecodeSelf(d)
	}
	yyj1405++
	if yyhl1405 {
		yyb1405 = yyj1405 > l
	} else {
		yyb1405 = r.CheckBreak()
	}
	if yyb1405 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	for {
		yyj1405++
		if yyhl1405 {
			yyb1405 = yyj1405 > l
		} else {
			yyb1405 = r.CheckBreak()
		}
		if yyb1405 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1405-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *AllocListResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1408 := z.EncBinary()
		_ = yym1408
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1409 := !z.EncBinary()
			yy2arr1409 := z.EncBasicHandle().StructToArray
			var yyq1409 [4]bool
			_, _, _ = yysep1409, yyq1409, yy2arr1409
			const yyr1409 bool = false
			var yynn1409 int
			if yyr1409 || yy2arr1409 {
				r.EncodeArrayStart(4)
			} else {
				yynn1409 = 4
				for _, b := range yyq1409 {
					if b {
						yynn1409++
					}
				}
				r.EncodeMapStart(yynn1409)
				yynn1409 = 0
			}
			if yyr1409 || yy2arr1409 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Allocations == nil {
					r.EncodeNil()
				} else {
					yym1411 := z.EncBinary()
					_ = yym1411
					if false {
					} else {
						h.encSlicePtrtoAllocListStub(([]*AllocListStub)(x.Allocations), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Allocations"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Allocations == nil {
					r.EncodeNil()
				} else {
					yym1412 := z.EncBinary()
					_ = yym1412
					if false {
					} else {
						h.encSlicePtrtoAllocListStub(([]*AllocListStub)(x.Allocations), e)
					}
				}
			}
			if yyr1409 || yy2arr1409 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1414 := z.EncBinary()
				_ = yym1414
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1415 := z.EncBinary()
				_ = yym1415
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1409 || yy2arr1409 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1417 := z.EncBinary()
				_ = yym1417
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1418 := z.EncBinary()
				_ = yym1418
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr1409 || yy2arr1409 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1420 := z.EncBinary()
				_ = yym1420
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1421 := z.EncBinary()
				_ = yym1421
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr1409 || yy2arr1409 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *AllocListResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1422 := z.DecBinary()
	_ = yym1422
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1423 := r.ContainerType()
		if yyct1423 == codecSelferValueTypeMap4362 {
			yyl1423 := r.ReadMapStart()
			if yyl1423 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1423, d)
			}
		} else if yyct1423 == codecSelferValueTypeArray4362 {
			yyl1423 := r.ReadArrayStart()
			if yyl1423 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1423, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *AllocListResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1424Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1424Slc
	var yyhl1424 bool = l >= 0
	for yyj1424 := 0; ; yyj1424++ {
		if yyhl1424 {
			if yyj1424 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1424Slc = r.DecodeBytes(yys1424Slc, true, true)
		yys1424 := string(yys1424Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1424 {
		case "Allocations":
			if r.TryDecodeAsNil() {
				x.Allocations = nil
			} else {
				yyv1425 := &x.Allocations
				yym1426 := z.DecBinary()
				_ = yym1426
				if false {
				} else {
					h.decSlicePtrtoAllocListStub((*[]*AllocListStub)(yyv1425), d)
				}
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1424)
		} // end switch yys1424
	} // end for yyj1424
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *AllocListResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1430 int
	var yyb1430 bool
	var yyhl1430 bool = l >= 0
	yyj1430++
	if yyhl1430 {
		yyb1430 = yyj1430 > l
	} else {
		yyb1430 = r.CheckBreak()
	}
	if yyb1430 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Allocations = nil
	} else {
		yyv1431 := &x.Allocations
		yym1432 := z.DecBinary()
		_ = yym1432
		if false {
		} else {
			h.decSlicePtrtoAllocListStub((*[]*AllocListStub)(yyv1431), d)
		}
	}
	yyj1430++
	if yyhl1430 {
		yyb1430 = yyj1430 > l
	} else {
		yyb1430 = r.CheckBreak()
	}
	if yyb1430 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1430++
	if yyhl1430 {
		yyb1430 = yyj1430 > l
	} else {
		yyb1430 = r.CheckBreak()
	}
	if yyb1430 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1430++
	if yyhl1430 {
		yyb1430 = yyj1430 > l
	} else {
		yyb1430 = r.CheckBreak()
	}
	if yyb1430 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1430++
		if yyhl1430 {
			yyb1430 = yyj1430 > l
		} else {
			yyb1430 = r.CheckBreak()
		}
		if yyb1430 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1430-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *EvalListResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1436 := z.EncBinary()
		_ = yym1436
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1437 := !z.EncBinary()
			yy2arr1437 := z.EncBasicHandle().StructToArray
			var yyq1437 [4]bool
			_, _, _ = yysep1437, yyq1437, yy2arr1437
			const yyr1437 bool = false
			var yynn1437 int
			if yyr1437 || yy2arr1437 {
				r.EncodeArrayStart(4)
			} else {
				yynn1437 = 4
				for _, b := range yyq1437 {
					if b {
						yynn1437++
					}
				}
				r.EncodeMapStart(yynn1437)
				yynn1437 = 0
			}
			if yyr1437 || yy2arr1437 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Evaluations == nil {
					r.EncodeNil()
				} else {
					yym1439 := z.EncBinary()
					_ = yym1439
					if false {
					} else {
						h.encSlicePtrtoEvaluation(([]*Evaluation)(x.Evaluations), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Evaluations"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Evaluations == nil {
					r.EncodeNil()
				} else {
					yym1440 := z.EncBinary()
					_ = yym1440
					if false {
					} else {
						h.encSlicePtrtoEvaluation(([]*Evaluation)(x.Evaluations), e)
					}
				}
			}
			if yyr1437 || yy2arr1437 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1442 := z.EncBinary()
				_ = yym1442
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1443 := z.EncBinary()
				_ = yym1443
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1437 || yy2arr1437 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1445 := z.EncBinary()
				_ = yym1445
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1446 := z.EncBinary()
				_ = yym1446
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr1437 || yy2arr1437 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1448 := z.EncBinary()
				_ = yym1448
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1449 := z.EncBinary()
				_ = yym1449
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr1437 || yy2arr1437 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *EvalListResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1450 := z.DecBinary()
	_ = yym1450
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1451 := r.ContainerType()
		if yyct1451 == codecSelferValueTypeMap4362 {
			yyl1451 := r.ReadMapStart()
			if yyl1451 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1451, d)
			}
		} else if yyct1451 == codecSelferValueTypeArray4362 {
			yyl1451 := r.ReadArrayStart()
			if yyl1451 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1451, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *EvalListResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1452Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1452Slc
	var yyhl1452 bool = l >= 0
	for yyj1452 := 0; ; yyj1452++ {
		if yyhl1452 {
			if yyj1452 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1452Slc = r.DecodeBytes(yys1452Slc, true, true)
		yys1452 := string(yys1452Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1452 {
		case "Evaluations":
			if r.TryDecodeAsNil() {
				x.Evaluations = nil
			} else {
				yyv1453 := &x.Evaluations
				yym1454 := z.DecBinary()
				_ = yym1454
				if false {
				} else {
					h.decSlicePtrtoEvaluation((*[]*Evaluation)(yyv1453), d)
				}
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1452)
		} // end switch yys1452
	} // end for yyj1452
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *EvalListResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1458 int
	var yyb1458 bool
	var yyhl1458 bool = l >= 0
	yyj1458++
	if yyhl1458 {
		yyb1458 = yyj1458 > l
	} else {
		yyb1458 = r.CheckBreak()
	}
	if yyb1458 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Evaluations = nil
	} else {
		yyv1459 := &x.Evaluations
		yym1460 := z.DecBinary()
		_ = yym1460
		if false {
		} else {
			h.decSlicePtrtoEvaluation((*[]*Evaluation)(yyv1459), d)
		}
	}
	yyj1458++
	if yyhl1458 {
		yyb1458 = yyj1458 > l
	} else {
		yyb1458 = r.CheckBreak()
	}
	if yyb1458 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1458++
	if yyhl1458 {
		yyb1458 = yyj1458 > l
	} else {
		yyb1458 = r.CheckBreak()
	}
	if yyb1458 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1458++
	if yyhl1458 {
		yyb1458 = yyj1458 > l
	} else {
		yyb1458 = r.CheckBreak()
	}
	if yyb1458 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1458++
		if yyhl1458 {
			yyb1458 = yyj1458 > l
		} else {
			yyb1458 = r.CheckBreak()
		}
		if yyb1458 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1458-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *EvalAllocationsResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1464 := z.EncBinary()
		_ = yym1464
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1465 := !z.EncBinary()
			yy2arr1465 := z.EncBasicHandle().StructToArray
			var yyq1465 [4]bool
			_, _, _ = yysep1465, yyq1465, yy2arr1465
			const yyr1465 bool = false
			var yynn1465 int
			if yyr1465 || yy2arr1465 {
				r.EncodeArrayStart(4)
			} else {
				yynn1465 = 4
				for _, b := range yyq1465 {
					if b {
						yynn1465++
					}
				}
				r.EncodeMapStart(yynn1465)
				yynn1465 = 0
			}
			if yyr1465 || yy2arr1465 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Allocations == nil {
					r.EncodeNil()
				} else {
					yym1467 := z.EncBinary()
					_ = yym1467
					if false {
					} else {
						h.encSlicePtrtoAllocListStub(([]*AllocListStub)(x.Allocations), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Allocations"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Allocations == nil {
					r.EncodeNil()
				} else {
					yym1468 := z.EncBinary()
					_ = yym1468
					if false {
					} else {
						h.encSlicePtrtoAllocListStub(([]*AllocListStub)(x.Allocations), e)
					}
				}
			}
			if yyr1465 || yy2arr1465 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1470 := z.EncBinary()
				_ = yym1470
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1471 := z.EncBinary()
				_ = yym1471
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1465 || yy2arr1465 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1473 := z.EncBinary()
				_ = yym1473
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LastContact"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1474 := z.EncBinary()
				_ = yym1474
				if false {
				} else if z.HasExtensions() && z.EncExt(x.LastContact) {
				} else {
					r.EncodeInt(int64(x.LastContact))
				}
			}
			if yyr1465 || yy2arr1465 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1476 := z.EncBinary()
				_ = yym1476
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KnownLeader"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1477 := z.EncBinary()
				_ = yym1477
				if false {
				} else {
					r.EncodeBool(bool(x.KnownLeader))
				}
			}
			if yyr1465 || yy2arr1465 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *EvalAllocationsResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1478 := z.DecBinary()
	_ = yym1478
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1479 := r.ContainerType()
		if yyct1479 == codecSelferValueTypeMap4362 {
			yyl1479 := r.ReadMapStart()
			if yyl1479 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1479, d)
			}
		} else if yyct1479 == codecSelferValueTypeArray4362 {
			yyl1479 := r.ReadArrayStart()
			if yyl1479 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1479, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *EvalAllocationsResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1480Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1480Slc
	var yyhl1480 bool = l >= 0
	for yyj1480 := 0; ; yyj1480++ {
		if yyhl1480 {
			if yyj1480 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1480Slc = r.DecodeBytes(yys1480Slc, true, true)
		yys1480 := string(yys1480Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1480 {
		case "Allocations":
			if r.TryDecodeAsNil() {
				x.Allocations = nil
			} else {
				yyv1481 := &x.Allocations
				yym1482 := z.DecBinary()
				_ = yym1482
				if false {
				} else {
					h.decSlicePtrtoAllocListStub((*[]*AllocListStub)(yyv1481), d)
				}
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		case "LastContact":
			if r.TryDecodeAsNil() {
				x.LastContact = 0
			} else {
				x.LastContact = time.Duration(r.DecodeInt(64))
			}
		case "KnownLeader":
			if r.TryDecodeAsNil() {
				x.KnownLeader = false
			} else {
				x.KnownLeader = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys1480)
		} // end switch yys1480
	} // end for yyj1480
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *EvalAllocationsResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1486 int
	var yyb1486 bool
	var yyhl1486 bool = l >= 0
	yyj1486++
	if yyhl1486 {
		yyb1486 = yyj1486 > l
	} else {
		yyb1486 = r.CheckBreak()
	}
	if yyb1486 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Allocations = nil
	} else {
		yyv1487 := &x.Allocations
		yym1488 := z.DecBinary()
		_ = yym1488
		if false {
		} else {
			h.decSlicePtrtoAllocListStub((*[]*AllocListStub)(yyv1487), d)
		}
	}
	yyj1486++
	if yyhl1486 {
		yyb1486 = yyj1486 > l
	} else {
		yyb1486 = r.CheckBreak()
	}
	if yyb1486 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	yyj1486++
	if yyhl1486 {
		yyb1486 = yyj1486 > l
	} else {
		yyb1486 = r.CheckBreak()
	}
	if yyb1486 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.LastContact = 0
	} else {
		x.LastContact = time.Duration(r.DecodeInt(64))
	}
	yyj1486++
	if yyhl1486 {
		yyb1486 = yyj1486 > l
	} else {
		yyb1486 = r.CheckBreak()
	}
	if yyb1486 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KnownLeader = false
	} else {
		x.KnownLeader = bool(r.DecodeBool())
	}
	for {
		yyj1486++
		if yyhl1486 {
			yyb1486 = yyj1486 > l
		} else {
			yyb1486 = r.CheckBreak()
		}
		if yyb1486 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1486-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *PeriodicForceResponse) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1492 := z.EncBinary()
		_ = yym1492
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1493 := !z.EncBinary()
			yy2arr1493 := z.EncBasicHandle().StructToArray
			var yyq1493 [3]bool
			_, _, _ = yysep1493, yyq1493, yy2arr1493
			const yyr1493 bool = false
			var yynn1493 int
			if yyr1493 || yy2arr1493 {
				r.EncodeArrayStart(3)
			} else {
				yynn1493 = 3
				for _, b := range yyq1493 {
					if b {
						yynn1493++
					}
				}
				r.EncodeMapStart(yynn1493)
				yynn1493 = 0
			}
			if yyr1493 || yy2arr1493 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1495 := z.EncBinary()
				_ = yym1495
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1496 := z.EncBinary()
				_ = yym1496
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			}
			if yyr1493 || yy2arr1493 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1498 := z.EncBinary()
				_ = yym1498
				if false {
				} else {
					r.EncodeUint(uint64(x.EvalCreateIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalCreateIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1499 := z.EncBinary()
				_ = yym1499
				if false {
				} else {
					r.EncodeUint(uint64(x.EvalCreateIndex))
				}
			}
			if yyr1493 || yy2arr1493 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1501 := z.EncBinary()
				_ = yym1501
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Index"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1502 := z.EncBinary()
				_ = yym1502
				if false {
				} else {
					r.EncodeUint(uint64(x.Index))
				}
			}
			if yyr1493 || yy2arr1493 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *PeriodicForceResponse) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1503 := z.DecBinary()
	_ = yym1503
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1504 := r.ContainerType()
		if yyct1504 == codecSelferValueTypeMap4362 {
			yyl1504 := r.ReadMapStart()
			if yyl1504 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1504, d)
			}
		} else if yyct1504 == codecSelferValueTypeArray4362 {
			yyl1504 := r.ReadArrayStart()
			if yyl1504 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1504, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *PeriodicForceResponse) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1505Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1505Slc
	var yyhl1505 bool = l >= 0
	for yyj1505 := 0; ; yyj1505++ {
		if yyhl1505 {
			if yyj1505 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1505Slc = r.DecodeBytes(yys1505Slc, true, true)
		yys1505 := string(yys1505Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1505 {
		case "EvalID":
			if r.TryDecodeAsNil() {
				x.EvalID = ""
			} else {
				x.EvalID = string(r.DecodeString())
			}
		case "EvalCreateIndex":
			if r.TryDecodeAsNil() {
				x.EvalCreateIndex = 0
			} else {
				x.EvalCreateIndex = uint64(r.DecodeUint(64))
			}
		case "Index":
			if r.TryDecodeAsNil() {
				x.Index = 0
			} else {
				x.Index = uint64(r.DecodeUint(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys1505)
		} // end switch yys1505
	} // end for yyj1505
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *PeriodicForceResponse) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1509 int
	var yyb1509 bool
	var yyhl1509 bool = l >= 0
	yyj1509++
	if yyhl1509 {
		yyb1509 = yyj1509 > l
	} else {
		yyb1509 = r.CheckBreak()
	}
	if yyb1509 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalID = ""
	} else {
		x.EvalID = string(r.DecodeString())
	}
	yyj1509++
	if yyhl1509 {
		yyb1509 = yyj1509 > l
	} else {
		yyb1509 = r.CheckBreak()
	}
	if yyb1509 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalCreateIndex = 0
	} else {
		x.EvalCreateIndex = uint64(r.DecodeUint(64))
	}
	yyj1509++
	if yyhl1509 {
		yyb1509 = yyj1509 > l
	} else {
		yyb1509 = r.CheckBreak()
	}
	if yyb1509 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Index = 0
	} else {
		x.Index = uint64(r.DecodeUint(64))
	}
	for {
		yyj1509++
		if yyhl1509 {
			yyb1509 = yyj1509 > l
		} else {
			yyb1509 = r.CheckBreak()
		}
		if yyb1509 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1509-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *Node) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1513 := z.EncBinary()
		_ = yym1513
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1514 := !z.EncBinary()
			yy2arr1514 := z.EncBasicHandle().StructToArray
			var yyq1514 [18]bool
			_, _, _ = yysep1514, yyq1514, yy2arr1514
			const yyr1514 bool = false
			var yynn1514 int
			if yyr1514 || yy2arr1514 {
				r.EncodeArrayStart(18)
			} else {
				yynn1514 = 18
				for _, b := range yyq1514 {
					if b {
						yynn1514++
					}
				}
				r.EncodeMapStart(yynn1514)
				yynn1514 = 0
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1516 := z.EncBinary()
				_ = yym1516
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1517 := z.EncBinary()
				_ = yym1517
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1519 := z.EncBinary()
				_ = yym1519
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Datacenter))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Datacenter"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1520 := z.EncBinary()
				_ = yym1520
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Datacenter))
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1522 := z.EncBinary()
				_ = yym1522
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Name"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1523 := z.EncBinary()
				_ = yym1523
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1525 := z.EncBinary()
				_ = yym1525
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.HTTPAddr))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("HTTPAddr"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1526 := z.EncBinary()
				_ = yym1526
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.HTTPAddr))
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1528 := z.EncBinary()
				_ = yym1528
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NatsAddr))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NatsAddr"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1529 := z.EncBinary()
				_ = yym1529
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NatsAddr))
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Attributes == nil {
					r.EncodeNil()
				} else {
					yym1531 := z.EncBinary()
					_ = yym1531
					if false {
					} else {
						z.F.EncMapStringStringV(x.Attributes, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Attributes"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Attributes == nil {
					r.EncodeNil()
				} else {
					yym1532 := z.EncBinary()
					_ = yym1532
					if false {
					} else {
						z.F.EncMapStringStringV(x.Attributes, false, e)
					}
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Resources == nil {
					r.EncodeNil()
				} else {
					x.Resources.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Resources"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Resources == nil {
					r.EncodeNil()
				} else {
					x.Resources.CodecEncodeSelf(e)
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Reserved == nil {
					r.EncodeNil()
				} else {
					x.Reserved.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Reserved"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Reserved == nil {
					r.EncodeNil()
				} else {
					x.Reserved.CodecEncodeSelf(e)
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Links == nil {
					r.EncodeNil()
				} else {
					yym1536 := z.EncBinary()
					_ = yym1536
					if false {
					} else {
						z.F.EncMapStringStringV(x.Links, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Links"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Links == nil {
					r.EncodeNil()
				} else {
					yym1537 := z.EncBinary()
					_ = yym1537
					if false {
					} else {
						z.F.EncMapStringStringV(x.Links, false, e)
					}
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Meta == nil {
					r.EncodeNil()
				} else {
					yym1539 := z.EncBinary()
					_ = yym1539
					if false {
					} else {
						z.F.EncMapStringStringV(x.Meta, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Meta"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Meta == nil {
					r.EncodeNil()
				} else {
					yym1540 := z.EncBinary()
					_ = yym1540
					if false {
					} else {
						z.F.EncMapStringStringV(x.Meta, false, e)
					}
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1542 := z.EncBinary()
				_ = yym1542
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeClass))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeClass"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1543 := z.EncBinary()
				_ = yym1543
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeClass))
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1545 := z.EncBinary()
				_ = yym1545
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ComputedClass))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ComputedClass"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1546 := z.EncBinary()
				_ = yym1546
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ComputedClass))
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1548 := z.EncBinary()
				_ = yym1548
				if false {
				} else {
					r.EncodeBool(bool(x.Drain))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Drain"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1549 := z.EncBinary()
				_ = yym1549
				if false {
				} else {
					r.EncodeBool(bool(x.Drain))
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1551 := z.EncBinary()
				_ = yym1551
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Status))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Status"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1552 := z.EncBinary()
				_ = yym1552
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Status))
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1554 := z.EncBinary()
				_ = yym1554
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.StatusDescription))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("StatusDescription"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1555 := z.EncBinary()
				_ = yym1555
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.StatusDescription))
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1557 := z.EncBinary()
				_ = yym1557
				if false {
				} else {
					r.EncodeInt(int64(x.StatusUpdatedAt))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("StatusUpdatedAt"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1558 := z.EncBinary()
				_ = yym1558
				if false {
				} else {
					r.EncodeInt(int64(x.StatusUpdatedAt))
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1560 := z.EncBinary()
				_ = yym1560
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("CreateIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1561 := z.EncBinary()
				_ = yym1561
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1563 := z.EncBinary()
				_ = yym1563
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1564 := z.EncBinary()
				_ = yym1564
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			}
			if yyr1514 || yy2arr1514 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *Node) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1565 := z.DecBinary()
	_ = yym1565
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1566 := r.ContainerType()
		if yyct1566 == codecSelferValueTypeMap4362 {
			yyl1566 := r.ReadMapStart()
			if yyl1566 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1566, d)
			}
		} else if yyct1566 == codecSelferValueTypeArray4362 {
			yyl1566 := r.ReadArrayStart()
			if yyl1566 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1566, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *Node) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1567Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1567Slc
	var yyhl1567 bool = l >= 0
	for yyj1567 := 0; ; yyj1567++ {
		if yyhl1567 {
			if yyj1567 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1567Slc = r.DecodeBytes(yys1567Slc, true, true)
		yys1567 := string(yys1567Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1567 {
		case "ID":
			if r.TryDecodeAsNil() {
				x.ID = ""
			} else {
				x.ID = string(r.DecodeString())
			}
		case "Datacenter":
			if r.TryDecodeAsNil() {
				x.Datacenter = ""
			} else {
				x.Datacenter = string(r.DecodeString())
			}
		case "Name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "HTTPAddr":
			if r.TryDecodeAsNil() {
				x.HTTPAddr = ""
			} else {
				x.HTTPAddr = string(r.DecodeString())
			}
		case "NatsAddr":
			if r.TryDecodeAsNil() {
				x.NatsAddr = ""
			} else {
				x.NatsAddr = string(r.DecodeString())
			}
		case "Attributes":
			if r.TryDecodeAsNil() {
				x.Attributes = nil
			} else {
				yyv1573 := &x.Attributes
				yym1574 := z.DecBinary()
				_ = yym1574
				if false {
				} else {
					z.F.DecMapStringStringX(yyv1573, false, d)
				}
			}
		case "Resources":
			if r.TryDecodeAsNil() {
				if x.Resources != nil {
					x.Resources = nil
				}
			} else {
				if x.Resources == nil {
					x.Resources = new(Resources)
				}
				x.Resources.CodecDecodeSelf(d)
			}
		case "Reserved":
			if r.TryDecodeAsNil() {
				if x.Reserved != nil {
					x.Reserved = nil
				}
			} else {
				if x.Reserved == nil {
					x.Reserved = new(Resources)
				}
				x.Reserved.CodecDecodeSelf(d)
			}
		case "Links":
			if r.TryDecodeAsNil() {
				x.Links = nil
			} else {
				yyv1577 := &x.Links
				yym1578 := z.DecBinary()
				_ = yym1578
				if false {
				} else {
					z.F.DecMapStringStringX(yyv1577, false, d)
				}
			}
		case "Meta":
			if r.TryDecodeAsNil() {
				x.Meta = nil
			} else {
				yyv1579 := &x.Meta
				yym1580 := z.DecBinary()
				_ = yym1580
				if false {
				} else {
					z.F.DecMapStringStringX(yyv1579, false, d)
				}
			}
		case "NodeClass":
			if r.TryDecodeAsNil() {
				x.NodeClass = ""
			} else {
				x.NodeClass = string(r.DecodeString())
			}
		case "ComputedClass":
			if r.TryDecodeAsNil() {
				x.ComputedClass = ""
			} else {
				x.ComputedClass = string(r.DecodeString())
			}
		case "Drain":
			if r.TryDecodeAsNil() {
				x.Drain = false
			} else {
				x.Drain = bool(r.DecodeBool())
			}
		case "Status":
			if r.TryDecodeAsNil() {
				x.Status = ""
			} else {
				x.Status = string(r.DecodeString())
			}
		case "StatusDescription":
			if r.TryDecodeAsNil() {
				x.StatusDescription = ""
			} else {
				x.StatusDescription = string(r.DecodeString())
			}
		case "StatusUpdatedAt":
			if r.TryDecodeAsNil() {
				x.StatusUpdatedAt = 0
			} else {
				x.StatusUpdatedAt = int64(r.DecodeInt(64))
			}
		case "CreateIndex":
			if r.TryDecodeAsNil() {
				x.CreateIndex = 0
			} else {
				x.CreateIndex = uint64(r.DecodeUint(64))
			}
		case "ModifyIndex":
			if r.TryDecodeAsNil() {
				x.ModifyIndex = 0
			} else {
				x.ModifyIndex = uint64(r.DecodeUint(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys1567)
		} // end switch yys1567
	} // end for yyj1567
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *Node) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1589 int
	var yyb1589 bool
	var yyhl1589 bool = l >= 0
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ID = ""
	} else {
		x.ID = string(r.DecodeString())
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Datacenter = ""
	} else {
		x.Datacenter = string(r.DecodeString())
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.HTTPAddr = ""
	} else {
		x.HTTPAddr = string(r.DecodeString())
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NatsAddr = ""
	} else {
		x.NatsAddr = string(r.DecodeString())
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Attributes = nil
	} else {
		yyv1595 := &x.Attributes
		yym1596 := z.DecBinary()
		_ = yym1596
		if false {
		} else {
			z.F.DecMapStringStringX(yyv1595, false, d)
		}
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Resources != nil {
			x.Resources = nil
		}
	} else {
		if x.Resources == nil {
			x.Resources = new(Resources)
		}
		x.Resources.CodecDecodeSelf(d)
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Reserved != nil {
			x.Reserved = nil
		}
	} else {
		if x.Reserved == nil {
			x.Reserved = new(Resources)
		}
		x.Reserved.CodecDecodeSelf(d)
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Links = nil
	} else {
		yyv1599 := &x.Links
		yym1600 := z.DecBinary()
		_ = yym1600
		if false {
		} else {
			z.F.DecMapStringStringX(yyv1599, false, d)
		}
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Meta = nil
	} else {
		yyv1601 := &x.Meta
		yym1602 := z.DecBinary()
		_ = yym1602
		if false {
		} else {
			z.F.DecMapStringStringX(yyv1601, false, d)
		}
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeClass = ""
	} else {
		x.NodeClass = string(r.DecodeString())
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ComputedClass = ""
	} else {
		x.ComputedClass = string(r.DecodeString())
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Drain = false
	} else {
		x.Drain = bool(r.DecodeBool())
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Status = ""
	} else {
		x.Status = string(r.DecodeString())
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.StatusDescription = ""
	} else {
		x.StatusDescription = string(r.DecodeString())
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.StatusUpdatedAt = 0
	} else {
		x.StatusUpdatedAt = int64(r.DecodeInt(64))
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.CreateIndex = 0
	} else {
		x.CreateIndex = uint64(r.DecodeUint(64))
	}
	yyj1589++
	if yyhl1589 {
		yyb1589 = yyj1589 > l
	} else {
		yyb1589 = r.CheckBreak()
	}
	if yyb1589 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ModifyIndex = 0
	} else {
		x.ModifyIndex = uint64(r.DecodeUint(64))
	}
	for {
		yyj1589++
		if yyhl1589 {
			yyb1589 = yyj1589 > l
		} else {
			yyb1589 = r.CheckBreak()
		}
		if yyb1589 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1589-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *NodeListStub) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1611 := z.EncBinary()
		_ = yym1611
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1612 := !z.EncBinary()
			yy2arr1612 := z.EncBasicHandle().StructToArray
			var yyq1612 [10]bool
			_, _, _ = yysep1612, yyq1612, yy2arr1612
			const yyr1612 bool = false
			var yynn1612 int
			if yyr1612 || yy2arr1612 {
				r.EncodeArrayStart(10)
			} else {
				yynn1612 = 10
				for _, b := range yyq1612 {
					if b {
						yynn1612++
					}
				}
				r.EncodeMapStart(yynn1612)
				yynn1612 = 0
			}
			if yyr1612 || yy2arr1612 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1614 := z.EncBinary()
				_ = yym1614
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1615 := z.EncBinary()
				_ = yym1615
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			}
			if yyr1612 || yy2arr1612 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1617 := z.EncBinary()
				_ = yym1617
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Datacenter))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Datacenter"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1618 := z.EncBinary()
				_ = yym1618
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Datacenter))
				}
			}
			if yyr1612 || yy2arr1612 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1620 := z.EncBinary()
				_ = yym1620
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NatsAddr))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NatsAddr"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1621 := z.EncBinary()
				_ = yym1621
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NatsAddr))
				}
			}
			if yyr1612 || yy2arr1612 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1623 := z.EncBinary()
				_ = yym1623
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Name"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1624 := z.EncBinary()
				_ = yym1624
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			}
			if yyr1612 || yy2arr1612 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1626 := z.EncBinary()
				_ = yym1626
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeClass))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeClass"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1627 := z.EncBinary()
				_ = yym1627
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeClass))
				}
			}
			if yyr1612 || yy2arr1612 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1629 := z.EncBinary()
				_ = yym1629
				if false {
				} else {
					r.EncodeBool(bool(x.Drain))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Drain"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1630 := z.EncBinary()
				_ = yym1630
				if false {
				} else {
					r.EncodeBool(bool(x.Drain))
				}
			}
			if yyr1612 || yy2arr1612 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1632 := z.EncBinary()
				_ = yym1632
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Status))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Status"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1633 := z.EncBinary()
				_ = yym1633
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Status))
				}
			}
			if yyr1612 || yy2arr1612 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1635 := z.EncBinary()
				_ = yym1635
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.StatusDescription))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("StatusDescription"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1636 := z.EncBinary()
				_ = yym1636
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.StatusDescription))
				}
			}
			if yyr1612 || yy2arr1612 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1638 := z.EncBinary()
				_ = yym1638
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("CreateIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1639 := z.EncBinary()
				_ = yym1639
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			}
			if yyr1612 || yy2arr1612 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1641 := z.EncBinary()
				_ = yym1641
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1642 := z.EncBinary()
				_ = yym1642
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			}
			if yyr1612 || yy2arr1612 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *NodeListStub) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1643 := z.DecBinary()
	_ = yym1643
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1644 := r.ContainerType()
		if yyct1644 == codecSelferValueTypeMap4362 {
			yyl1644 := r.ReadMapStart()
			if yyl1644 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1644, d)
			}
		} else if yyct1644 == codecSelferValueTypeArray4362 {
			yyl1644 := r.ReadArrayStart()
			if yyl1644 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1644, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *NodeListStub) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1645Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1645Slc
	var yyhl1645 bool = l >= 0
	for yyj1645 := 0; ; yyj1645++ {
		if yyhl1645 {
			if yyj1645 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1645Slc = r.DecodeBytes(yys1645Slc, true, true)
		yys1645 := string(yys1645Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1645 {
		case "ID":
			if r.TryDecodeAsNil() {
				x.ID = ""
			} else {
				x.ID = string(r.DecodeString())
			}
		case "Datacenter":
			if r.TryDecodeAsNil() {
				x.Datacenter = ""
			} else {
				x.Datacenter = string(r.DecodeString())
			}
		case "NatsAddr":
			if r.TryDecodeAsNil() {
				x.NatsAddr = ""
			} else {
				x.NatsAddr = string(r.DecodeString())
			}
		case "Name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "NodeClass":
			if r.TryDecodeAsNil() {
				x.NodeClass = ""
			} else {
				x.NodeClass = string(r.DecodeString())
			}
		case "Drain":
			if r.TryDecodeAsNil() {
				x.Drain = false
			} else {
				x.Drain = bool(r.DecodeBool())
			}
		case "Status":
			if r.TryDecodeAsNil() {
				x.Status = ""
			} else {
				x.Status = string(r.DecodeString())
			}
		case "StatusDescription":
			if r.TryDecodeAsNil() {
				x.StatusDescription = ""
			} else {
				x.StatusDescription = string(r.DecodeString())
			}
		case "CreateIndex":
			if r.TryDecodeAsNil() {
				x.CreateIndex = 0
			} else {
				x.CreateIndex = uint64(r.DecodeUint(64))
			}
		case "ModifyIndex":
			if r.TryDecodeAsNil() {
				x.ModifyIndex = 0
			} else {
				x.ModifyIndex = uint64(r.DecodeUint(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys1645)
		} // end switch yys1645
	} // end for yyj1645
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *NodeListStub) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1656 int
	var yyb1656 bool
	var yyhl1656 bool = l >= 0
	yyj1656++
	if yyhl1656 {
		yyb1656 = yyj1656 > l
	} else {
		yyb1656 = r.CheckBreak()
	}
	if yyb1656 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ID = ""
	} else {
		x.ID = string(r.DecodeString())
	}
	yyj1656++
	if yyhl1656 {
		yyb1656 = yyj1656 > l
	} else {
		yyb1656 = r.CheckBreak()
	}
	if yyb1656 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Datacenter = ""
	} else {
		x.Datacenter = string(r.DecodeString())
	}
	yyj1656++
	if yyhl1656 {
		yyb1656 = yyj1656 > l
	} else {
		yyb1656 = r.CheckBreak()
	}
	if yyb1656 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NatsAddr = ""
	} else {
		x.NatsAddr = string(r.DecodeString())
	}
	yyj1656++
	if yyhl1656 {
		yyb1656 = yyj1656 > l
	} else {
		yyb1656 = r.CheckBreak()
	}
	if yyb1656 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj1656++
	if yyhl1656 {
		yyb1656 = yyj1656 > l
	} else {
		yyb1656 = r.CheckBreak()
	}
	if yyb1656 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeClass = ""
	} else {
		x.NodeClass = string(r.DecodeString())
	}
	yyj1656++
	if yyhl1656 {
		yyb1656 = yyj1656 > l
	} else {
		yyb1656 = r.CheckBreak()
	}
	if yyb1656 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Drain = false
	} else {
		x.Drain = bool(r.DecodeBool())
	}
	yyj1656++
	if yyhl1656 {
		yyb1656 = yyj1656 > l
	} else {
		yyb1656 = r.CheckBreak()
	}
	if yyb1656 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Status = ""
	} else {
		x.Status = string(r.DecodeString())
	}
	yyj1656++
	if yyhl1656 {
		yyb1656 = yyj1656 > l
	} else {
		yyb1656 = r.CheckBreak()
	}
	if yyb1656 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.StatusDescription = ""
	} else {
		x.StatusDescription = string(r.DecodeString())
	}
	yyj1656++
	if yyhl1656 {
		yyb1656 = yyj1656 > l
	} else {
		yyb1656 = r.CheckBreak()
	}
	if yyb1656 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.CreateIndex = 0
	} else {
		x.CreateIndex = uint64(r.DecodeUint(64))
	}
	yyj1656++
	if yyhl1656 {
		yyb1656 = yyj1656 > l
	} else {
		yyb1656 = r.CheckBreak()
	}
	if yyb1656 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ModifyIndex = 0
	} else {
		x.ModifyIndex = uint64(r.DecodeUint(64))
	}
	for {
		yyj1656++
		if yyhl1656 {
			yyb1656 = yyj1656 > l
		} else {
			yyb1656 = r.CheckBreak()
		}
		if yyb1656 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1656-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *Resources) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1667 := z.EncBinary()
		_ = yym1667
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1668 := !z.EncBinary()
			yy2arr1668 := z.EncBasicHandle().StructToArray
			var yyq1668 [5]bool
			_, _, _ = yysep1668, yyq1668, yy2arr1668
			const yyr1668 bool = false
			var yynn1668 int
			if yyr1668 || yy2arr1668 {
				r.EncodeArrayStart(5)
			} else {
				yynn1668 = 5
				for _, b := range yyq1668 {
					if b {
						yynn1668++
					}
				}
				r.EncodeMapStart(yynn1668)
				yynn1668 = 0
			}
			if yyr1668 || yy2arr1668 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1670 := z.EncBinary()
				_ = yym1670
				if false {
				} else {
					r.EncodeInt(int64(x.CPU))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("CPU"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1671 := z.EncBinary()
				_ = yym1671
				if false {
				} else {
					r.EncodeInt(int64(x.CPU))
				}
			}
			if yyr1668 || yy2arr1668 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1673 := z.EncBinary()
				_ = yym1673
				if false {
				} else {
					r.EncodeInt(int64(x.MemoryMB))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MemoryMB"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1674 := z.EncBinary()
				_ = yym1674
				if false {
				} else {
					r.EncodeInt(int64(x.MemoryMB))
				}
			}
			if yyr1668 || yy2arr1668 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1676 := z.EncBinary()
				_ = yym1676
				if false {
				} else {
					r.EncodeInt(int64(x.DiskMB))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("DiskMB"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1677 := z.EncBinary()
				_ = yym1677
				if false {
				} else {
					r.EncodeInt(int64(x.DiskMB))
				}
			}
			if yyr1668 || yy2arr1668 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1679 := z.EncBinary()
				_ = yym1679
				if false {
				} else {
					r.EncodeInt(int64(x.IOPS))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("IOPS"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1680 := z.EncBinary()
				_ = yym1680
				if false {
				} else {
					r.EncodeInt(int64(x.IOPS))
				}
			}
			if yyr1668 || yy2arr1668 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Networks == nil {
					r.EncodeNil()
				} else {
					yym1682 := z.EncBinary()
					_ = yym1682
					if false {
					} else {
						h.encSlicePtrtoNetworkResource(([]*NetworkResource)(x.Networks), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Networks"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Networks == nil {
					r.EncodeNil()
				} else {
					yym1683 := z.EncBinary()
					_ = yym1683
					if false {
					} else {
						h.encSlicePtrtoNetworkResource(([]*NetworkResource)(x.Networks), e)
					}
				}
			}
			if yyr1668 || yy2arr1668 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *Resources) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1684 := z.DecBinary()
	_ = yym1684
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1685 := r.ContainerType()
		if yyct1685 == codecSelferValueTypeMap4362 {
			yyl1685 := r.ReadMapStart()
			if yyl1685 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1685, d)
			}
		} else if yyct1685 == codecSelferValueTypeArray4362 {
			yyl1685 := r.ReadArrayStart()
			if yyl1685 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1685, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *Resources) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1686Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1686Slc
	var yyhl1686 bool = l >= 0
	for yyj1686 := 0; ; yyj1686++ {
		if yyhl1686 {
			if yyj1686 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1686Slc = r.DecodeBytes(yys1686Slc, true, true)
		yys1686 := string(yys1686Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1686 {
		case "CPU":
			if r.TryDecodeAsNil() {
				x.CPU = 0
			} else {
				x.CPU = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "MemoryMB":
			if r.TryDecodeAsNil() {
				x.MemoryMB = 0
			} else {
				x.MemoryMB = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "DiskMB":
			if r.TryDecodeAsNil() {
				x.DiskMB = 0
			} else {
				x.DiskMB = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "IOPS":
			if r.TryDecodeAsNil() {
				x.IOPS = 0
			} else {
				x.IOPS = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "Networks":
			if r.TryDecodeAsNil() {
				x.Networks = nil
			} else {
				yyv1691 := &x.Networks
				yym1692 := z.DecBinary()
				_ = yym1692
				if false {
				} else {
					h.decSlicePtrtoNetworkResource((*[]*NetworkResource)(yyv1691), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys1686)
		} // end switch yys1686
	} // end for yyj1686
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *Resources) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1693 int
	var yyb1693 bool
	var yyhl1693 bool = l >= 0
	yyj1693++
	if yyhl1693 {
		yyb1693 = yyj1693 > l
	} else {
		yyb1693 = r.CheckBreak()
	}
	if yyb1693 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.CPU = 0
	} else {
		x.CPU = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj1693++
	if yyhl1693 {
		yyb1693 = yyj1693 > l
	} else {
		yyb1693 = r.CheckBreak()
	}
	if yyb1693 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MemoryMB = 0
	} else {
		x.MemoryMB = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj1693++
	if yyhl1693 {
		yyb1693 = yyj1693 > l
	} else {
		yyb1693 = r.CheckBreak()
	}
	if yyb1693 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.DiskMB = 0
	} else {
		x.DiskMB = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj1693++
	if yyhl1693 {
		yyb1693 = yyj1693 > l
	} else {
		yyb1693 = r.CheckBreak()
	}
	if yyb1693 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.IOPS = 0
	} else {
		x.IOPS = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj1693++
	if yyhl1693 {
		yyb1693 = yyj1693 > l
	} else {
		yyb1693 = r.CheckBreak()
	}
	if yyb1693 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Networks = nil
	} else {
		yyv1698 := &x.Networks
		yym1699 := z.DecBinary()
		_ = yym1699
		if false {
		} else {
			h.decSlicePtrtoNetworkResource((*[]*NetworkResource)(yyv1698), d)
		}
	}
	for {
		yyj1693++
		if yyhl1693 {
			yyb1693 = yyj1693 > l
		} else {
			yyb1693 = r.CheckBreak()
		}
		if yyb1693 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1693-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *Port) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1700 := z.EncBinary()
		_ = yym1700
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1701 := !z.EncBinary()
			yy2arr1701 := z.EncBasicHandle().StructToArray
			var yyq1701 [2]bool
			_, _, _ = yysep1701, yyq1701, yy2arr1701
			const yyr1701 bool = false
			var yynn1701 int
			if yyr1701 || yy2arr1701 {
				r.EncodeArrayStart(2)
			} else {
				yynn1701 = 2
				for _, b := range yyq1701 {
					if b {
						yynn1701++
					}
				}
				r.EncodeMapStart(yynn1701)
				yynn1701 = 0
			}
			if yyr1701 || yy2arr1701 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1703 := z.EncBinary()
				_ = yym1703
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Label))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Label"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1704 := z.EncBinary()
				_ = yym1704
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Label))
				}
			}
			if yyr1701 || yy2arr1701 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1706 := z.EncBinary()
				_ = yym1706
				if false {
				} else {
					r.EncodeInt(int64(x.Value))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Value"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1707 := z.EncBinary()
				_ = yym1707
				if false {
				} else {
					r.EncodeInt(int64(x.Value))
				}
			}
			if yyr1701 || yy2arr1701 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *Port) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1708 := z.DecBinary()
	_ = yym1708
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1709 := r.ContainerType()
		if yyct1709 == codecSelferValueTypeMap4362 {
			yyl1709 := r.ReadMapStart()
			if yyl1709 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1709, d)
			}
		} else if yyct1709 == codecSelferValueTypeArray4362 {
			yyl1709 := r.ReadArrayStart()
			if yyl1709 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1709, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *Port) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1710Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1710Slc
	var yyhl1710 bool = l >= 0
	for yyj1710 := 0; ; yyj1710++ {
		if yyhl1710 {
			if yyj1710 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1710Slc = r.DecodeBytes(yys1710Slc, true, true)
		yys1710 := string(yys1710Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1710 {
		case "Label":
			if r.TryDecodeAsNil() {
				x.Label = ""
			} else {
				x.Label = string(r.DecodeString())
			}
		case "Value":
			if r.TryDecodeAsNil() {
				x.Value = 0
			} else {
				x.Value = int(r.DecodeInt(codecSelferBitsize4362))
			}
		default:
			z.DecStructFieldNotFound(-1, yys1710)
		} // end switch yys1710
	} // end for yyj1710
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *Port) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1713 int
	var yyb1713 bool
	var yyhl1713 bool = l >= 0
	yyj1713++
	if yyhl1713 {
		yyb1713 = yyj1713 > l
	} else {
		yyb1713 = r.CheckBreak()
	}
	if yyb1713 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Label = ""
	} else {
		x.Label = string(r.DecodeString())
	}
	yyj1713++
	if yyhl1713 {
		yyb1713 = yyj1713 > l
	} else {
		yyb1713 = r.CheckBreak()
	}
	if yyb1713 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Value = 0
	} else {
		x.Value = int(r.DecodeInt(codecSelferBitsize4362))
	}
	for {
		yyj1713++
		if yyhl1713 {
			yyb1713 = yyj1713 > l
		} else {
			yyb1713 = r.CheckBreak()
		}
		if yyb1713 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1713-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *NetworkResource) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1716 := z.EncBinary()
		_ = yym1716
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1717 := !z.EncBinary()
			yy2arr1717 := z.EncBasicHandle().StructToArray
			var yyq1717 [6]bool
			_, _, _ = yysep1717, yyq1717, yy2arr1717
			const yyr1717 bool = false
			var yynn1717 int
			if yyr1717 || yy2arr1717 {
				r.EncodeArrayStart(6)
			} else {
				yynn1717 = 6
				for _, b := range yyq1717 {
					if b {
						yynn1717++
					}
				}
				r.EncodeMapStart(yynn1717)
				yynn1717 = 0
			}
			if yyr1717 || yy2arr1717 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1719 := z.EncBinary()
				_ = yym1719
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Device))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Device"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1720 := z.EncBinary()
				_ = yym1720
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Device))
				}
			}
			if yyr1717 || yy2arr1717 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1722 := z.EncBinary()
				_ = yym1722
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.CIDR))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("CIDR"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1723 := z.EncBinary()
				_ = yym1723
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.CIDR))
				}
			}
			if yyr1717 || yy2arr1717 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1725 := z.EncBinary()
				_ = yym1725
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.IP))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("IP"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1726 := z.EncBinary()
				_ = yym1726
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.IP))
				}
			}
			if yyr1717 || yy2arr1717 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1728 := z.EncBinary()
				_ = yym1728
				if false {
				} else {
					r.EncodeInt(int64(x.MBits))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MBits"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1729 := z.EncBinary()
				_ = yym1729
				if false {
				} else {
					r.EncodeInt(int64(x.MBits))
				}
			}
			if yyr1717 || yy2arr1717 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.ReservedPorts == nil {
					r.EncodeNil()
				} else {
					yym1731 := z.EncBinary()
					_ = yym1731
					if false {
					} else {
						h.encSlicePort(([]Port)(x.ReservedPorts), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ReservedPorts"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.ReservedPorts == nil {
					r.EncodeNil()
				} else {
					yym1732 := z.EncBinary()
					_ = yym1732
					if false {
					} else {
						h.encSlicePort(([]Port)(x.ReservedPorts), e)
					}
				}
			}
			if yyr1717 || yy2arr1717 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.DynamicPorts == nil {
					r.EncodeNil()
				} else {
					yym1734 := z.EncBinary()
					_ = yym1734
					if false {
					} else {
						h.encSlicePort(([]Port)(x.DynamicPorts), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("DynamicPorts"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.DynamicPorts == nil {
					r.EncodeNil()
				} else {
					yym1735 := z.EncBinary()
					_ = yym1735
					if false {
					} else {
						h.encSlicePort(([]Port)(x.DynamicPorts), e)
					}
				}
			}
			if yyr1717 || yy2arr1717 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *NetworkResource) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1736 := z.DecBinary()
	_ = yym1736
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1737 := r.ContainerType()
		if yyct1737 == codecSelferValueTypeMap4362 {
			yyl1737 := r.ReadMapStart()
			if yyl1737 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1737, d)
			}
		} else if yyct1737 == codecSelferValueTypeArray4362 {
			yyl1737 := r.ReadArrayStart()
			if yyl1737 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1737, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *NetworkResource) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1738Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1738Slc
	var yyhl1738 bool = l >= 0
	for yyj1738 := 0; ; yyj1738++ {
		if yyhl1738 {
			if yyj1738 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1738Slc = r.DecodeBytes(yys1738Slc, true, true)
		yys1738 := string(yys1738Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1738 {
		case "Device":
			if r.TryDecodeAsNil() {
				x.Device = ""
			} else {
				x.Device = string(r.DecodeString())
			}
		case "CIDR":
			if r.TryDecodeAsNil() {
				x.CIDR = ""
			} else {
				x.CIDR = string(r.DecodeString())
			}
		case "IP":
			if r.TryDecodeAsNil() {
				x.IP = ""
			} else {
				x.IP = string(r.DecodeString())
			}
		case "MBits":
			if r.TryDecodeAsNil() {
				x.MBits = 0
			} else {
				x.MBits = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "ReservedPorts":
			if r.TryDecodeAsNil() {
				x.ReservedPorts = nil
			} else {
				yyv1743 := &x.ReservedPorts
				yym1744 := z.DecBinary()
				_ = yym1744
				if false {
				} else {
					h.decSlicePort((*[]Port)(yyv1743), d)
				}
			}
		case "DynamicPorts":
			if r.TryDecodeAsNil() {
				x.DynamicPorts = nil
			} else {
				yyv1745 := &x.DynamicPorts
				yym1746 := z.DecBinary()
				_ = yym1746
				if false {
				} else {
					h.decSlicePort((*[]Port)(yyv1745), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys1738)
		} // end switch yys1738
	} // end for yyj1738
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *NetworkResource) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1747 int
	var yyb1747 bool
	var yyhl1747 bool = l >= 0
	yyj1747++
	if yyhl1747 {
		yyb1747 = yyj1747 > l
	} else {
		yyb1747 = r.CheckBreak()
	}
	if yyb1747 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Device = ""
	} else {
		x.Device = string(r.DecodeString())
	}
	yyj1747++
	if yyhl1747 {
		yyb1747 = yyj1747 > l
	} else {
		yyb1747 = r.CheckBreak()
	}
	if yyb1747 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.CIDR = ""
	} else {
		x.CIDR = string(r.DecodeString())
	}
	yyj1747++
	if yyhl1747 {
		yyb1747 = yyj1747 > l
	} else {
		yyb1747 = r.CheckBreak()
	}
	if yyb1747 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.IP = ""
	} else {
		x.IP = string(r.DecodeString())
	}
	yyj1747++
	if yyhl1747 {
		yyb1747 = yyj1747 > l
	} else {
		yyb1747 = r.CheckBreak()
	}
	if yyb1747 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MBits = 0
	} else {
		x.MBits = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj1747++
	if yyhl1747 {
		yyb1747 = yyj1747 > l
	} else {
		yyb1747 = r.CheckBreak()
	}
	if yyb1747 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ReservedPorts = nil
	} else {
		yyv1752 := &x.ReservedPorts
		yym1753 := z.DecBinary()
		_ = yym1753
		if false {
		} else {
			h.decSlicePort((*[]Port)(yyv1752), d)
		}
	}
	yyj1747++
	if yyhl1747 {
		yyb1747 = yyj1747 > l
	} else {
		yyb1747 = r.CheckBreak()
	}
	if yyb1747 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.DynamicPorts = nil
	} else {
		yyv1754 := &x.DynamicPorts
		yym1755 := z.DecBinary()
		_ = yym1755
		if false {
		} else {
			h.decSlicePort((*[]Port)(yyv1754), d)
		}
	}
	for {
		yyj1747++
		if yyhl1747 {
			yyb1747 = yyj1747 > l
		} else {
			yyb1747 = r.CheckBreak()
		}
		if yyb1747 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1747-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobSummary) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1756 := z.EncBinary()
		_ = yym1756
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1757 := !z.EncBinary()
			yy2arr1757 := z.EncBasicHandle().StructToArray
			var yyq1757 [4]bool
			_, _, _ = yysep1757, yyq1757, yy2arr1757
			const yyr1757 bool = false
			var yynn1757 int
			if yyr1757 || yy2arr1757 {
				r.EncodeArrayStart(4)
			} else {
				yynn1757 = 4
				for _, b := range yyq1757 {
					if b {
						yynn1757++
					}
				}
				r.EncodeMapStart(yynn1757)
				yynn1757 = 0
			}
			if yyr1757 || yy2arr1757 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1759 := z.EncBinary()
				_ = yym1759
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1760 := z.EncBinary()
				_ = yym1760
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			}
			if yyr1757 || yy2arr1757 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Summary == nil {
					r.EncodeNil()
				} else {
					yym1762 := z.EncBinary()
					_ = yym1762
					if false {
					} else {
						h.encMapstringTaskGroupSummary((map[string]TaskGroupSummary)(x.Summary), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Summary"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Summary == nil {
					r.EncodeNil()
				} else {
					yym1763 := z.EncBinary()
					_ = yym1763
					if false {
					} else {
						h.encMapstringTaskGroupSummary((map[string]TaskGroupSummary)(x.Summary), e)
					}
				}
			}
			if yyr1757 || yy2arr1757 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1765 := z.EncBinary()
				_ = yym1765
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("CreateIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1766 := z.EncBinary()
				_ = yym1766
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			}
			if yyr1757 || yy2arr1757 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1768 := z.EncBinary()
				_ = yym1768
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1769 := z.EncBinary()
				_ = yym1769
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			}
			if yyr1757 || yy2arr1757 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobSummary) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1770 := z.DecBinary()
	_ = yym1770
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1771 := r.ContainerType()
		if yyct1771 == codecSelferValueTypeMap4362 {
			yyl1771 := r.ReadMapStart()
			if yyl1771 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1771, d)
			}
		} else if yyct1771 == codecSelferValueTypeArray4362 {
			yyl1771 := r.ReadArrayStart()
			if yyl1771 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1771, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobSummary) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1772Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1772Slc
	var yyhl1772 bool = l >= 0
	for yyj1772 := 0; ; yyj1772++ {
		if yyhl1772 {
			if yyj1772 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1772Slc = r.DecodeBytes(yys1772Slc, true, true)
		yys1772 := string(yys1772Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1772 {
		case "JobID":
			if r.TryDecodeAsNil() {
				x.JobID = ""
			} else {
				x.JobID = string(r.DecodeString())
			}
		case "Summary":
			if r.TryDecodeAsNil() {
				x.Summary = nil
			} else {
				yyv1774 := &x.Summary
				yym1775 := z.DecBinary()
				_ = yym1775
				if false {
				} else {
					h.decMapstringTaskGroupSummary((*map[string]TaskGroupSummary)(yyv1774), d)
				}
			}
		case "CreateIndex":
			if r.TryDecodeAsNil() {
				x.CreateIndex = 0
			} else {
				x.CreateIndex = uint64(r.DecodeUint(64))
			}
		case "ModifyIndex":
			if r.TryDecodeAsNil() {
				x.ModifyIndex = 0
			} else {
				x.ModifyIndex = uint64(r.DecodeUint(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys1772)
		} // end switch yys1772
	} // end for yyj1772
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobSummary) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1778 int
	var yyb1778 bool
	var yyhl1778 bool = l >= 0
	yyj1778++
	if yyhl1778 {
		yyb1778 = yyj1778 > l
	} else {
		yyb1778 = r.CheckBreak()
	}
	if yyb1778 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobID = ""
	} else {
		x.JobID = string(r.DecodeString())
	}
	yyj1778++
	if yyhl1778 {
		yyb1778 = yyj1778 > l
	} else {
		yyb1778 = r.CheckBreak()
	}
	if yyb1778 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Summary = nil
	} else {
		yyv1780 := &x.Summary
		yym1781 := z.DecBinary()
		_ = yym1781
		if false {
		} else {
			h.decMapstringTaskGroupSummary((*map[string]TaskGroupSummary)(yyv1780), d)
		}
	}
	yyj1778++
	if yyhl1778 {
		yyb1778 = yyj1778 > l
	} else {
		yyb1778 = r.CheckBreak()
	}
	if yyb1778 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.CreateIndex = 0
	} else {
		x.CreateIndex = uint64(r.DecodeUint(64))
	}
	yyj1778++
	if yyhl1778 {
		yyb1778 = yyj1778 > l
	} else {
		yyb1778 = r.CheckBreak()
	}
	if yyb1778 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ModifyIndex = 0
	} else {
		x.ModifyIndex = uint64(r.DecodeUint(64))
	}
	for {
		yyj1778++
		if yyhl1778 {
			yyb1778 = yyj1778 > l
		} else {
			yyb1778 = r.CheckBreak()
		}
		if yyb1778 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1778-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *TaskGroupSummary) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1784 := z.EncBinary()
		_ = yym1784
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1785 := !z.EncBinary()
			yy2arr1785 := z.EncBasicHandle().StructToArray
			var yyq1785 [6]bool
			_, _, _ = yysep1785, yyq1785, yy2arr1785
			const yyr1785 bool = false
			var yynn1785 int
			if yyr1785 || yy2arr1785 {
				r.EncodeArrayStart(6)
			} else {
				yynn1785 = 6
				for _, b := range yyq1785 {
					if b {
						yynn1785++
					}
				}
				r.EncodeMapStart(yynn1785)
				yynn1785 = 0
			}
			if yyr1785 || yy2arr1785 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1787 := z.EncBinary()
				_ = yym1787
				if false {
				} else {
					r.EncodeInt(int64(x.Queued))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Queued"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1788 := z.EncBinary()
				_ = yym1788
				if false {
				} else {
					r.EncodeInt(int64(x.Queued))
				}
			}
			if yyr1785 || yy2arr1785 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1790 := z.EncBinary()
				_ = yym1790
				if false {
				} else {
					r.EncodeInt(int64(x.Complete))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Complete"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1791 := z.EncBinary()
				_ = yym1791
				if false {
				} else {
					r.EncodeInt(int64(x.Complete))
				}
			}
			if yyr1785 || yy2arr1785 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1793 := z.EncBinary()
				_ = yym1793
				if false {
				} else {
					r.EncodeInt(int64(x.Failed))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Failed"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1794 := z.EncBinary()
				_ = yym1794
				if false {
				} else {
					r.EncodeInt(int64(x.Failed))
				}
			}
			if yyr1785 || yy2arr1785 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1796 := z.EncBinary()
				_ = yym1796
				if false {
				} else {
					r.EncodeInt(int64(x.Running))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Running"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1797 := z.EncBinary()
				_ = yym1797
				if false {
				} else {
					r.EncodeInt(int64(x.Running))
				}
			}
			if yyr1785 || yy2arr1785 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1799 := z.EncBinary()
				_ = yym1799
				if false {
				} else {
					r.EncodeInt(int64(x.Starting))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Starting"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1800 := z.EncBinary()
				_ = yym1800
				if false {
				} else {
					r.EncodeInt(int64(x.Starting))
				}
			}
			if yyr1785 || yy2arr1785 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1802 := z.EncBinary()
				_ = yym1802
				if false {
				} else {
					r.EncodeInt(int64(x.Lost))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Lost"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1803 := z.EncBinary()
				_ = yym1803
				if false {
				} else {
					r.EncodeInt(int64(x.Lost))
				}
			}
			if yyr1785 || yy2arr1785 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *TaskGroupSummary) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1804 := z.DecBinary()
	_ = yym1804
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1805 := r.ContainerType()
		if yyct1805 == codecSelferValueTypeMap4362 {
			yyl1805 := r.ReadMapStart()
			if yyl1805 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1805, d)
			}
		} else if yyct1805 == codecSelferValueTypeArray4362 {
			yyl1805 := r.ReadArrayStart()
			if yyl1805 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1805, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *TaskGroupSummary) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1806Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1806Slc
	var yyhl1806 bool = l >= 0
	for yyj1806 := 0; ; yyj1806++ {
		if yyhl1806 {
			if yyj1806 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1806Slc = r.DecodeBytes(yys1806Slc, true, true)
		yys1806 := string(yys1806Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1806 {
		case "Queued":
			if r.TryDecodeAsNil() {
				x.Queued = 0
			} else {
				x.Queued = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "Complete":
			if r.TryDecodeAsNil() {
				x.Complete = 0
			} else {
				x.Complete = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "Failed":
			if r.TryDecodeAsNil() {
				x.Failed = 0
			} else {
				x.Failed = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "Running":
			if r.TryDecodeAsNil() {
				x.Running = 0
			} else {
				x.Running = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "Starting":
			if r.TryDecodeAsNil() {
				x.Starting = 0
			} else {
				x.Starting = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "Lost":
			if r.TryDecodeAsNil() {
				x.Lost = 0
			} else {
				x.Lost = int(r.DecodeInt(codecSelferBitsize4362))
			}
		default:
			z.DecStructFieldNotFound(-1, yys1806)
		} // end switch yys1806
	} // end for yyj1806
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *TaskGroupSummary) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1813 int
	var yyb1813 bool
	var yyhl1813 bool = l >= 0
	yyj1813++
	if yyhl1813 {
		yyb1813 = yyj1813 > l
	} else {
		yyb1813 = r.CheckBreak()
	}
	if yyb1813 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Queued = 0
	} else {
		x.Queued = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj1813++
	if yyhl1813 {
		yyb1813 = yyj1813 > l
	} else {
		yyb1813 = r.CheckBreak()
	}
	if yyb1813 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Complete = 0
	} else {
		x.Complete = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj1813++
	if yyhl1813 {
		yyb1813 = yyj1813 > l
	} else {
		yyb1813 = r.CheckBreak()
	}
	if yyb1813 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Failed = 0
	} else {
		x.Failed = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj1813++
	if yyhl1813 {
		yyb1813 = yyj1813 > l
	} else {
		yyb1813 = r.CheckBreak()
	}
	if yyb1813 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Running = 0
	} else {
		x.Running = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj1813++
	if yyhl1813 {
		yyb1813 = yyj1813 > l
	} else {
		yyb1813 = r.CheckBreak()
	}
	if yyb1813 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Starting = 0
	} else {
		x.Starting = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj1813++
	if yyhl1813 {
		yyb1813 = yyj1813 > l
	} else {
		yyb1813 = r.CheckBreak()
	}
	if yyb1813 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Lost = 0
	} else {
		x.Lost = int(r.DecodeInt(codecSelferBitsize4362))
	}
	for {
		yyj1813++
		if yyhl1813 {
			yyb1813 = yyj1813 > l
		} else {
			yyb1813 = r.CheckBreak()
		}
		if yyb1813 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1813-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *Job) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1820 := z.EncBinary()
		_ = yym1820
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1821 := !z.EncBinary()
			yy2arr1821 := z.EncBasicHandle().StructToArray
			var yyq1821 [17]bool
			_, _, _ = yysep1821, yyq1821, yy2arr1821
			const yyr1821 bool = false
			var yynn1821 int
			if yyr1821 || yy2arr1821 {
				r.EncodeArrayStart(17)
			} else {
				yynn1821 = 17
				for _, b := range yyq1821 {
					if b {
						yynn1821++
					}
				}
				r.EncodeMapStart(yynn1821)
				yynn1821 = 0
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1823 := z.EncBinary()
				_ = yym1823
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Region"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1824 := z.EncBinary()
				_ = yym1824
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Region))
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1826 := z.EncBinary()
				_ = yym1826
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1827 := z.EncBinary()
				_ = yym1827
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1829 := z.EncBinary()
				_ = yym1829
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ParentID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ParentID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1830 := z.EncBinary()
				_ = yym1830
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ParentID))
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1832 := z.EncBinary()
				_ = yym1832
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Name"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1833 := z.EncBinary()
				_ = yym1833
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1835 := z.EncBinary()
				_ = yym1835
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Type"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1836 := z.EncBinary()
				_ = yym1836
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Type))
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1838 := z.EncBinary()
				_ = yym1838
				if false {
				} else {
					r.EncodeInt(int64(x.Priority))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Priority"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1839 := z.EncBinary()
				_ = yym1839
				if false {
				} else {
					r.EncodeInt(int64(x.Priority))
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1841 := z.EncBinary()
				_ = yym1841
				if false {
				} else {
					r.EncodeBool(bool(x.AllAtOnce))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllAtOnce"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1842 := z.EncBinary()
				_ = yym1842
				if false {
				} else {
					r.EncodeBool(bool(x.AllAtOnce))
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Datacenters == nil {
					r.EncodeNil()
				} else {
					yym1844 := z.EncBinary()
					_ = yym1844
					if false {
					} else {
						z.F.EncSliceStringV(x.Datacenters, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Datacenters"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Datacenters == nil {
					r.EncodeNil()
				} else {
					yym1845 := z.EncBinary()
					_ = yym1845
					if false {
					} else {
						z.F.EncSliceStringV(x.Datacenters, false, e)
					}
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.TaskGroups == nil {
					r.EncodeNil()
				} else {
					yym1847 := z.EncBinary()
					_ = yym1847
					if false {
					} else {
						h.encSlicePtrtoTaskGroup(([]*TaskGroup)(x.TaskGroups), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("TaskGroups"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.TaskGroups == nil {
					r.EncodeNil()
				} else {
					yym1848 := z.EncBinary()
					_ = yym1848
					if false {
					} else {
						h.encSlicePtrtoTaskGroup(([]*TaskGroup)(x.TaskGroups), e)
					}
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yy1850 := &x.Update
				yy1850.CodecEncodeSelf(e)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Update"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yy1851 := &x.Update
				yy1851.CodecEncodeSelf(e)
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Periodic == nil {
					r.EncodeNil()
				} else {
					x.Periodic.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Periodic"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Periodic == nil {
					r.EncodeNil()
				} else {
					x.Periodic.CodecEncodeSelf(e)
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Meta == nil {
					r.EncodeNil()
				} else {
					yym1854 := z.EncBinary()
					_ = yym1854
					if false {
					} else {
						z.F.EncMapStringStringV(x.Meta, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Meta"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Meta == nil {
					r.EncodeNil()
				} else {
					yym1855 := z.EncBinary()
					_ = yym1855
					if false {
					} else {
						z.F.EncMapStringStringV(x.Meta, false, e)
					}
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1857 := z.EncBinary()
				_ = yym1857
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Status))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Status"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1858 := z.EncBinary()
				_ = yym1858
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Status))
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1860 := z.EncBinary()
				_ = yym1860
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.StatusDescription))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("StatusDescription"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1861 := z.EncBinary()
				_ = yym1861
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.StatusDescription))
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1863 := z.EncBinary()
				_ = yym1863
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("CreateIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1864 := z.EncBinary()
				_ = yym1864
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1866 := z.EncBinary()
				_ = yym1866
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1867 := z.EncBinary()
				_ = yym1867
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1869 := z.EncBinary()
				_ = yym1869
				if false {
				} else {
					r.EncodeUint(uint64(x.JobModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1870 := z.EncBinary()
				_ = yym1870
				if false {
				} else {
					r.EncodeUint(uint64(x.JobModifyIndex))
				}
			}
			if yyr1821 || yy2arr1821 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *Job) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1871 := z.DecBinary()
	_ = yym1871
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1872 := r.ContainerType()
		if yyct1872 == codecSelferValueTypeMap4362 {
			yyl1872 := r.ReadMapStart()
			if yyl1872 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1872, d)
			}
		} else if yyct1872 == codecSelferValueTypeArray4362 {
			yyl1872 := r.ReadArrayStart()
			if yyl1872 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1872, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *Job) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1873Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1873Slc
	var yyhl1873 bool = l >= 0
	for yyj1873 := 0; ; yyj1873++ {
		if yyhl1873 {
			if yyj1873 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1873Slc = r.DecodeBytes(yys1873Slc, true, true)
		yys1873 := string(yys1873Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1873 {
		case "Region":
			if r.TryDecodeAsNil() {
				x.Region = ""
			} else {
				x.Region = string(r.DecodeString())
			}
		case "ID":
			if r.TryDecodeAsNil() {
				x.ID = ""
			} else {
				x.ID = string(r.DecodeString())
			}
		case "ParentID":
			if r.TryDecodeAsNil() {
				x.ParentID = ""
			} else {
				x.ParentID = string(r.DecodeString())
			}
		case "Name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "Type":
			if r.TryDecodeAsNil() {
				x.Type = ""
			} else {
				x.Type = string(r.DecodeString())
			}
		case "Priority":
			if r.TryDecodeAsNil() {
				x.Priority = 0
			} else {
				x.Priority = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "AllAtOnce":
			if r.TryDecodeAsNil() {
				x.AllAtOnce = false
			} else {
				x.AllAtOnce = bool(r.DecodeBool())
			}
		case "Datacenters":
			if r.TryDecodeAsNil() {
				x.Datacenters = nil
			} else {
				yyv1881 := &x.Datacenters
				yym1882 := z.DecBinary()
				_ = yym1882
				if false {
				} else {
					z.F.DecSliceStringX(yyv1881, false, d)
				}
			}
		case "TaskGroups":
			if r.TryDecodeAsNil() {
				x.TaskGroups = nil
			} else {
				yyv1883 := &x.TaskGroups
				yym1884 := z.DecBinary()
				_ = yym1884
				if false {
				} else {
					h.decSlicePtrtoTaskGroup((*[]*TaskGroup)(yyv1883), d)
				}
			}
		case "Update":
			if r.TryDecodeAsNil() {
				x.Update = UpdateStrategy{}
			} else {
				yyv1885 := &x.Update
				yyv1885.CodecDecodeSelf(d)
			}
		case "Periodic":
			if r.TryDecodeAsNil() {
				if x.Periodic != nil {
					x.Periodic = nil
				}
			} else {
				if x.Periodic == nil {
					x.Periodic = new(PeriodicConfig)
				}
				x.Periodic.CodecDecodeSelf(d)
			}
		case "Meta":
			if r.TryDecodeAsNil() {
				x.Meta = nil
			} else {
				yyv1887 := &x.Meta
				yym1888 := z.DecBinary()
				_ = yym1888
				if false {
				} else {
					z.F.DecMapStringStringX(yyv1887, false, d)
				}
			}
		case "Status":
			if r.TryDecodeAsNil() {
				x.Status = ""
			} else {
				x.Status = string(r.DecodeString())
			}
		case "StatusDescription":
			if r.TryDecodeAsNil() {
				x.StatusDescription = ""
			} else {
				x.StatusDescription = string(r.DecodeString())
			}
		case "CreateIndex":
			if r.TryDecodeAsNil() {
				x.CreateIndex = 0
			} else {
				x.CreateIndex = uint64(r.DecodeUint(64))
			}
		case "ModifyIndex":
			if r.TryDecodeAsNil() {
				x.ModifyIndex = 0
			} else {
				x.ModifyIndex = uint64(r.DecodeUint(64))
			}
		case "JobModifyIndex":
			if r.TryDecodeAsNil() {
				x.JobModifyIndex = 0
			} else {
				x.JobModifyIndex = uint64(r.DecodeUint(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys1873)
		} // end switch yys1873
	} // end for yyj1873
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *Job) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1894 int
	var yyb1894 bool
	var yyhl1894 bool = l >= 0
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Region = ""
	} else {
		x.Region = string(r.DecodeString())
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ID = ""
	} else {
		x.ID = string(r.DecodeString())
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ParentID = ""
	} else {
		x.ParentID = string(r.DecodeString())
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Type = ""
	} else {
		x.Type = string(r.DecodeString())
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Priority = 0
	} else {
		x.Priority = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllAtOnce = false
	} else {
		x.AllAtOnce = bool(r.DecodeBool())
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Datacenters = nil
	} else {
		yyv1902 := &x.Datacenters
		yym1903 := z.DecBinary()
		_ = yym1903
		if false {
		} else {
			z.F.DecSliceStringX(yyv1902, false, d)
		}
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.TaskGroups = nil
	} else {
		yyv1904 := &x.TaskGroups
		yym1905 := z.DecBinary()
		_ = yym1905
		if false {
		} else {
			h.decSlicePtrtoTaskGroup((*[]*TaskGroup)(yyv1904), d)
		}
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Update = UpdateStrategy{}
	} else {
		yyv1906 := &x.Update
		yyv1906.CodecDecodeSelf(d)
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Periodic != nil {
			x.Periodic = nil
		}
	} else {
		if x.Periodic == nil {
			x.Periodic = new(PeriodicConfig)
		}
		x.Periodic.CodecDecodeSelf(d)
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Meta = nil
	} else {
		yyv1908 := &x.Meta
		yym1909 := z.DecBinary()
		_ = yym1909
		if false {
		} else {
			z.F.DecMapStringStringX(yyv1908, false, d)
		}
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Status = ""
	} else {
		x.Status = string(r.DecodeString())
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.StatusDescription = ""
	} else {
		x.StatusDescription = string(r.DecodeString())
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.CreateIndex = 0
	} else {
		x.CreateIndex = uint64(r.DecodeUint(64))
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ModifyIndex = 0
	} else {
		x.ModifyIndex = uint64(r.DecodeUint(64))
	}
	yyj1894++
	if yyhl1894 {
		yyb1894 = yyj1894 > l
	} else {
		yyb1894 = r.CheckBreak()
	}
	if yyb1894 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobModifyIndex = 0
	} else {
		x.JobModifyIndex = uint64(r.DecodeUint(64))
	}
	for {
		yyj1894++
		if yyhl1894 {
			yyb1894 = yyj1894 > l
		} else {
			yyb1894 = r.CheckBreak()
		}
		if yyb1894 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1894-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *JobListStub) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1915 := z.EncBinary()
		_ = yym1915
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1916 := !z.EncBinary()
			yy2arr1916 := z.EncBasicHandle().StructToArray
			var yyq1916 [11]bool
			_, _, _ = yysep1916, yyq1916, yy2arr1916
			const yyr1916 bool = false
			var yynn1916 int
			if yyr1916 || yy2arr1916 {
				r.EncodeArrayStart(11)
			} else {
				yynn1916 = 11
				for _, b := range yyq1916 {
					if b {
						yynn1916++
					}
				}
				r.EncodeMapStart(yynn1916)
				yynn1916 = 0
			}
			if yyr1916 || yy2arr1916 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1918 := z.EncBinary()
				_ = yym1918
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1919 := z.EncBinary()
				_ = yym1919
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			}
			if yyr1916 || yy2arr1916 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1921 := z.EncBinary()
				_ = yym1921
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ParentID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ParentID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1922 := z.EncBinary()
				_ = yym1922
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ParentID))
				}
			}
			if yyr1916 || yy2arr1916 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1924 := z.EncBinary()
				_ = yym1924
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Name"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1925 := z.EncBinary()
				_ = yym1925
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			}
			if yyr1916 || yy2arr1916 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1927 := z.EncBinary()
				_ = yym1927
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Type"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1928 := z.EncBinary()
				_ = yym1928
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Type))
				}
			}
			if yyr1916 || yy2arr1916 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1930 := z.EncBinary()
				_ = yym1930
				if false {
				} else {
					r.EncodeInt(int64(x.Priority))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Priority"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1931 := z.EncBinary()
				_ = yym1931
				if false {
				} else {
					r.EncodeInt(int64(x.Priority))
				}
			}
			if yyr1916 || yy2arr1916 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1933 := z.EncBinary()
				_ = yym1933
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Status))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Status"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1934 := z.EncBinary()
				_ = yym1934
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Status))
				}
			}
			if yyr1916 || yy2arr1916 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1936 := z.EncBinary()
				_ = yym1936
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.StatusDescription))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("StatusDescription"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1937 := z.EncBinary()
				_ = yym1937
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.StatusDescription))
				}
			}
			if yyr1916 || yy2arr1916 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.JobSummary == nil {
					r.EncodeNil()
				} else {
					x.JobSummary.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobSummary"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.JobSummary == nil {
					r.EncodeNil()
				} else {
					x.JobSummary.CodecEncodeSelf(e)
				}
			}
			if yyr1916 || yy2arr1916 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1940 := z.EncBinary()
				_ = yym1940
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("CreateIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1941 := z.EncBinary()
				_ = yym1941
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			}
			if yyr1916 || yy2arr1916 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1943 := z.EncBinary()
				_ = yym1943
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1944 := z.EncBinary()
				_ = yym1944
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			}
			if yyr1916 || yy2arr1916 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1946 := z.EncBinary()
				_ = yym1946
				if false {
				} else {
					r.EncodeUint(uint64(x.JobModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1947 := z.EncBinary()
				_ = yym1947
				if false {
				} else {
					r.EncodeUint(uint64(x.JobModifyIndex))
				}
			}
			if yyr1916 || yy2arr1916 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *JobListStub) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1948 := z.DecBinary()
	_ = yym1948
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1949 := r.ContainerType()
		if yyct1949 == codecSelferValueTypeMap4362 {
			yyl1949 := r.ReadMapStart()
			if yyl1949 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1949, d)
			}
		} else if yyct1949 == codecSelferValueTypeArray4362 {
			yyl1949 := r.ReadArrayStart()
			if yyl1949 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1949, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *JobListStub) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1950Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1950Slc
	var yyhl1950 bool = l >= 0
	for yyj1950 := 0; ; yyj1950++ {
		if yyhl1950 {
			if yyj1950 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1950Slc = r.DecodeBytes(yys1950Slc, true, true)
		yys1950 := string(yys1950Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1950 {
		case "ID":
			if r.TryDecodeAsNil() {
				x.ID = ""
			} else {
				x.ID = string(r.DecodeString())
			}
		case "ParentID":
			if r.TryDecodeAsNil() {
				x.ParentID = ""
			} else {
				x.ParentID = string(r.DecodeString())
			}
		case "Name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "Type":
			if r.TryDecodeAsNil() {
				x.Type = ""
			} else {
				x.Type = string(r.DecodeString())
			}
		case "Priority":
			if r.TryDecodeAsNil() {
				x.Priority = 0
			} else {
				x.Priority = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "Status":
			if r.TryDecodeAsNil() {
				x.Status = ""
			} else {
				x.Status = string(r.DecodeString())
			}
		case "StatusDescription":
			if r.TryDecodeAsNil() {
				x.StatusDescription = ""
			} else {
				x.StatusDescription = string(r.DecodeString())
			}
		case "JobSummary":
			if r.TryDecodeAsNil() {
				if x.JobSummary != nil {
					x.JobSummary = nil
				}
			} else {
				if x.JobSummary == nil {
					x.JobSummary = new(JobSummary)
				}
				x.JobSummary.CodecDecodeSelf(d)
			}
		case "CreateIndex":
			if r.TryDecodeAsNil() {
				x.CreateIndex = 0
			} else {
				x.CreateIndex = uint64(r.DecodeUint(64))
			}
		case "ModifyIndex":
			if r.TryDecodeAsNil() {
				x.ModifyIndex = 0
			} else {
				x.ModifyIndex = uint64(r.DecodeUint(64))
			}
		case "JobModifyIndex":
			if r.TryDecodeAsNil() {
				x.JobModifyIndex = 0
			} else {
				x.JobModifyIndex = uint64(r.DecodeUint(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys1950)
		} // end switch yys1950
	} // end for yyj1950
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *JobListStub) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1962 int
	var yyb1962 bool
	var yyhl1962 bool = l >= 0
	yyj1962++
	if yyhl1962 {
		yyb1962 = yyj1962 > l
	} else {
		yyb1962 = r.CheckBreak()
	}
	if yyb1962 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ID = ""
	} else {
		x.ID = string(r.DecodeString())
	}
	yyj1962++
	if yyhl1962 {
		yyb1962 = yyj1962 > l
	} else {
		yyb1962 = r.CheckBreak()
	}
	if yyb1962 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ParentID = ""
	} else {
		x.ParentID = string(r.DecodeString())
	}
	yyj1962++
	if yyhl1962 {
		yyb1962 = yyj1962 > l
	} else {
		yyb1962 = r.CheckBreak()
	}
	if yyb1962 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj1962++
	if yyhl1962 {
		yyb1962 = yyj1962 > l
	} else {
		yyb1962 = r.CheckBreak()
	}
	if yyb1962 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Type = ""
	} else {
		x.Type = string(r.DecodeString())
	}
	yyj1962++
	if yyhl1962 {
		yyb1962 = yyj1962 > l
	} else {
		yyb1962 = r.CheckBreak()
	}
	if yyb1962 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Priority = 0
	} else {
		x.Priority = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj1962++
	if yyhl1962 {
		yyb1962 = yyj1962 > l
	} else {
		yyb1962 = r.CheckBreak()
	}
	if yyb1962 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Status = ""
	} else {
		x.Status = string(r.DecodeString())
	}
	yyj1962++
	if yyhl1962 {
		yyb1962 = yyj1962 > l
	} else {
		yyb1962 = r.CheckBreak()
	}
	if yyb1962 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.StatusDescription = ""
	} else {
		x.StatusDescription = string(r.DecodeString())
	}
	yyj1962++
	if yyhl1962 {
		yyb1962 = yyj1962 > l
	} else {
		yyb1962 = r.CheckBreak()
	}
	if yyb1962 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.JobSummary != nil {
			x.JobSummary = nil
		}
	} else {
		if x.JobSummary == nil {
			x.JobSummary = new(JobSummary)
		}
		x.JobSummary.CodecDecodeSelf(d)
	}
	yyj1962++
	if yyhl1962 {
		yyb1962 = yyj1962 > l
	} else {
		yyb1962 = r.CheckBreak()
	}
	if yyb1962 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.CreateIndex = 0
	} else {
		x.CreateIndex = uint64(r.DecodeUint(64))
	}
	yyj1962++
	if yyhl1962 {
		yyb1962 = yyj1962 > l
	} else {
		yyb1962 = r.CheckBreak()
	}
	if yyb1962 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ModifyIndex = 0
	} else {
		x.ModifyIndex = uint64(r.DecodeUint(64))
	}
	yyj1962++
	if yyhl1962 {
		yyb1962 = yyj1962 > l
	} else {
		yyb1962 = r.CheckBreak()
	}
	if yyb1962 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobModifyIndex = 0
	} else {
		x.JobModifyIndex = uint64(r.DecodeUint(64))
	}
	for {
		yyj1962++
		if yyhl1962 {
			yyb1962 = yyj1962 > l
		} else {
			yyb1962 = r.CheckBreak()
		}
		if yyb1962 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1962-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *UpdateStrategy) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1974 := z.EncBinary()
		_ = yym1974
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1975 := !z.EncBinary()
			yy2arr1975 := z.EncBasicHandle().StructToArray
			var yyq1975 [2]bool
			_, _, _ = yysep1975, yyq1975, yy2arr1975
			const yyr1975 bool = false
			var yynn1975 int
			if yyr1975 || yy2arr1975 {
				r.EncodeArrayStart(2)
			} else {
				yynn1975 = 2
				for _, b := range yyq1975 {
					if b {
						yynn1975++
					}
				}
				r.EncodeMapStart(yynn1975)
				yynn1975 = 0
			}
			if yyr1975 || yy2arr1975 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1977 := z.EncBinary()
				_ = yym1977
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Stagger) {
				} else {
					r.EncodeInt(int64(x.Stagger))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Stagger"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1978 := z.EncBinary()
				_ = yym1978
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Stagger) {
				} else {
					r.EncodeInt(int64(x.Stagger))
				}
			}
			if yyr1975 || yy2arr1975 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1980 := z.EncBinary()
				_ = yym1980
				if false {
				} else {
					r.EncodeInt(int64(x.MaxParallel))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MaxParallel"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1981 := z.EncBinary()
				_ = yym1981
				if false {
				} else {
					r.EncodeInt(int64(x.MaxParallel))
				}
			}
			if yyr1975 || yy2arr1975 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *UpdateStrategy) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym1982 := z.DecBinary()
	_ = yym1982
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct1983 := r.ContainerType()
		if yyct1983 == codecSelferValueTypeMap4362 {
			yyl1983 := r.ReadMapStart()
			if yyl1983 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl1983, d)
			}
		} else if yyct1983 == codecSelferValueTypeArray4362 {
			yyl1983 := r.ReadArrayStart()
			if yyl1983 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl1983, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *UpdateStrategy) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys1984Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys1984Slc
	var yyhl1984 bool = l >= 0
	for yyj1984 := 0; ; yyj1984++ {
		if yyhl1984 {
			if yyj1984 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys1984Slc = r.DecodeBytes(yys1984Slc, true, true)
		yys1984 := string(yys1984Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys1984 {
		case "Stagger":
			if r.TryDecodeAsNil() {
				x.Stagger = 0
			} else {
				x.Stagger = time.Duration(r.DecodeInt(64))
			}
		case "MaxParallel":
			if r.TryDecodeAsNil() {
				x.MaxParallel = 0
			} else {
				x.MaxParallel = int(r.DecodeInt(codecSelferBitsize4362))
			}
		default:
			z.DecStructFieldNotFound(-1, yys1984)
		} // end switch yys1984
	} // end for yyj1984
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *UpdateStrategy) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj1987 int
	var yyb1987 bool
	var yyhl1987 bool = l >= 0
	yyj1987++
	if yyhl1987 {
		yyb1987 = yyj1987 > l
	} else {
		yyb1987 = r.CheckBreak()
	}
	if yyb1987 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Stagger = 0
	} else {
		x.Stagger = time.Duration(r.DecodeInt(64))
	}
	yyj1987++
	if yyhl1987 {
		yyb1987 = yyj1987 > l
	} else {
		yyb1987 = r.CheckBreak()
	}
	if yyb1987 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MaxParallel = 0
	} else {
		x.MaxParallel = int(r.DecodeInt(codecSelferBitsize4362))
	}
	for {
		yyj1987++
		if yyhl1987 {
			yyb1987 = yyj1987 > l
		} else {
			yyb1987 = r.CheckBreak()
		}
		if yyb1987 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj1987-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *PeriodicConfig) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym1990 := z.EncBinary()
		_ = yym1990
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep1991 := !z.EncBinary()
			yy2arr1991 := z.EncBasicHandle().StructToArray
			var yyq1991 [4]bool
			_, _, _ = yysep1991, yyq1991, yy2arr1991
			const yyr1991 bool = false
			var yynn1991 int
			if yyr1991 || yy2arr1991 {
				r.EncodeArrayStart(4)
			} else {
				yynn1991 = 4
				for _, b := range yyq1991 {
					if b {
						yynn1991++
					}
				}
				r.EncodeMapStart(yynn1991)
				yynn1991 = 0
			}
			if yyr1991 || yy2arr1991 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1993 := z.EncBinary()
				_ = yym1993
				if false {
				} else {
					r.EncodeBool(bool(x.Enabled))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Enabled"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1994 := z.EncBinary()
				_ = yym1994
				if false {
				} else {
					r.EncodeBool(bool(x.Enabled))
				}
			}
			if yyr1991 || yy2arr1991 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1996 := z.EncBinary()
				_ = yym1996
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Spec))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Spec"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym1997 := z.EncBinary()
				_ = yym1997
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Spec))
				}
			}
			if yyr1991 || yy2arr1991 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym1999 := z.EncBinary()
				_ = yym1999
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.SpecType))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("SpecType"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2000 := z.EncBinary()
				_ = yym2000
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.SpecType))
				}
			}
			if yyr1991 || yy2arr1991 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2002 := z.EncBinary()
				_ = yym2002
				if false {
				} else {
					r.EncodeBool(bool(x.ProhibitOverlap))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ProhibitOverlap"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2003 := z.EncBinary()
				_ = yym2003
				if false {
				} else {
					r.EncodeBool(bool(x.ProhibitOverlap))
				}
			}
			if yyr1991 || yy2arr1991 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *PeriodicConfig) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2004 := z.DecBinary()
	_ = yym2004
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2005 := r.ContainerType()
		if yyct2005 == codecSelferValueTypeMap4362 {
			yyl2005 := r.ReadMapStart()
			if yyl2005 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2005, d)
			}
		} else if yyct2005 == codecSelferValueTypeArray4362 {
			yyl2005 := r.ReadArrayStart()
			if yyl2005 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2005, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *PeriodicConfig) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2006Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2006Slc
	var yyhl2006 bool = l >= 0
	for yyj2006 := 0; ; yyj2006++ {
		if yyhl2006 {
			if yyj2006 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2006Slc = r.DecodeBytes(yys2006Slc, true, true)
		yys2006 := string(yys2006Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2006 {
		case "Enabled":
			if r.TryDecodeAsNil() {
				x.Enabled = false
			} else {
				x.Enabled = bool(r.DecodeBool())
			}
		case "Spec":
			if r.TryDecodeAsNil() {
				x.Spec = ""
			} else {
				x.Spec = string(r.DecodeString())
			}
		case "SpecType":
			if r.TryDecodeAsNil() {
				x.SpecType = ""
			} else {
				x.SpecType = string(r.DecodeString())
			}
		case "ProhibitOverlap":
			if r.TryDecodeAsNil() {
				x.ProhibitOverlap = false
			} else {
				x.ProhibitOverlap = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys2006)
		} // end switch yys2006
	} // end for yyj2006
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *PeriodicConfig) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2011 int
	var yyb2011 bool
	var yyhl2011 bool = l >= 0
	yyj2011++
	if yyhl2011 {
		yyb2011 = yyj2011 > l
	} else {
		yyb2011 = r.CheckBreak()
	}
	if yyb2011 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Enabled = false
	} else {
		x.Enabled = bool(r.DecodeBool())
	}
	yyj2011++
	if yyhl2011 {
		yyb2011 = yyj2011 > l
	} else {
		yyb2011 = r.CheckBreak()
	}
	if yyb2011 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Spec = ""
	} else {
		x.Spec = string(r.DecodeString())
	}
	yyj2011++
	if yyhl2011 {
		yyb2011 = yyj2011 > l
	} else {
		yyb2011 = r.CheckBreak()
	}
	if yyb2011 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.SpecType = ""
	} else {
		x.SpecType = string(r.DecodeString())
	}
	yyj2011++
	if yyhl2011 {
		yyb2011 = yyj2011 > l
	} else {
		yyb2011 = r.CheckBreak()
	}
	if yyb2011 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ProhibitOverlap = false
	} else {
		x.ProhibitOverlap = bool(r.DecodeBool())
	}
	for {
		yyj2011++
		if yyhl2011 {
			yyb2011 = yyj2011 > l
		} else {
			yyb2011 = r.CheckBreak()
		}
		if yyb2011 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2011-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *PeriodicLaunch) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2016 := z.EncBinary()
		_ = yym2016
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2017 := !z.EncBinary()
			yy2arr2017 := z.EncBasicHandle().StructToArray
			var yyq2017 [4]bool
			_, _, _ = yysep2017, yyq2017, yy2arr2017
			const yyr2017 bool = false
			var yynn2017 int
			if yyr2017 || yy2arr2017 {
				r.EncodeArrayStart(4)
			} else {
				yynn2017 = 4
				for _, b := range yyq2017 {
					if b {
						yynn2017++
					}
				}
				r.EncodeMapStart(yynn2017)
				yynn2017 = 0
			}
			if yyr2017 || yy2arr2017 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2019 := z.EncBinary()
				_ = yym2019
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2020 := z.EncBinary()
				_ = yym2020
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			}
			if yyr2017 || yy2arr2017 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yy2022 := &x.Launch
				yym2023 := z.EncBinary()
				_ = yym2023
				if false {
				} else if yym2024 := z.TimeRtidIfBinc(); yym2024 != 0 {
					r.EncodeBuiltin(yym2024, yy2022)
				} else if z.HasExtensions() && z.EncExt(yy2022) {
				} else if yym2023 {
					z.EncBinaryMarshal(yy2022)
				} else if !yym2023 && z.IsJSONHandle() {
					z.EncJSONMarshal(yy2022)
				} else {
					z.EncFallback(yy2022)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Launch"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yy2025 := &x.Launch
				yym2026 := z.EncBinary()
				_ = yym2026
				if false {
				} else if yym2027 := z.TimeRtidIfBinc(); yym2027 != 0 {
					r.EncodeBuiltin(yym2027, yy2025)
				} else if z.HasExtensions() && z.EncExt(yy2025) {
				} else if yym2026 {
					z.EncBinaryMarshal(yy2025)
				} else if !yym2026 && z.IsJSONHandle() {
					z.EncJSONMarshal(yy2025)
				} else {
					z.EncFallback(yy2025)
				}
			}
			if yyr2017 || yy2arr2017 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2029 := z.EncBinary()
				_ = yym2029
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("CreateIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2030 := z.EncBinary()
				_ = yym2030
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			}
			if yyr2017 || yy2arr2017 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2032 := z.EncBinary()
				_ = yym2032
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2033 := z.EncBinary()
				_ = yym2033
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			}
			if yyr2017 || yy2arr2017 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *PeriodicLaunch) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2034 := z.DecBinary()
	_ = yym2034
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2035 := r.ContainerType()
		if yyct2035 == codecSelferValueTypeMap4362 {
			yyl2035 := r.ReadMapStart()
			if yyl2035 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2035, d)
			}
		} else if yyct2035 == codecSelferValueTypeArray4362 {
			yyl2035 := r.ReadArrayStart()
			if yyl2035 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2035, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *PeriodicLaunch) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2036Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2036Slc
	var yyhl2036 bool = l >= 0
	for yyj2036 := 0; ; yyj2036++ {
		if yyhl2036 {
			if yyj2036 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2036Slc = r.DecodeBytes(yys2036Slc, true, true)
		yys2036 := string(yys2036Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2036 {
		case "ID":
			if r.TryDecodeAsNil() {
				x.ID = ""
			} else {
				x.ID = string(r.DecodeString())
			}
		case "Launch":
			if r.TryDecodeAsNil() {
				x.Launch = time.Time{}
			} else {
				yyv2038 := &x.Launch
				yym2039 := z.DecBinary()
				_ = yym2039
				if false {
				} else if yym2040 := z.TimeRtidIfBinc(); yym2040 != 0 {
					r.DecodeBuiltin(yym2040, yyv2038)
				} else if z.HasExtensions() && z.DecExt(yyv2038) {
				} else if yym2039 {
					z.DecBinaryUnmarshal(yyv2038)
				} else if !yym2039 && z.IsJSONHandle() {
					z.DecJSONUnmarshal(yyv2038)
				} else {
					z.DecFallback(yyv2038, false)
				}
			}
		case "CreateIndex":
			if r.TryDecodeAsNil() {
				x.CreateIndex = 0
			} else {
				x.CreateIndex = uint64(r.DecodeUint(64))
			}
		case "ModifyIndex":
			if r.TryDecodeAsNil() {
				x.ModifyIndex = 0
			} else {
				x.ModifyIndex = uint64(r.DecodeUint(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys2036)
		} // end switch yys2036
	} // end for yyj2036
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *PeriodicLaunch) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2043 int
	var yyb2043 bool
	var yyhl2043 bool = l >= 0
	yyj2043++
	if yyhl2043 {
		yyb2043 = yyj2043 > l
	} else {
		yyb2043 = r.CheckBreak()
	}
	if yyb2043 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ID = ""
	} else {
		x.ID = string(r.DecodeString())
	}
	yyj2043++
	if yyhl2043 {
		yyb2043 = yyj2043 > l
	} else {
		yyb2043 = r.CheckBreak()
	}
	if yyb2043 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Launch = time.Time{}
	} else {
		yyv2045 := &x.Launch
		yym2046 := z.DecBinary()
		_ = yym2046
		if false {
		} else if yym2047 := z.TimeRtidIfBinc(); yym2047 != 0 {
			r.DecodeBuiltin(yym2047, yyv2045)
		} else if z.HasExtensions() && z.DecExt(yyv2045) {
		} else if yym2046 {
			z.DecBinaryUnmarshal(yyv2045)
		} else if !yym2046 && z.IsJSONHandle() {
			z.DecJSONUnmarshal(yyv2045)
		} else {
			z.DecFallback(yyv2045, false)
		}
	}
	yyj2043++
	if yyhl2043 {
		yyb2043 = yyj2043 > l
	} else {
		yyb2043 = r.CheckBreak()
	}
	if yyb2043 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.CreateIndex = 0
	} else {
		x.CreateIndex = uint64(r.DecodeUint(64))
	}
	yyj2043++
	if yyhl2043 {
		yyb2043 = yyj2043 > l
	} else {
		yyb2043 = r.CheckBreak()
	}
	if yyb2043 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ModifyIndex = 0
	} else {
		x.ModifyIndex = uint64(r.DecodeUint(64))
	}
	for {
		yyj2043++
		if yyhl2043 {
			yyb2043 = yyj2043 > l
		} else {
			yyb2043 = r.CheckBreak()
		}
		if yyb2043 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2043-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *RestartPolicy) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2050 := z.EncBinary()
		_ = yym2050
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2051 := !z.EncBinary()
			yy2arr2051 := z.EncBasicHandle().StructToArray
			var yyq2051 [4]bool
			_, _, _ = yysep2051, yyq2051, yy2arr2051
			const yyr2051 bool = false
			var yynn2051 int
			if yyr2051 || yy2arr2051 {
				r.EncodeArrayStart(4)
			} else {
				yynn2051 = 4
				for _, b := range yyq2051 {
					if b {
						yynn2051++
					}
				}
				r.EncodeMapStart(yynn2051)
				yynn2051 = 0
			}
			if yyr2051 || yy2arr2051 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2053 := z.EncBinary()
				_ = yym2053
				if false {
				} else {
					r.EncodeInt(int64(x.Attempts))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Attempts"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2054 := z.EncBinary()
				_ = yym2054
				if false {
				} else {
					r.EncodeInt(int64(x.Attempts))
				}
			}
			if yyr2051 || yy2arr2051 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2056 := z.EncBinary()
				_ = yym2056
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Interval) {
				} else {
					r.EncodeInt(int64(x.Interval))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Interval"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2057 := z.EncBinary()
				_ = yym2057
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Interval) {
				} else {
					r.EncodeInt(int64(x.Interval))
				}
			}
			if yyr2051 || yy2arr2051 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2059 := z.EncBinary()
				_ = yym2059
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Delay) {
				} else {
					r.EncodeInt(int64(x.Delay))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Delay"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2060 := z.EncBinary()
				_ = yym2060
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Delay) {
				} else {
					r.EncodeInt(int64(x.Delay))
				}
			}
			if yyr2051 || yy2arr2051 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2062 := z.EncBinary()
				_ = yym2062
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Mode))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Mode"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2063 := z.EncBinary()
				_ = yym2063
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Mode))
				}
			}
			if yyr2051 || yy2arr2051 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *RestartPolicy) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2064 := z.DecBinary()
	_ = yym2064
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2065 := r.ContainerType()
		if yyct2065 == codecSelferValueTypeMap4362 {
			yyl2065 := r.ReadMapStart()
			if yyl2065 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2065, d)
			}
		} else if yyct2065 == codecSelferValueTypeArray4362 {
			yyl2065 := r.ReadArrayStart()
			if yyl2065 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2065, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *RestartPolicy) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2066Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2066Slc
	var yyhl2066 bool = l >= 0
	for yyj2066 := 0; ; yyj2066++ {
		if yyhl2066 {
			if yyj2066 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2066Slc = r.DecodeBytes(yys2066Slc, true, true)
		yys2066 := string(yys2066Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2066 {
		case "Attempts":
			if r.TryDecodeAsNil() {
				x.Attempts = 0
			} else {
				x.Attempts = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "Interval":
			if r.TryDecodeAsNil() {
				x.Interval = 0
			} else {
				x.Interval = time.Duration(r.DecodeInt(64))
			}
		case "Delay":
			if r.TryDecodeAsNil() {
				x.Delay = 0
			} else {
				x.Delay = time.Duration(r.DecodeInt(64))
			}
		case "Mode":
			if r.TryDecodeAsNil() {
				x.Mode = ""
			} else {
				x.Mode = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys2066)
		} // end switch yys2066
	} // end for yyj2066
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *RestartPolicy) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2071 int
	var yyb2071 bool
	var yyhl2071 bool = l >= 0
	yyj2071++
	if yyhl2071 {
		yyb2071 = yyj2071 > l
	} else {
		yyb2071 = r.CheckBreak()
	}
	if yyb2071 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Attempts = 0
	} else {
		x.Attempts = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj2071++
	if yyhl2071 {
		yyb2071 = yyj2071 > l
	} else {
		yyb2071 = r.CheckBreak()
	}
	if yyb2071 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Interval = 0
	} else {
		x.Interval = time.Duration(r.DecodeInt(64))
	}
	yyj2071++
	if yyhl2071 {
		yyb2071 = yyj2071 > l
	} else {
		yyb2071 = r.CheckBreak()
	}
	if yyb2071 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Delay = 0
	} else {
		x.Delay = time.Duration(r.DecodeInt(64))
	}
	yyj2071++
	if yyhl2071 {
		yyb2071 = yyj2071 > l
	} else {
		yyb2071 = r.CheckBreak()
	}
	if yyb2071 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Mode = ""
	} else {
		x.Mode = string(r.DecodeString())
	}
	for {
		yyj2071++
		if yyhl2071 {
			yyb2071 = yyj2071 > l
		} else {
			yyb2071 = r.CheckBreak()
		}
		if yyb2071 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2071-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *TaskGroup) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2076 := z.EncBinary()
		_ = yym2076
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2077 := !z.EncBinary()
			yy2arr2077 := z.EncBasicHandle().StructToArray
			var yyq2077 [6]bool
			_, _, _ = yysep2077, yyq2077, yy2arr2077
			const yyr2077 bool = false
			var yynn2077 int
			if yyr2077 || yy2arr2077 {
				r.EncodeArrayStart(6)
			} else {
				yynn2077 = 6
				for _, b := range yyq2077 {
					if b {
						yynn2077++
					}
				}
				r.EncodeMapStart(yynn2077)
				yynn2077 = 0
			}
			if yyr2077 || yy2arr2077 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2079 := z.EncBinary()
				_ = yym2079
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Name"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2080 := z.EncBinary()
				_ = yym2080
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			}
			if yyr2077 || yy2arr2077 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2082 := z.EncBinary()
				_ = yym2082
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2083 := z.EncBinary()
				_ = yym2083
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			}
			if yyr2077 || yy2arr2077 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.RestartPolicy == nil {
					r.EncodeNil()
				} else {
					x.RestartPolicy.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("RestartPolicy"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.RestartPolicy == nil {
					r.EncodeNil()
				} else {
					x.RestartPolicy.CodecEncodeSelf(e)
				}
			}
			if yyr2077 || yy2arr2077 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Tasks == nil {
					r.EncodeNil()
				} else {
					yym2086 := z.EncBinary()
					_ = yym2086
					if false {
					} else {
						h.encSlicePtrtoTask(([]*Task)(x.Tasks), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Tasks"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Tasks == nil {
					r.EncodeNil()
				} else {
					yym2087 := z.EncBinary()
					_ = yym2087
					if false {
					} else {
						h.encSlicePtrtoTask(([]*Task)(x.Tasks), e)
					}
				}
			}
			if yyr2077 || yy2arr2077 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.EphemeralDisk == nil {
					r.EncodeNil()
				} else {
					x.EphemeralDisk.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EphemeralDisk"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.EphemeralDisk == nil {
					r.EncodeNil()
				} else {
					x.EphemeralDisk.CodecEncodeSelf(e)
				}
			}
			if yyr2077 || yy2arr2077 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Meta == nil {
					r.EncodeNil()
				} else {
					yym2090 := z.EncBinary()
					_ = yym2090
					if false {
					} else {
						z.F.EncMapStringStringV(x.Meta, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Meta"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Meta == nil {
					r.EncodeNil()
				} else {
					yym2091 := z.EncBinary()
					_ = yym2091
					if false {
					} else {
						z.F.EncMapStringStringV(x.Meta, false, e)
					}
				}
			}
			if yyr2077 || yy2arr2077 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *TaskGroup) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2092 := z.DecBinary()
	_ = yym2092
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2093 := r.ContainerType()
		if yyct2093 == codecSelferValueTypeMap4362 {
			yyl2093 := r.ReadMapStart()
			if yyl2093 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2093, d)
			}
		} else if yyct2093 == codecSelferValueTypeArray4362 {
			yyl2093 := r.ReadArrayStart()
			if yyl2093 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2093, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *TaskGroup) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2094Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2094Slc
	var yyhl2094 bool = l >= 0
	for yyj2094 := 0; ; yyj2094++ {
		if yyhl2094 {
			if yyj2094 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2094Slc = r.DecodeBytes(yys2094Slc, true, true)
		yys2094 := string(yys2094Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2094 {
		case "Name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "NodeID":
			if r.TryDecodeAsNil() {
				x.NodeID = ""
			} else {
				x.NodeID = string(r.DecodeString())
			}
		case "RestartPolicy":
			if r.TryDecodeAsNil() {
				if x.RestartPolicy != nil {
					x.RestartPolicy = nil
				}
			} else {
				if x.RestartPolicy == nil {
					x.RestartPolicy = new(RestartPolicy)
				}
				x.RestartPolicy.CodecDecodeSelf(d)
			}
		case "Tasks":
			if r.TryDecodeAsNil() {
				x.Tasks = nil
			} else {
				yyv2098 := &x.Tasks
				yym2099 := z.DecBinary()
				_ = yym2099
				if false {
				} else {
					h.decSlicePtrtoTask((*[]*Task)(yyv2098), d)
				}
			}
		case "EphemeralDisk":
			if r.TryDecodeAsNil() {
				if x.EphemeralDisk != nil {
					x.EphemeralDisk = nil
				}
			} else {
				if x.EphemeralDisk == nil {
					x.EphemeralDisk = new(EphemeralDisk)
				}
				x.EphemeralDisk.CodecDecodeSelf(d)
			}
		case "Meta":
			if r.TryDecodeAsNil() {
				x.Meta = nil
			} else {
				yyv2101 := &x.Meta
				yym2102 := z.DecBinary()
				_ = yym2102
				if false {
				} else {
					z.F.DecMapStringStringX(yyv2101, false, d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys2094)
		} // end switch yys2094
	} // end for yyj2094
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *TaskGroup) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2103 int
	var yyb2103 bool
	var yyhl2103 bool = l >= 0
	yyj2103++
	if yyhl2103 {
		yyb2103 = yyj2103 > l
	} else {
		yyb2103 = r.CheckBreak()
	}
	if yyb2103 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj2103++
	if yyhl2103 {
		yyb2103 = yyj2103 > l
	} else {
		yyb2103 = r.CheckBreak()
	}
	if yyb2103 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeID = ""
	} else {
		x.NodeID = string(r.DecodeString())
	}
	yyj2103++
	if yyhl2103 {
		yyb2103 = yyj2103 > l
	} else {
		yyb2103 = r.CheckBreak()
	}
	if yyb2103 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.RestartPolicy != nil {
			x.RestartPolicy = nil
		}
	} else {
		if x.RestartPolicy == nil {
			x.RestartPolicy = new(RestartPolicy)
		}
		x.RestartPolicy.CodecDecodeSelf(d)
	}
	yyj2103++
	if yyhl2103 {
		yyb2103 = yyj2103 > l
	} else {
		yyb2103 = r.CheckBreak()
	}
	if yyb2103 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Tasks = nil
	} else {
		yyv2107 := &x.Tasks
		yym2108 := z.DecBinary()
		_ = yym2108
		if false {
		} else {
			h.decSlicePtrtoTask((*[]*Task)(yyv2107), d)
		}
	}
	yyj2103++
	if yyhl2103 {
		yyb2103 = yyj2103 > l
	} else {
		yyb2103 = r.CheckBreak()
	}
	if yyb2103 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.EphemeralDisk != nil {
			x.EphemeralDisk = nil
		}
	} else {
		if x.EphemeralDisk == nil {
			x.EphemeralDisk = new(EphemeralDisk)
		}
		x.EphemeralDisk.CodecDecodeSelf(d)
	}
	yyj2103++
	if yyhl2103 {
		yyb2103 = yyj2103 > l
	} else {
		yyb2103 = r.CheckBreak()
	}
	if yyb2103 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Meta = nil
	} else {
		yyv2110 := &x.Meta
		yym2111 := z.DecBinary()
		_ = yym2111
		if false {
		} else {
			z.F.DecMapStringStringX(yyv2110, false, d)
		}
	}
	for {
		yyj2103++
		if yyhl2103 {
			yyb2103 = yyj2103 > l
		} else {
			yyb2103 = r.CheckBreak()
		}
		if yyb2103 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2103-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *LogConfig) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2112 := z.EncBinary()
		_ = yym2112
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2113 := !z.EncBinary()
			yy2arr2113 := z.EncBasicHandle().StructToArray
			var yyq2113 [2]bool
			_, _, _ = yysep2113, yyq2113, yy2arr2113
			const yyr2113 bool = false
			var yynn2113 int
			if yyr2113 || yy2arr2113 {
				r.EncodeArrayStart(2)
			} else {
				yynn2113 = 2
				for _, b := range yyq2113 {
					if b {
						yynn2113++
					}
				}
				r.EncodeMapStart(yynn2113)
				yynn2113 = 0
			}
			if yyr2113 || yy2arr2113 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2115 := z.EncBinary()
				_ = yym2115
				if false {
				} else {
					r.EncodeInt(int64(x.MaxFiles))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MaxFiles"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2116 := z.EncBinary()
				_ = yym2116
				if false {
				} else {
					r.EncodeInt(int64(x.MaxFiles))
				}
			}
			if yyr2113 || yy2arr2113 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2118 := z.EncBinary()
				_ = yym2118
				if false {
				} else {
					r.EncodeInt(int64(x.MaxFileSizeMB))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("MaxFileSizeMB"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2119 := z.EncBinary()
				_ = yym2119
				if false {
				} else {
					r.EncodeInt(int64(x.MaxFileSizeMB))
				}
			}
			if yyr2113 || yy2arr2113 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *LogConfig) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2120 := z.DecBinary()
	_ = yym2120
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2121 := r.ContainerType()
		if yyct2121 == codecSelferValueTypeMap4362 {
			yyl2121 := r.ReadMapStart()
			if yyl2121 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2121, d)
			}
		} else if yyct2121 == codecSelferValueTypeArray4362 {
			yyl2121 := r.ReadArrayStart()
			if yyl2121 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2121, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *LogConfig) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2122Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2122Slc
	var yyhl2122 bool = l >= 0
	for yyj2122 := 0; ; yyj2122++ {
		if yyhl2122 {
			if yyj2122 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2122Slc = r.DecodeBytes(yys2122Slc, true, true)
		yys2122 := string(yys2122Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2122 {
		case "MaxFiles":
			if r.TryDecodeAsNil() {
				x.MaxFiles = 0
			} else {
				x.MaxFiles = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "MaxFileSizeMB":
			if r.TryDecodeAsNil() {
				x.MaxFileSizeMB = 0
			} else {
				x.MaxFileSizeMB = int(r.DecodeInt(codecSelferBitsize4362))
			}
		default:
			z.DecStructFieldNotFound(-1, yys2122)
		} // end switch yys2122
	} // end for yyj2122
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *LogConfig) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2125 int
	var yyb2125 bool
	var yyhl2125 bool = l >= 0
	yyj2125++
	if yyhl2125 {
		yyb2125 = yyj2125 > l
	} else {
		yyb2125 = r.CheckBreak()
	}
	if yyb2125 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MaxFiles = 0
	} else {
		x.MaxFiles = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj2125++
	if yyhl2125 {
		yyb2125 = yyj2125 > l
	} else {
		yyb2125 = r.CheckBreak()
	}
	if yyb2125 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.MaxFileSizeMB = 0
	} else {
		x.MaxFileSizeMB = int(r.DecodeInt(codecSelferBitsize4362))
	}
	for {
		yyj2125++
		if yyhl2125 {
			yyb2125 = yyj2125 > l
		} else {
			yyb2125 = r.CheckBreak()
		}
		if yyb2125 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2125-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *Task) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2128 := z.EncBinary()
		_ = yym2128
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2129 := !z.EncBinary()
			yy2arr2129 := z.EncBasicHandle().StructToArray
			var yyq2129 [8]bool
			_, _, _ = yysep2129, yyq2129, yy2arr2129
			const yyr2129 bool = false
			var yynn2129 int
			if yyr2129 || yy2arr2129 {
				r.EncodeArrayStart(8)
			} else {
				yynn2129 = 8
				for _, b := range yyq2129 {
					if b {
						yynn2129++
					}
				}
				r.EncodeMapStart(yynn2129)
				yynn2129 = 0
			}
			if yyr2129 || yy2arr2129 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2131 := z.EncBinary()
				_ = yym2131
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Name"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2132 := z.EncBinary()
				_ = yym2132
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			}
			if yyr2129 || yy2arr2129 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2134 := z.EncBinary()
				_ = yym2134
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Driver))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Driver"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2135 := z.EncBinary()
				_ = yym2135
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Driver))
				}
			}
			if yyr2129 || yy2arr2129 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Config == nil {
					r.EncodeNil()
				} else {
					yym2137 := z.EncBinary()
					_ = yym2137
					if false {
					} else {
						z.F.EncMapStringIntfV(x.Config, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Config"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Config == nil {
					r.EncodeNil()
				} else {
					yym2138 := z.EncBinary()
					_ = yym2138
					if false {
					} else {
						z.F.EncMapStringIntfV(x.Config, false, e)
					}
				}
			}
			if yyr2129 || yy2arr2129 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Env == nil {
					r.EncodeNil()
				} else {
					yym2140 := z.EncBinary()
					_ = yym2140
					if false {
					} else {
						z.F.EncMapStringStringV(x.Env, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Env"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Env == nil {
					r.EncodeNil()
				} else {
					yym2141 := z.EncBinary()
					_ = yym2141
					if false {
					} else {
						z.F.EncMapStringStringV(x.Env, false, e)
					}
				}
			}
			if yyr2129 || yy2arr2129 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Resources == nil {
					r.EncodeNil()
				} else {
					x.Resources.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Resources"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Resources == nil {
					r.EncodeNil()
				} else {
					x.Resources.CodecEncodeSelf(e)
				}
			}
			if yyr2129 || yy2arr2129 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Meta == nil {
					r.EncodeNil()
				} else {
					yym2144 := z.EncBinary()
					_ = yym2144
					if false {
					} else {
						z.F.EncMapStringStringV(x.Meta, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Meta"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Meta == nil {
					r.EncodeNil()
				} else {
					yym2145 := z.EncBinary()
					_ = yym2145
					if false {
					} else {
						z.F.EncMapStringStringV(x.Meta, false, e)
					}
				}
			}
			if yyr2129 || yy2arr2129 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2147 := z.EncBinary()
				_ = yym2147
				if false {
				} else if z.HasExtensions() && z.EncExt(x.KillTimeout) {
				} else {
					r.EncodeInt(int64(x.KillTimeout))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KillTimeout"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2148 := z.EncBinary()
				_ = yym2148
				if false {
				} else if z.HasExtensions() && z.EncExt(x.KillTimeout) {
				} else {
					r.EncodeInt(int64(x.KillTimeout))
				}
			}
			if yyr2129 || yy2arr2129 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.LogConfig == nil {
					r.EncodeNil()
				} else {
					x.LogConfig.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("LogConfig"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.LogConfig == nil {
					r.EncodeNil()
				} else {
					x.LogConfig.CodecEncodeSelf(e)
				}
			}
			if yyr2129 || yy2arr2129 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *Task) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2150 := z.DecBinary()
	_ = yym2150
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2151 := r.ContainerType()
		if yyct2151 == codecSelferValueTypeMap4362 {
			yyl2151 := r.ReadMapStart()
			if yyl2151 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2151, d)
			}
		} else if yyct2151 == codecSelferValueTypeArray4362 {
			yyl2151 := r.ReadArrayStart()
			if yyl2151 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2151, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *Task) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2152Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2152Slc
	var yyhl2152 bool = l >= 0
	for yyj2152 := 0; ; yyj2152++ {
		if yyhl2152 {
			if yyj2152 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2152Slc = r.DecodeBytes(yys2152Slc, true, true)
		yys2152 := string(yys2152Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2152 {
		case "Name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "Driver":
			if r.TryDecodeAsNil() {
				x.Driver = ""
			} else {
				x.Driver = string(r.DecodeString())
			}
		case "Config":
			if r.TryDecodeAsNil() {
				x.Config = nil
			} else {
				yyv2155 := &x.Config
				yym2156 := z.DecBinary()
				_ = yym2156
				if false {
				} else {
					z.F.DecMapStringIntfX(yyv2155, false, d)
				}
			}
		case "Env":
			if r.TryDecodeAsNil() {
				x.Env = nil
			} else {
				yyv2157 := &x.Env
				yym2158 := z.DecBinary()
				_ = yym2158
				if false {
				} else {
					z.F.DecMapStringStringX(yyv2157, false, d)
				}
			}
		case "Resources":
			if r.TryDecodeAsNil() {
				if x.Resources != nil {
					x.Resources = nil
				}
			} else {
				if x.Resources == nil {
					x.Resources = new(Resources)
				}
				x.Resources.CodecDecodeSelf(d)
			}
		case "Meta":
			if r.TryDecodeAsNil() {
				x.Meta = nil
			} else {
				yyv2160 := &x.Meta
				yym2161 := z.DecBinary()
				_ = yym2161
				if false {
				} else {
					z.F.DecMapStringStringX(yyv2160, false, d)
				}
			}
		case "KillTimeout":
			if r.TryDecodeAsNil() {
				x.KillTimeout = 0
			} else {
				x.KillTimeout = time.Duration(r.DecodeInt(64))
			}
		case "LogConfig":
			if r.TryDecodeAsNil() {
				if x.LogConfig != nil {
					x.LogConfig = nil
				}
			} else {
				if x.LogConfig == nil {
					x.LogConfig = new(LogConfig)
				}
				x.LogConfig.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys2152)
		} // end switch yys2152
	} // end for yyj2152
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *Task) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2164 int
	var yyb2164 bool
	var yyhl2164 bool = l >= 0
	yyj2164++
	if yyhl2164 {
		yyb2164 = yyj2164 > l
	} else {
		yyb2164 = r.CheckBreak()
	}
	if yyb2164 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj2164++
	if yyhl2164 {
		yyb2164 = yyj2164 > l
	} else {
		yyb2164 = r.CheckBreak()
	}
	if yyb2164 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Driver = ""
	} else {
		x.Driver = string(r.DecodeString())
	}
	yyj2164++
	if yyhl2164 {
		yyb2164 = yyj2164 > l
	} else {
		yyb2164 = r.CheckBreak()
	}
	if yyb2164 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Config = nil
	} else {
		yyv2167 := &x.Config
		yym2168 := z.DecBinary()
		_ = yym2168
		if false {
		} else {
			z.F.DecMapStringIntfX(yyv2167, false, d)
		}
	}
	yyj2164++
	if yyhl2164 {
		yyb2164 = yyj2164 > l
	} else {
		yyb2164 = r.CheckBreak()
	}
	if yyb2164 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Env = nil
	} else {
		yyv2169 := &x.Env
		yym2170 := z.DecBinary()
		_ = yym2170
		if false {
		} else {
			z.F.DecMapStringStringX(yyv2169, false, d)
		}
	}
	yyj2164++
	if yyhl2164 {
		yyb2164 = yyj2164 > l
	} else {
		yyb2164 = r.CheckBreak()
	}
	if yyb2164 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Resources != nil {
			x.Resources = nil
		}
	} else {
		if x.Resources == nil {
			x.Resources = new(Resources)
		}
		x.Resources.CodecDecodeSelf(d)
	}
	yyj2164++
	if yyhl2164 {
		yyb2164 = yyj2164 > l
	} else {
		yyb2164 = r.CheckBreak()
	}
	if yyb2164 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Meta = nil
	} else {
		yyv2172 := &x.Meta
		yym2173 := z.DecBinary()
		_ = yym2173
		if false {
		} else {
			z.F.DecMapStringStringX(yyv2172, false, d)
		}
	}
	yyj2164++
	if yyhl2164 {
		yyb2164 = yyj2164 > l
	} else {
		yyb2164 = r.CheckBreak()
	}
	if yyb2164 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KillTimeout = 0
	} else {
		x.KillTimeout = time.Duration(r.DecodeInt(64))
	}
	yyj2164++
	if yyhl2164 {
		yyb2164 = yyj2164 > l
	} else {
		yyb2164 = r.CheckBreak()
	}
	if yyb2164 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.LogConfig != nil {
			x.LogConfig = nil
		}
	} else {
		if x.LogConfig == nil {
			x.LogConfig = new(LogConfig)
		}
		x.LogConfig.CodecDecodeSelf(d)
	}
	for {
		yyj2164++
		if yyhl2164 {
			yyb2164 = yyj2164 > l
		} else {
			yyb2164 = r.CheckBreak()
		}
		if yyb2164 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2164-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *Template) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2176 := z.EncBinary()
		_ = yym2176
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2177 := !z.EncBinary()
			yy2arr2177 := z.EncBasicHandle().StructToArray
			var yyq2177 [7]bool
			_, _, _ = yysep2177, yyq2177, yy2arr2177
			const yyr2177 bool = false
			var yynn2177 int
			if yyr2177 || yy2arr2177 {
				r.EncodeArrayStart(7)
			} else {
				yynn2177 = 7
				for _, b := range yyq2177 {
					if b {
						yynn2177++
					}
				}
				r.EncodeMapStart(yynn2177)
				yynn2177 = 0
			}
			if yyr2177 || yy2arr2177 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2179 := z.EncBinary()
				_ = yym2179
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.SourcePath))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("SourcePath"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2180 := z.EncBinary()
				_ = yym2180
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.SourcePath))
				}
			}
			if yyr2177 || yy2arr2177 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2182 := z.EncBinary()
				_ = yym2182
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.DestPath))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("DestPath"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2183 := z.EncBinary()
				_ = yym2183
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.DestPath))
				}
			}
			if yyr2177 || yy2arr2177 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2185 := z.EncBinary()
				_ = yym2185
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EmbededTmpl))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EmbededTmpl"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2186 := z.EncBinary()
				_ = yym2186
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EmbededTmpl))
				}
			}
			if yyr2177 || yy2arr2177 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2188 := z.EncBinary()
				_ = yym2188
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ChangeMode))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ChangeMode"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2189 := z.EncBinary()
				_ = yym2189
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ChangeMode))
				}
			}
			if yyr2177 || yy2arr2177 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2191 := z.EncBinary()
				_ = yym2191
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.RestartSignal))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("RestartSignal"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2192 := z.EncBinary()
				_ = yym2192
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.RestartSignal))
				}
			}
			if yyr2177 || yy2arr2177 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2194 := z.EncBinary()
				_ = yym2194
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Splay) {
				} else {
					r.EncodeInt(int64(x.Splay))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Splay"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2195 := z.EncBinary()
				_ = yym2195
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Splay) {
				} else {
					r.EncodeInt(int64(x.Splay))
				}
			}
			if yyr2177 || yy2arr2177 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2197 := z.EncBinary()
				_ = yym2197
				if false {
				} else {
					r.EncodeBool(bool(x.Once))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Once"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2198 := z.EncBinary()
				_ = yym2198
				if false {
				} else {
					r.EncodeBool(bool(x.Once))
				}
			}
			if yyr2177 || yy2arr2177 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *Template) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2199 := z.DecBinary()
	_ = yym2199
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2200 := r.ContainerType()
		if yyct2200 == codecSelferValueTypeMap4362 {
			yyl2200 := r.ReadMapStart()
			if yyl2200 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2200, d)
			}
		} else if yyct2200 == codecSelferValueTypeArray4362 {
			yyl2200 := r.ReadArrayStart()
			if yyl2200 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2200, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *Template) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2201Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2201Slc
	var yyhl2201 bool = l >= 0
	for yyj2201 := 0; ; yyj2201++ {
		if yyhl2201 {
			if yyj2201 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2201Slc = r.DecodeBytes(yys2201Slc, true, true)
		yys2201 := string(yys2201Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2201 {
		case "SourcePath":
			if r.TryDecodeAsNil() {
				x.SourcePath = ""
			} else {
				x.SourcePath = string(r.DecodeString())
			}
		case "DestPath":
			if r.TryDecodeAsNil() {
				x.DestPath = ""
			} else {
				x.DestPath = string(r.DecodeString())
			}
		case "EmbededTmpl":
			if r.TryDecodeAsNil() {
				x.EmbededTmpl = ""
			} else {
				x.EmbededTmpl = string(r.DecodeString())
			}
		case "ChangeMode":
			if r.TryDecodeAsNil() {
				x.ChangeMode = ""
			} else {
				x.ChangeMode = string(r.DecodeString())
			}
		case "RestartSignal":
			if r.TryDecodeAsNil() {
				x.RestartSignal = ""
			} else {
				x.RestartSignal = string(r.DecodeString())
			}
		case "Splay":
			if r.TryDecodeAsNil() {
				x.Splay = 0
			} else {
				x.Splay = time.Duration(r.DecodeInt(64))
			}
		case "Once":
			if r.TryDecodeAsNil() {
				x.Once = false
			} else {
				x.Once = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys2201)
		} // end switch yys2201
	} // end for yyj2201
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *Template) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2209 int
	var yyb2209 bool
	var yyhl2209 bool = l >= 0
	yyj2209++
	if yyhl2209 {
		yyb2209 = yyj2209 > l
	} else {
		yyb2209 = r.CheckBreak()
	}
	if yyb2209 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.SourcePath = ""
	} else {
		x.SourcePath = string(r.DecodeString())
	}
	yyj2209++
	if yyhl2209 {
		yyb2209 = yyj2209 > l
	} else {
		yyb2209 = r.CheckBreak()
	}
	if yyb2209 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.DestPath = ""
	} else {
		x.DestPath = string(r.DecodeString())
	}
	yyj2209++
	if yyhl2209 {
		yyb2209 = yyj2209 > l
	} else {
		yyb2209 = r.CheckBreak()
	}
	if yyb2209 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EmbededTmpl = ""
	} else {
		x.EmbededTmpl = string(r.DecodeString())
	}
	yyj2209++
	if yyhl2209 {
		yyb2209 = yyj2209 > l
	} else {
		yyb2209 = r.CheckBreak()
	}
	if yyb2209 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ChangeMode = ""
	} else {
		x.ChangeMode = string(r.DecodeString())
	}
	yyj2209++
	if yyhl2209 {
		yyb2209 = yyj2209 > l
	} else {
		yyb2209 = r.CheckBreak()
	}
	if yyb2209 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.RestartSignal = ""
	} else {
		x.RestartSignal = string(r.DecodeString())
	}
	yyj2209++
	if yyhl2209 {
		yyb2209 = yyj2209 > l
	} else {
		yyb2209 = r.CheckBreak()
	}
	if yyb2209 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Splay = 0
	} else {
		x.Splay = time.Duration(r.DecodeInt(64))
	}
	yyj2209++
	if yyhl2209 {
		yyb2209 = yyj2209 > l
	} else {
		yyb2209 = r.CheckBreak()
	}
	if yyb2209 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Once = false
	} else {
		x.Once = bool(r.DecodeBool())
	}
	for {
		yyj2209++
		if yyhl2209 {
			yyb2209 = yyj2209 > l
		} else {
			yyb2209 = r.CheckBreak()
		}
		if yyb2209 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2209-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *TaskState) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2217 := z.EncBinary()
		_ = yym2217
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2218 := !z.EncBinary()
			yy2arr2218 := z.EncBasicHandle().StructToArray
			var yyq2218 [3]bool
			_, _, _ = yysep2218, yyq2218, yy2arr2218
			const yyr2218 bool = false
			var yynn2218 int
			if yyr2218 || yy2arr2218 {
				r.EncodeArrayStart(3)
			} else {
				yynn2218 = 3
				for _, b := range yyq2218 {
					if b {
						yynn2218++
					}
				}
				r.EncodeMapStart(yynn2218)
				yynn2218 = 0
			}
			if yyr2218 || yy2arr2218 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2220 := z.EncBinary()
				_ = yym2220
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.State))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("State"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2221 := z.EncBinary()
				_ = yym2221
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.State))
				}
			}
			if yyr2218 || yy2arr2218 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2223 := z.EncBinary()
				_ = yym2223
				if false {
				} else {
					r.EncodeBool(bool(x.Failed))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Failed"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2224 := z.EncBinary()
				_ = yym2224
				if false {
				} else {
					r.EncodeBool(bool(x.Failed))
				}
			}
			if yyr2218 || yy2arr2218 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Events == nil {
					r.EncodeNil()
				} else {
					yym2226 := z.EncBinary()
					_ = yym2226
					if false {
					} else {
						h.encSlicePtrtoTaskEvent(([]*TaskEvent)(x.Events), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Events"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Events == nil {
					r.EncodeNil()
				} else {
					yym2227 := z.EncBinary()
					_ = yym2227
					if false {
					} else {
						h.encSlicePtrtoTaskEvent(([]*TaskEvent)(x.Events), e)
					}
				}
			}
			if yyr2218 || yy2arr2218 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *TaskState) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2228 := z.DecBinary()
	_ = yym2228
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2229 := r.ContainerType()
		if yyct2229 == codecSelferValueTypeMap4362 {
			yyl2229 := r.ReadMapStart()
			if yyl2229 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2229, d)
			}
		} else if yyct2229 == codecSelferValueTypeArray4362 {
			yyl2229 := r.ReadArrayStart()
			if yyl2229 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2229, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *TaskState) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2230Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2230Slc
	var yyhl2230 bool = l >= 0
	for yyj2230 := 0; ; yyj2230++ {
		if yyhl2230 {
			if yyj2230 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2230Slc = r.DecodeBytes(yys2230Slc, true, true)
		yys2230 := string(yys2230Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2230 {
		case "State":
			if r.TryDecodeAsNil() {
				x.State = ""
			} else {
				x.State = string(r.DecodeString())
			}
		case "Failed":
			if r.TryDecodeAsNil() {
				x.Failed = false
			} else {
				x.Failed = bool(r.DecodeBool())
			}
		case "Events":
			if r.TryDecodeAsNil() {
				x.Events = nil
			} else {
				yyv2233 := &x.Events
				yym2234 := z.DecBinary()
				_ = yym2234
				if false {
				} else {
					h.decSlicePtrtoTaskEvent((*[]*TaskEvent)(yyv2233), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys2230)
		} // end switch yys2230
	} // end for yyj2230
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *TaskState) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2235 int
	var yyb2235 bool
	var yyhl2235 bool = l >= 0
	yyj2235++
	if yyhl2235 {
		yyb2235 = yyj2235 > l
	} else {
		yyb2235 = r.CheckBreak()
	}
	if yyb2235 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.State = ""
	} else {
		x.State = string(r.DecodeString())
	}
	yyj2235++
	if yyhl2235 {
		yyb2235 = yyj2235 > l
	} else {
		yyb2235 = r.CheckBreak()
	}
	if yyb2235 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Failed = false
	} else {
		x.Failed = bool(r.DecodeBool())
	}
	yyj2235++
	if yyhl2235 {
		yyb2235 = yyj2235 > l
	} else {
		yyb2235 = r.CheckBreak()
	}
	if yyb2235 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Events = nil
	} else {
		yyv2238 := &x.Events
		yym2239 := z.DecBinary()
		_ = yym2239
		if false {
		} else {
			h.decSlicePtrtoTaskEvent((*[]*TaskEvent)(yyv2238), d)
		}
	}
	for {
		yyj2235++
		if yyhl2235 {
			yyb2235 = yyj2235 > l
		} else {
			yyb2235 = r.CheckBreak()
		}
		if yyb2235 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2235-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *TaskEvent) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2240 := z.EncBinary()
		_ = yym2240
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2241 := !z.EncBinary()
			yy2arr2241 := z.EncBasicHandle().StructToArray
			var yyq2241 [17]bool
			_, _, _ = yysep2241, yyq2241, yy2arr2241
			const yyr2241 bool = false
			var yynn2241 int
			if yyr2241 || yy2arr2241 {
				r.EncodeArrayStart(17)
			} else {
				yynn2241 = 17
				for _, b := range yyq2241 {
					if b {
						yynn2241++
					}
				}
				r.EncodeMapStart(yynn2241)
				yynn2241 = 0
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2243 := z.EncBinary()
				_ = yym2243
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Type"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2244 := z.EncBinary()
				_ = yym2244
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Type))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2246 := z.EncBinary()
				_ = yym2246
				if false {
				} else {
					r.EncodeInt(int64(x.Time))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Time"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2247 := z.EncBinary()
				_ = yym2247
				if false {
				} else {
					r.EncodeInt(int64(x.Time))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2249 := z.EncBinary()
				_ = yym2249
				if false {
				} else {
					r.EncodeBool(bool(x.FailsTask))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("FailsTask"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2250 := z.EncBinary()
				_ = yym2250
				if false {
				} else {
					r.EncodeBool(bool(x.FailsTask))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2252 := z.EncBinary()
				_ = yym2252
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.SetupError))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("SetupError"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2253 := z.EncBinary()
				_ = yym2253
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.SetupError))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2255 := z.EncBinary()
				_ = yym2255
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.RestartReason))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("RestartReason"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2256 := z.EncBinary()
				_ = yym2256
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.RestartReason))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2258 := z.EncBinary()
				_ = yym2258
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.DriverError))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("DriverError"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2259 := z.EncBinary()
				_ = yym2259
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.DriverError))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2261 := z.EncBinary()
				_ = yym2261
				if false {
				} else {
					r.EncodeInt(int64(x.ExitCode))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ExitCode"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2262 := z.EncBinary()
				_ = yym2262
				if false {
				} else {
					r.EncodeInt(int64(x.ExitCode))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2264 := z.EncBinary()
				_ = yym2264
				if false {
				} else {
					r.EncodeInt(int64(x.Signal))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Signal"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2265 := z.EncBinary()
				_ = yym2265
				if false {
				} else {
					r.EncodeInt(int64(x.Signal))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2267 := z.EncBinary()
				_ = yym2267
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Message))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Message"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2268 := z.EncBinary()
				_ = yym2268
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Message))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2270 := z.EncBinary()
				_ = yym2270
				if false {
				} else if z.HasExtensions() && z.EncExt(x.KillTimeout) {
				} else {
					r.EncodeInt(int64(x.KillTimeout))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KillTimeout"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2271 := z.EncBinary()
				_ = yym2271
				if false {
				} else if z.HasExtensions() && z.EncExt(x.KillTimeout) {
				} else {
					r.EncodeInt(int64(x.KillTimeout))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2273 := z.EncBinary()
				_ = yym2273
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.KillError))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KillError"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2274 := z.EncBinary()
				_ = yym2274
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.KillError))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2276 := z.EncBinary()
				_ = yym2276
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.KillReason))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("KillReason"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2277 := z.EncBinary()
				_ = yym2277
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.KillReason))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2279 := z.EncBinary()
				_ = yym2279
				if false {
				} else {
					r.EncodeInt(int64(x.StartDelay))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("StartDelay"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2280 := z.EncBinary()
				_ = yym2280
				if false {
				} else {
					r.EncodeInt(int64(x.StartDelay))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2282 := z.EncBinary()
				_ = yym2282
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ValidationError))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ValidationError"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2283 := z.EncBinary()
				_ = yym2283
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ValidationError))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2285 := z.EncBinary()
				_ = yym2285
				if false {
				} else {
					r.EncodeInt(int64(x.DiskLimit))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("DiskLimit"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2286 := z.EncBinary()
				_ = yym2286
				if false {
				} else {
					r.EncodeInt(int64(x.DiskLimit))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2288 := z.EncBinary()
				_ = yym2288
				if false {
				} else {
					r.EncodeInt(int64(x.DiskSize))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("DiskSize"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2289 := z.EncBinary()
				_ = yym2289
				if false {
				} else {
					r.EncodeInt(int64(x.DiskSize))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2291 := z.EncBinary()
				_ = yym2291
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.FailedSibling))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("FailedSibling"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2292 := z.EncBinary()
				_ = yym2292
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.FailedSibling))
				}
			}
			if yyr2241 || yy2arr2241 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *TaskEvent) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2293 := z.DecBinary()
	_ = yym2293
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2294 := r.ContainerType()
		if yyct2294 == codecSelferValueTypeMap4362 {
			yyl2294 := r.ReadMapStart()
			if yyl2294 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2294, d)
			}
		} else if yyct2294 == codecSelferValueTypeArray4362 {
			yyl2294 := r.ReadArrayStart()
			if yyl2294 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2294, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *TaskEvent) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2295Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2295Slc
	var yyhl2295 bool = l >= 0
	for yyj2295 := 0; ; yyj2295++ {
		if yyhl2295 {
			if yyj2295 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2295Slc = r.DecodeBytes(yys2295Slc, true, true)
		yys2295 := string(yys2295Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2295 {
		case "Type":
			if r.TryDecodeAsNil() {
				x.Type = ""
			} else {
				x.Type = string(r.DecodeString())
			}
		case "Time":
			if r.TryDecodeAsNil() {
				x.Time = 0
			} else {
				x.Time = int64(r.DecodeInt(64))
			}
		case "FailsTask":
			if r.TryDecodeAsNil() {
				x.FailsTask = false
			} else {
				x.FailsTask = bool(r.DecodeBool())
			}
		case "SetupError":
			if r.TryDecodeAsNil() {
				x.SetupError = ""
			} else {
				x.SetupError = string(r.DecodeString())
			}
		case "RestartReason":
			if r.TryDecodeAsNil() {
				x.RestartReason = ""
			} else {
				x.RestartReason = string(r.DecodeString())
			}
		case "DriverError":
			if r.TryDecodeAsNil() {
				x.DriverError = ""
			} else {
				x.DriverError = string(r.DecodeString())
			}
		case "ExitCode":
			if r.TryDecodeAsNil() {
				x.ExitCode = 0
			} else {
				x.ExitCode = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "Signal":
			if r.TryDecodeAsNil() {
				x.Signal = 0
			} else {
				x.Signal = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "Message":
			if r.TryDecodeAsNil() {
				x.Message = ""
			} else {
				x.Message = string(r.DecodeString())
			}
		case "KillTimeout":
			if r.TryDecodeAsNil() {
				x.KillTimeout = 0
			} else {
				x.KillTimeout = time.Duration(r.DecodeInt(64))
			}
		case "KillError":
			if r.TryDecodeAsNil() {
				x.KillError = ""
			} else {
				x.KillError = string(r.DecodeString())
			}
		case "KillReason":
			if r.TryDecodeAsNil() {
				x.KillReason = ""
			} else {
				x.KillReason = string(r.DecodeString())
			}
		case "StartDelay":
			if r.TryDecodeAsNil() {
				x.StartDelay = 0
			} else {
				x.StartDelay = int64(r.DecodeInt(64))
			}
		case "ValidationError":
			if r.TryDecodeAsNil() {
				x.ValidationError = ""
			} else {
				x.ValidationError = string(r.DecodeString())
			}
		case "DiskLimit":
			if r.TryDecodeAsNil() {
				x.DiskLimit = 0
			} else {
				x.DiskLimit = int64(r.DecodeInt(64))
			}
		case "DiskSize":
			if r.TryDecodeAsNil() {
				x.DiskSize = 0
			} else {
				x.DiskSize = int64(r.DecodeInt(64))
			}
		case "FailedSibling":
			if r.TryDecodeAsNil() {
				x.FailedSibling = ""
			} else {
				x.FailedSibling = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys2295)
		} // end switch yys2295
	} // end for yyj2295
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *TaskEvent) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2313 int
	var yyb2313 bool
	var yyhl2313 bool = l >= 0
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Type = ""
	} else {
		x.Type = string(r.DecodeString())
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Time = 0
	} else {
		x.Time = int64(r.DecodeInt(64))
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.FailsTask = false
	} else {
		x.FailsTask = bool(r.DecodeBool())
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.SetupError = ""
	} else {
		x.SetupError = string(r.DecodeString())
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.RestartReason = ""
	} else {
		x.RestartReason = string(r.DecodeString())
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.DriverError = ""
	} else {
		x.DriverError = string(r.DecodeString())
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ExitCode = 0
	} else {
		x.ExitCode = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Signal = 0
	} else {
		x.Signal = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Message = ""
	} else {
		x.Message = string(r.DecodeString())
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KillTimeout = 0
	} else {
		x.KillTimeout = time.Duration(r.DecodeInt(64))
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KillError = ""
	} else {
		x.KillError = string(r.DecodeString())
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.KillReason = ""
	} else {
		x.KillReason = string(r.DecodeString())
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.StartDelay = 0
	} else {
		x.StartDelay = int64(r.DecodeInt(64))
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ValidationError = ""
	} else {
		x.ValidationError = string(r.DecodeString())
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.DiskLimit = 0
	} else {
		x.DiskLimit = int64(r.DecodeInt(64))
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.DiskSize = 0
	} else {
		x.DiskSize = int64(r.DecodeInt(64))
	}
	yyj2313++
	if yyhl2313 {
		yyb2313 = yyj2313 > l
	} else {
		yyb2313 = r.CheckBreak()
	}
	if yyb2313 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.FailedSibling = ""
	} else {
		x.FailedSibling = string(r.DecodeString())
	}
	for {
		yyj2313++
		if yyhl2313 {
			yyb2313 = yyj2313 > l
		} else {
			yyb2313 = r.CheckBreak()
		}
		if yyb2313 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2313-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *TaskArtifact) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2331 := z.EncBinary()
		_ = yym2331
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2332 := !z.EncBinary()
			yy2arr2332 := z.EncBasicHandle().StructToArray
			var yyq2332 [3]bool
			_, _, _ = yysep2332, yyq2332, yy2arr2332
			const yyr2332 bool = false
			var yynn2332 int
			if yyr2332 || yy2arr2332 {
				r.EncodeArrayStart(3)
			} else {
				yynn2332 = 3
				for _, b := range yyq2332 {
					if b {
						yynn2332++
					}
				}
				r.EncodeMapStart(yynn2332)
				yynn2332 = 0
			}
			if yyr2332 || yy2arr2332 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2334 := z.EncBinary()
				_ = yym2334
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.GetterSource))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("GetterSource"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2335 := z.EncBinary()
				_ = yym2335
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.GetterSource))
				}
			}
			if yyr2332 || yy2arr2332 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.GetterOptions == nil {
					r.EncodeNil()
				} else {
					yym2337 := z.EncBinary()
					_ = yym2337
					if false {
					} else {
						z.F.EncMapStringStringV(x.GetterOptions, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("GetterOptions"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.GetterOptions == nil {
					r.EncodeNil()
				} else {
					yym2338 := z.EncBinary()
					_ = yym2338
					if false {
					} else {
						z.F.EncMapStringStringV(x.GetterOptions, false, e)
					}
				}
			}
			if yyr2332 || yy2arr2332 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2340 := z.EncBinary()
				_ = yym2340
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.RelativeDest))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("RelativeDest"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2341 := z.EncBinary()
				_ = yym2341
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.RelativeDest))
				}
			}
			if yyr2332 || yy2arr2332 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *TaskArtifact) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2342 := z.DecBinary()
	_ = yym2342
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2343 := r.ContainerType()
		if yyct2343 == codecSelferValueTypeMap4362 {
			yyl2343 := r.ReadMapStart()
			if yyl2343 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2343, d)
			}
		} else if yyct2343 == codecSelferValueTypeArray4362 {
			yyl2343 := r.ReadArrayStart()
			if yyl2343 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2343, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *TaskArtifact) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2344Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2344Slc
	var yyhl2344 bool = l >= 0
	for yyj2344 := 0; ; yyj2344++ {
		if yyhl2344 {
			if yyj2344 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2344Slc = r.DecodeBytes(yys2344Slc, true, true)
		yys2344 := string(yys2344Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2344 {
		case "GetterSource":
			if r.TryDecodeAsNil() {
				x.GetterSource = ""
			} else {
				x.GetterSource = string(r.DecodeString())
			}
		case "GetterOptions":
			if r.TryDecodeAsNil() {
				x.GetterOptions = nil
			} else {
				yyv2346 := &x.GetterOptions
				yym2347 := z.DecBinary()
				_ = yym2347
				if false {
				} else {
					z.F.DecMapStringStringX(yyv2346, false, d)
				}
			}
		case "RelativeDest":
			if r.TryDecodeAsNil() {
				x.RelativeDest = ""
			} else {
				x.RelativeDest = string(r.DecodeString())
			}
		default:
			z.DecStructFieldNotFound(-1, yys2344)
		} // end switch yys2344
	} // end for yyj2344
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *TaskArtifact) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2349 int
	var yyb2349 bool
	var yyhl2349 bool = l >= 0
	yyj2349++
	if yyhl2349 {
		yyb2349 = yyj2349 > l
	} else {
		yyb2349 = r.CheckBreak()
	}
	if yyb2349 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.GetterSource = ""
	} else {
		x.GetterSource = string(r.DecodeString())
	}
	yyj2349++
	if yyhl2349 {
		yyb2349 = yyj2349 > l
	} else {
		yyb2349 = r.CheckBreak()
	}
	if yyb2349 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.GetterOptions = nil
	} else {
		yyv2351 := &x.GetterOptions
		yym2352 := z.DecBinary()
		_ = yym2352
		if false {
		} else {
			z.F.DecMapStringStringX(yyv2351, false, d)
		}
	}
	yyj2349++
	if yyhl2349 {
		yyb2349 = yyj2349 > l
	} else {
		yyb2349 = r.CheckBreak()
	}
	if yyb2349 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.RelativeDest = ""
	} else {
		x.RelativeDest = string(r.DecodeString())
	}
	for {
		yyj2349++
		if yyhl2349 {
			yyb2349 = yyj2349 > l
		} else {
			yyb2349 = r.CheckBreak()
		}
		if yyb2349 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2349-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *EphemeralDisk) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2354 := z.EncBinary()
		_ = yym2354
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2355 := !z.EncBinary()
			yy2arr2355 := z.EncBasicHandle().StructToArray
			var yyq2355 [2]bool
			_, _, _ = yysep2355, yyq2355, yy2arr2355
			const yyr2355 bool = false
			var yynn2355 int
			if yyr2355 || yy2arr2355 {
				r.EncodeArrayStart(2)
			} else {
				yynn2355 = 2
				for _, b := range yyq2355 {
					if b {
						yynn2355++
					}
				}
				r.EncodeMapStart(yynn2355)
				yynn2355 = 0
			}
			if yyr2355 || yy2arr2355 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2357 := z.EncBinary()
				_ = yym2357
				if false {
				} else {
					r.EncodeBool(bool(x.Sticky))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Sticky"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2358 := z.EncBinary()
				_ = yym2358
				if false {
				} else {
					r.EncodeBool(bool(x.Sticky))
				}
			}
			if yyr2355 || yy2arr2355 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2360 := z.EncBinary()
				_ = yym2360
				if false {
				} else {
					r.EncodeInt(int64(x.SizeMB))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("SizeMB"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2361 := z.EncBinary()
				_ = yym2361
				if false {
				} else {
					r.EncodeInt(int64(x.SizeMB))
				}
			}
			if yyr2355 || yy2arr2355 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *EphemeralDisk) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2362 := z.DecBinary()
	_ = yym2362
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2363 := r.ContainerType()
		if yyct2363 == codecSelferValueTypeMap4362 {
			yyl2363 := r.ReadMapStart()
			if yyl2363 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2363, d)
			}
		} else if yyct2363 == codecSelferValueTypeArray4362 {
			yyl2363 := r.ReadArrayStart()
			if yyl2363 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2363, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *EphemeralDisk) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2364Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2364Slc
	var yyhl2364 bool = l >= 0
	for yyj2364 := 0; ; yyj2364++ {
		if yyhl2364 {
			if yyj2364 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2364Slc = r.DecodeBytes(yys2364Slc, true, true)
		yys2364 := string(yys2364Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2364 {
		case "Sticky":
			if r.TryDecodeAsNil() {
				x.Sticky = false
			} else {
				x.Sticky = bool(r.DecodeBool())
			}
		case "SizeMB":
			if r.TryDecodeAsNil() {
				x.SizeMB = 0
			} else {
				x.SizeMB = int(r.DecodeInt(codecSelferBitsize4362))
			}
		default:
			z.DecStructFieldNotFound(-1, yys2364)
		} // end switch yys2364
	} // end for yyj2364
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *EphemeralDisk) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2367 int
	var yyb2367 bool
	var yyhl2367 bool = l >= 0
	yyj2367++
	if yyhl2367 {
		yyb2367 = yyj2367 > l
	} else {
		yyb2367 = r.CheckBreak()
	}
	if yyb2367 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Sticky = false
	} else {
		x.Sticky = bool(r.DecodeBool())
	}
	yyj2367++
	if yyhl2367 {
		yyb2367 = yyj2367 > l
	} else {
		yyb2367 = r.CheckBreak()
	}
	if yyb2367 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.SizeMB = 0
	} else {
		x.SizeMB = int(r.DecodeInt(codecSelferBitsize4362))
	}
	for {
		yyj2367++
		if yyhl2367 {
			yyb2367 = yyj2367 > l
		} else {
			yyb2367 = r.CheckBreak()
		}
		if yyb2367 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2367-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *Allocation) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2370 := z.EncBinary()
		_ = yym2370
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2371 := !z.EncBinary()
			yy2arr2371 := z.EncBasicHandle().StructToArray
			var yyq2371 [21]bool
			_, _, _ = yysep2371, yyq2371, yy2arr2371
			const yyr2371 bool = false
			var yynn2371 int
			if yyr2371 || yy2arr2371 {
				r.EncodeArrayStart(21)
			} else {
				yynn2371 = 21
				for _, b := range yyq2371 {
					if b {
						yynn2371++
					}
				}
				r.EncodeMapStart(yynn2371)
				yynn2371 = 0
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2373 := z.EncBinary()
				_ = yym2373
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2374 := z.EncBinary()
				_ = yym2374
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2376 := z.EncBinary()
				_ = yym2376
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2377 := z.EncBinary()
				_ = yym2377
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2379 := z.EncBinary()
				_ = yym2379
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Name"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2380 := z.EncBinary()
				_ = yym2380
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2382 := z.EncBinary()
				_ = yym2382
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2383 := z.EncBinary()
				_ = yym2383
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2385 := z.EncBinary()
				_ = yym2385
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2386 := z.EncBinary()
				_ = yym2386
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Job == nil {
					r.EncodeNil()
				} else {
					x.Job.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Job"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Job == nil {
					r.EncodeNil()
				} else {
					x.Job.CodecEncodeSelf(e)
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2389 := z.EncBinary()
				_ = yym2389
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.TaskGroup))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("TaskGroup"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2390 := z.EncBinary()
				_ = yym2390
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.TaskGroup))
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Resources == nil {
					r.EncodeNil()
				} else {
					x.Resources.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Resources"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Resources == nil {
					r.EncodeNil()
				} else {
					x.Resources.CodecEncodeSelf(e)
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.SharedResources == nil {
					r.EncodeNil()
				} else {
					x.SharedResources.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("SharedResources"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.SharedResources == nil {
					r.EncodeNil()
				} else {
					x.SharedResources.CodecEncodeSelf(e)
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.TaskResources == nil {
					r.EncodeNil()
				} else {
					yym2394 := z.EncBinary()
					_ = yym2394
					if false {
					} else {
						h.encMapstringPtrtoResources((map[string]*Resources)(x.TaskResources), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("TaskResources"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.TaskResources == nil {
					r.EncodeNil()
				} else {
					yym2395 := z.EncBinary()
					_ = yym2395
					if false {
					} else {
						h.encMapstringPtrtoResources((map[string]*Resources)(x.TaskResources), e)
					}
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Metrics == nil {
					r.EncodeNil()
				} else {
					x.Metrics.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Metrics"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Metrics == nil {
					r.EncodeNil()
				} else {
					x.Metrics.CodecEncodeSelf(e)
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2398 := z.EncBinary()
				_ = yym2398
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.DesiredStatus))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("DesiredStatus"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2399 := z.EncBinary()
				_ = yym2399
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.DesiredStatus))
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2401 := z.EncBinary()
				_ = yym2401
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.DesiredDescription))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("DesiredDescription"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2402 := z.EncBinary()
				_ = yym2402
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.DesiredDescription))
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2404 := z.EncBinary()
				_ = yym2404
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ClientStatus))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ClientStatus"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2405 := z.EncBinary()
				_ = yym2405
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ClientStatus))
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2407 := z.EncBinary()
				_ = yym2407
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ClientDescription))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ClientDescription"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2408 := z.EncBinary()
				_ = yym2408
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ClientDescription))
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.TaskStates == nil {
					r.EncodeNil()
				} else {
					yym2410 := z.EncBinary()
					_ = yym2410
					if false {
					} else {
						h.encMapstringPtrtoTaskState((map[string]*TaskState)(x.TaskStates), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("TaskStates"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.TaskStates == nil {
					r.EncodeNil()
				} else {
					yym2411 := z.EncBinary()
					_ = yym2411
					if false {
					} else {
						h.encMapstringPtrtoTaskState((map[string]*TaskState)(x.TaskStates), e)
					}
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2413 := z.EncBinary()
				_ = yym2413
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.PreviousAllocation))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("PreviousAllocation"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2414 := z.EncBinary()
				_ = yym2414
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.PreviousAllocation))
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2416 := z.EncBinary()
				_ = yym2416
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("CreateIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2417 := z.EncBinary()
				_ = yym2417
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2419 := z.EncBinary()
				_ = yym2419
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2420 := z.EncBinary()
				_ = yym2420
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2422 := z.EncBinary()
				_ = yym2422
				if false {
				} else {
					r.EncodeUint(uint64(x.AllocModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllocModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2423 := z.EncBinary()
				_ = yym2423
				if false {
				} else {
					r.EncodeUint(uint64(x.AllocModifyIndex))
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2425 := z.EncBinary()
				_ = yym2425
				if false {
				} else {
					r.EncodeInt(int64(x.CreateTime))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("CreateTime"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2426 := z.EncBinary()
				_ = yym2426
				if false {
				} else {
					r.EncodeInt(int64(x.CreateTime))
				}
			}
			if yyr2371 || yy2arr2371 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *Allocation) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2427 := z.DecBinary()
	_ = yym2427
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2428 := r.ContainerType()
		if yyct2428 == codecSelferValueTypeMap4362 {
			yyl2428 := r.ReadMapStart()
			if yyl2428 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2428, d)
			}
		} else if yyct2428 == codecSelferValueTypeArray4362 {
			yyl2428 := r.ReadArrayStart()
			if yyl2428 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2428, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *Allocation) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2429Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2429Slc
	var yyhl2429 bool = l >= 0
	for yyj2429 := 0; ; yyj2429++ {
		if yyhl2429 {
			if yyj2429 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2429Slc = r.DecodeBytes(yys2429Slc, true, true)
		yys2429 := string(yys2429Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2429 {
		case "ID":
			if r.TryDecodeAsNil() {
				x.ID = ""
			} else {
				x.ID = string(r.DecodeString())
			}
		case "EvalID":
			if r.TryDecodeAsNil() {
				x.EvalID = ""
			} else {
				x.EvalID = string(r.DecodeString())
			}
		case "Name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "NodeID":
			if r.TryDecodeAsNil() {
				x.NodeID = ""
			} else {
				x.NodeID = string(r.DecodeString())
			}
		case "JobID":
			if r.TryDecodeAsNil() {
				x.JobID = ""
			} else {
				x.JobID = string(r.DecodeString())
			}
		case "Job":
			if r.TryDecodeAsNil() {
				if x.Job != nil {
					x.Job = nil
				}
			} else {
				if x.Job == nil {
					x.Job = new(Job)
				}
				x.Job.CodecDecodeSelf(d)
			}
		case "TaskGroup":
			if r.TryDecodeAsNil() {
				x.TaskGroup = ""
			} else {
				x.TaskGroup = string(r.DecodeString())
			}
		case "Resources":
			if r.TryDecodeAsNil() {
				if x.Resources != nil {
					x.Resources = nil
				}
			} else {
				if x.Resources == nil {
					x.Resources = new(Resources)
				}
				x.Resources.CodecDecodeSelf(d)
			}
		case "SharedResources":
			if r.TryDecodeAsNil() {
				if x.SharedResources != nil {
					x.SharedResources = nil
				}
			} else {
				if x.SharedResources == nil {
					x.SharedResources = new(Resources)
				}
				x.SharedResources.CodecDecodeSelf(d)
			}
		case "TaskResources":
			if r.TryDecodeAsNil() {
				x.TaskResources = nil
			} else {
				yyv2439 := &x.TaskResources
				yym2440 := z.DecBinary()
				_ = yym2440
				if false {
				} else {
					h.decMapstringPtrtoResources((*map[string]*Resources)(yyv2439), d)
				}
			}
		case "Metrics":
			if r.TryDecodeAsNil() {
				if x.Metrics != nil {
					x.Metrics = nil
				}
			} else {
				if x.Metrics == nil {
					x.Metrics = new(AllocMetric)
				}
				x.Metrics.CodecDecodeSelf(d)
			}
		case "DesiredStatus":
			if r.TryDecodeAsNil() {
				x.DesiredStatus = ""
			} else {
				x.DesiredStatus = string(r.DecodeString())
			}
		case "DesiredDescription":
			if r.TryDecodeAsNil() {
				x.DesiredDescription = ""
			} else {
				x.DesiredDescription = string(r.DecodeString())
			}
		case "ClientStatus":
			if r.TryDecodeAsNil() {
				x.ClientStatus = ""
			} else {
				x.ClientStatus = string(r.DecodeString())
			}
		case "ClientDescription":
			if r.TryDecodeAsNil() {
				x.ClientDescription = ""
			} else {
				x.ClientDescription = string(r.DecodeString())
			}
		case "TaskStates":
			if r.TryDecodeAsNil() {
				x.TaskStates = nil
			} else {
				yyv2446 := &x.TaskStates
				yym2447 := z.DecBinary()
				_ = yym2447
				if false {
				} else {
					h.decMapstringPtrtoTaskState((*map[string]*TaskState)(yyv2446), d)
				}
			}
		case "PreviousAllocation":
			if r.TryDecodeAsNil() {
				x.PreviousAllocation = ""
			} else {
				x.PreviousAllocation = string(r.DecodeString())
			}
		case "CreateIndex":
			if r.TryDecodeAsNil() {
				x.CreateIndex = 0
			} else {
				x.CreateIndex = uint64(r.DecodeUint(64))
			}
		case "ModifyIndex":
			if r.TryDecodeAsNil() {
				x.ModifyIndex = 0
			} else {
				x.ModifyIndex = uint64(r.DecodeUint(64))
			}
		case "AllocModifyIndex":
			if r.TryDecodeAsNil() {
				x.AllocModifyIndex = 0
			} else {
				x.AllocModifyIndex = uint64(r.DecodeUint(64))
			}
		case "CreateTime":
			if r.TryDecodeAsNil() {
				x.CreateTime = 0
			} else {
				x.CreateTime = int64(r.DecodeInt(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys2429)
		} // end switch yys2429
	} // end for yyj2429
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *Allocation) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2453 int
	var yyb2453 bool
	var yyhl2453 bool = l >= 0
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ID = ""
	} else {
		x.ID = string(r.DecodeString())
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalID = ""
	} else {
		x.EvalID = string(r.DecodeString())
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeID = ""
	} else {
		x.NodeID = string(r.DecodeString())
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobID = ""
	} else {
		x.JobID = string(r.DecodeString())
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Job != nil {
			x.Job = nil
		}
	} else {
		if x.Job == nil {
			x.Job = new(Job)
		}
		x.Job.CodecDecodeSelf(d)
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.TaskGroup = ""
	} else {
		x.TaskGroup = string(r.DecodeString())
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Resources != nil {
			x.Resources = nil
		}
	} else {
		if x.Resources == nil {
			x.Resources = new(Resources)
		}
		x.Resources.CodecDecodeSelf(d)
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.SharedResources != nil {
			x.SharedResources = nil
		}
	} else {
		if x.SharedResources == nil {
			x.SharedResources = new(Resources)
		}
		x.SharedResources.CodecDecodeSelf(d)
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.TaskResources = nil
	} else {
		yyv2463 := &x.TaskResources
		yym2464 := z.DecBinary()
		_ = yym2464
		if false {
		} else {
			h.decMapstringPtrtoResources((*map[string]*Resources)(yyv2463), d)
		}
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Metrics != nil {
			x.Metrics = nil
		}
	} else {
		if x.Metrics == nil {
			x.Metrics = new(AllocMetric)
		}
		x.Metrics.CodecDecodeSelf(d)
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.DesiredStatus = ""
	} else {
		x.DesiredStatus = string(r.DecodeString())
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.DesiredDescription = ""
	} else {
		x.DesiredDescription = string(r.DecodeString())
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ClientStatus = ""
	} else {
		x.ClientStatus = string(r.DecodeString())
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ClientDescription = ""
	} else {
		x.ClientDescription = string(r.DecodeString())
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.TaskStates = nil
	} else {
		yyv2470 := &x.TaskStates
		yym2471 := z.DecBinary()
		_ = yym2471
		if false {
		} else {
			h.decMapstringPtrtoTaskState((*map[string]*TaskState)(yyv2470), d)
		}
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.PreviousAllocation = ""
	} else {
		x.PreviousAllocation = string(r.DecodeString())
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.CreateIndex = 0
	} else {
		x.CreateIndex = uint64(r.DecodeUint(64))
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ModifyIndex = 0
	} else {
		x.ModifyIndex = uint64(r.DecodeUint(64))
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllocModifyIndex = 0
	} else {
		x.AllocModifyIndex = uint64(r.DecodeUint(64))
	}
	yyj2453++
	if yyhl2453 {
		yyb2453 = yyj2453 > l
	} else {
		yyb2453 = r.CheckBreak()
	}
	if yyb2453 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.CreateTime = 0
	} else {
		x.CreateTime = int64(r.DecodeInt(64))
	}
	for {
		yyj2453++
		if yyhl2453 {
			yyb2453 = yyj2453 > l
		} else {
			yyb2453 = r.CheckBreak()
		}
		if yyb2453 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2453-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *AllocListStub) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2477 := z.EncBinary()
		_ = yym2477
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2478 := !z.EncBinary()
			yy2arr2478 := z.EncBasicHandle().StructToArray
			var yyq2478 [14]bool
			_, _, _ = yysep2478, yyq2478, yy2arr2478
			const yyr2478 bool = false
			var yynn2478 int
			if yyr2478 || yy2arr2478 {
				r.EncodeArrayStart(14)
			} else {
				yynn2478 = 14
				for _, b := range yyq2478 {
					if b {
						yynn2478++
					}
				}
				r.EncodeMapStart(yynn2478)
				yynn2478 = 0
			}
			if yyr2478 || yy2arr2478 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2480 := z.EncBinary()
				_ = yym2480
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2481 := z.EncBinary()
				_ = yym2481
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			}
			if yyr2478 || yy2arr2478 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2483 := z.EncBinary()
				_ = yym2483
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2484 := z.EncBinary()
				_ = yym2484
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			}
			if yyr2478 || yy2arr2478 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2486 := z.EncBinary()
				_ = yym2486
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Name"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2487 := z.EncBinary()
				_ = yym2487
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Name))
				}
			}
			if yyr2478 || yy2arr2478 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2489 := z.EncBinary()
				_ = yym2489
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2490 := z.EncBinary()
				_ = yym2490
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			}
			if yyr2478 || yy2arr2478 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2492 := z.EncBinary()
				_ = yym2492
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2493 := z.EncBinary()
				_ = yym2493
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			}
			if yyr2478 || yy2arr2478 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2495 := z.EncBinary()
				_ = yym2495
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.TaskGroup))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("TaskGroup"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2496 := z.EncBinary()
				_ = yym2496
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.TaskGroup))
				}
			}
			if yyr2478 || yy2arr2478 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2498 := z.EncBinary()
				_ = yym2498
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.DesiredStatus))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("DesiredStatus"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2499 := z.EncBinary()
				_ = yym2499
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.DesiredStatus))
				}
			}
			if yyr2478 || yy2arr2478 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2501 := z.EncBinary()
				_ = yym2501
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.DesiredDescription))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("DesiredDescription"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2502 := z.EncBinary()
				_ = yym2502
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.DesiredDescription))
				}
			}
			if yyr2478 || yy2arr2478 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2504 := z.EncBinary()
				_ = yym2504
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ClientStatus))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ClientStatus"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2505 := z.EncBinary()
				_ = yym2505
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ClientStatus))
				}
			}
			if yyr2478 || yy2arr2478 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2507 := z.EncBinary()
				_ = yym2507
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ClientDescription))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ClientDescription"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2508 := z.EncBinary()
				_ = yym2508
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ClientDescription))
				}
			}
			if yyr2478 || yy2arr2478 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.TaskStates == nil {
					r.EncodeNil()
				} else {
					yym2510 := z.EncBinary()
					_ = yym2510
					if false {
					} else {
						h.encMapstringPtrtoTaskState((map[string]*TaskState)(x.TaskStates), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("TaskStates"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.TaskStates == nil {
					r.EncodeNil()
				} else {
					yym2511 := z.EncBinary()
					_ = yym2511
					if false {
					} else {
						h.encMapstringPtrtoTaskState((map[string]*TaskState)(x.TaskStates), e)
					}
				}
			}
			if yyr2478 || yy2arr2478 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2513 := z.EncBinary()
				_ = yym2513
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("CreateIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2514 := z.EncBinary()
				_ = yym2514
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			}
			if yyr2478 || yy2arr2478 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2516 := z.EncBinary()
				_ = yym2516
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2517 := z.EncBinary()
				_ = yym2517
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			}
			if yyr2478 || yy2arr2478 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2519 := z.EncBinary()
				_ = yym2519
				if false {
				} else {
					r.EncodeInt(int64(x.CreateTime))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("CreateTime"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2520 := z.EncBinary()
				_ = yym2520
				if false {
				} else {
					r.EncodeInt(int64(x.CreateTime))
				}
			}
			if yyr2478 || yy2arr2478 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *AllocListStub) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2521 := z.DecBinary()
	_ = yym2521
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2522 := r.ContainerType()
		if yyct2522 == codecSelferValueTypeMap4362 {
			yyl2522 := r.ReadMapStart()
			if yyl2522 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2522, d)
			}
		} else if yyct2522 == codecSelferValueTypeArray4362 {
			yyl2522 := r.ReadArrayStart()
			if yyl2522 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2522, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *AllocListStub) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2523Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2523Slc
	var yyhl2523 bool = l >= 0
	for yyj2523 := 0; ; yyj2523++ {
		if yyhl2523 {
			if yyj2523 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2523Slc = r.DecodeBytes(yys2523Slc, true, true)
		yys2523 := string(yys2523Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2523 {
		case "ID":
			if r.TryDecodeAsNil() {
				x.ID = ""
			} else {
				x.ID = string(r.DecodeString())
			}
		case "EvalID":
			if r.TryDecodeAsNil() {
				x.EvalID = ""
			} else {
				x.EvalID = string(r.DecodeString())
			}
		case "Name":
			if r.TryDecodeAsNil() {
				x.Name = ""
			} else {
				x.Name = string(r.DecodeString())
			}
		case "NodeID":
			if r.TryDecodeAsNil() {
				x.NodeID = ""
			} else {
				x.NodeID = string(r.DecodeString())
			}
		case "JobID":
			if r.TryDecodeAsNil() {
				x.JobID = ""
			} else {
				x.JobID = string(r.DecodeString())
			}
		case "TaskGroup":
			if r.TryDecodeAsNil() {
				x.TaskGroup = ""
			} else {
				x.TaskGroup = string(r.DecodeString())
			}
		case "DesiredStatus":
			if r.TryDecodeAsNil() {
				x.DesiredStatus = ""
			} else {
				x.DesiredStatus = string(r.DecodeString())
			}
		case "DesiredDescription":
			if r.TryDecodeAsNil() {
				x.DesiredDescription = ""
			} else {
				x.DesiredDescription = string(r.DecodeString())
			}
		case "ClientStatus":
			if r.TryDecodeAsNil() {
				x.ClientStatus = ""
			} else {
				x.ClientStatus = string(r.DecodeString())
			}
		case "ClientDescription":
			if r.TryDecodeAsNil() {
				x.ClientDescription = ""
			} else {
				x.ClientDescription = string(r.DecodeString())
			}
		case "TaskStates":
			if r.TryDecodeAsNil() {
				x.TaskStates = nil
			} else {
				yyv2534 := &x.TaskStates
				yym2535 := z.DecBinary()
				_ = yym2535
				if false {
				} else {
					h.decMapstringPtrtoTaskState((*map[string]*TaskState)(yyv2534), d)
				}
			}
		case "CreateIndex":
			if r.TryDecodeAsNil() {
				x.CreateIndex = 0
			} else {
				x.CreateIndex = uint64(r.DecodeUint(64))
			}
		case "ModifyIndex":
			if r.TryDecodeAsNil() {
				x.ModifyIndex = 0
			} else {
				x.ModifyIndex = uint64(r.DecodeUint(64))
			}
		case "CreateTime":
			if r.TryDecodeAsNil() {
				x.CreateTime = 0
			} else {
				x.CreateTime = int64(r.DecodeInt(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys2523)
		} // end switch yys2523
	} // end for yyj2523
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *AllocListStub) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2539 int
	var yyb2539 bool
	var yyhl2539 bool = l >= 0
	yyj2539++
	if yyhl2539 {
		yyb2539 = yyj2539 > l
	} else {
		yyb2539 = r.CheckBreak()
	}
	if yyb2539 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ID = ""
	} else {
		x.ID = string(r.DecodeString())
	}
	yyj2539++
	if yyhl2539 {
		yyb2539 = yyj2539 > l
	} else {
		yyb2539 = r.CheckBreak()
	}
	if yyb2539 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalID = ""
	} else {
		x.EvalID = string(r.DecodeString())
	}
	yyj2539++
	if yyhl2539 {
		yyb2539 = yyj2539 > l
	} else {
		yyb2539 = r.CheckBreak()
	}
	if yyb2539 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Name = ""
	} else {
		x.Name = string(r.DecodeString())
	}
	yyj2539++
	if yyhl2539 {
		yyb2539 = yyj2539 > l
	} else {
		yyb2539 = r.CheckBreak()
	}
	if yyb2539 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeID = ""
	} else {
		x.NodeID = string(r.DecodeString())
	}
	yyj2539++
	if yyhl2539 {
		yyb2539 = yyj2539 > l
	} else {
		yyb2539 = r.CheckBreak()
	}
	if yyb2539 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobID = ""
	} else {
		x.JobID = string(r.DecodeString())
	}
	yyj2539++
	if yyhl2539 {
		yyb2539 = yyj2539 > l
	} else {
		yyb2539 = r.CheckBreak()
	}
	if yyb2539 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.TaskGroup = ""
	} else {
		x.TaskGroup = string(r.DecodeString())
	}
	yyj2539++
	if yyhl2539 {
		yyb2539 = yyj2539 > l
	} else {
		yyb2539 = r.CheckBreak()
	}
	if yyb2539 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.DesiredStatus = ""
	} else {
		x.DesiredStatus = string(r.DecodeString())
	}
	yyj2539++
	if yyhl2539 {
		yyb2539 = yyj2539 > l
	} else {
		yyb2539 = r.CheckBreak()
	}
	if yyb2539 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.DesiredDescription = ""
	} else {
		x.DesiredDescription = string(r.DecodeString())
	}
	yyj2539++
	if yyhl2539 {
		yyb2539 = yyj2539 > l
	} else {
		yyb2539 = r.CheckBreak()
	}
	if yyb2539 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ClientStatus = ""
	} else {
		x.ClientStatus = string(r.DecodeString())
	}
	yyj2539++
	if yyhl2539 {
		yyb2539 = yyj2539 > l
	} else {
		yyb2539 = r.CheckBreak()
	}
	if yyb2539 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ClientDescription = ""
	} else {
		x.ClientDescription = string(r.DecodeString())
	}
	yyj2539++
	if yyhl2539 {
		yyb2539 = yyj2539 > l
	} else {
		yyb2539 = r.CheckBreak()
	}
	if yyb2539 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.TaskStates = nil
	} else {
		yyv2550 := &x.TaskStates
		yym2551 := z.DecBinary()
		_ = yym2551
		if false {
		} else {
			h.decMapstringPtrtoTaskState((*map[string]*TaskState)(yyv2550), d)
		}
	}
	yyj2539++
	if yyhl2539 {
		yyb2539 = yyj2539 > l
	} else {
		yyb2539 = r.CheckBreak()
	}
	if yyb2539 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.CreateIndex = 0
	} else {
		x.CreateIndex = uint64(r.DecodeUint(64))
	}
	yyj2539++
	if yyhl2539 {
		yyb2539 = yyj2539 > l
	} else {
		yyb2539 = r.CheckBreak()
	}
	if yyb2539 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ModifyIndex = 0
	} else {
		x.ModifyIndex = uint64(r.DecodeUint(64))
	}
	yyj2539++
	if yyhl2539 {
		yyb2539 = yyj2539 > l
	} else {
		yyb2539 = r.CheckBreak()
	}
	if yyb2539 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.CreateTime = 0
	} else {
		x.CreateTime = int64(r.DecodeInt(64))
	}
	for {
		yyj2539++
		if yyhl2539 {
			yyb2539 = yyj2539 > l
		} else {
			yyb2539 = r.CheckBreak()
		}
		if yyb2539 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2539-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *AllocMetric) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2555 := z.EncBinary()
		_ = yym2555
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2556 := !z.EncBinary()
			yy2arr2556 := z.EncBasicHandle().StructToArray
			var yyq2556 [11]bool
			_, _, _ = yysep2556, yyq2556, yy2arr2556
			const yyr2556 bool = false
			var yynn2556 int
			if yyr2556 || yy2arr2556 {
				r.EncodeArrayStart(11)
			} else {
				yynn2556 = 11
				for _, b := range yyq2556 {
					if b {
						yynn2556++
					}
				}
				r.EncodeMapStart(yynn2556)
				yynn2556 = 0
			}
			if yyr2556 || yy2arr2556 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2558 := z.EncBinary()
				_ = yym2558
				if false {
				} else {
					r.EncodeInt(int64(x.NodesEvaluated))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodesEvaluated"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2559 := z.EncBinary()
				_ = yym2559
				if false {
				} else {
					r.EncodeInt(int64(x.NodesEvaluated))
				}
			}
			if yyr2556 || yy2arr2556 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2561 := z.EncBinary()
				_ = yym2561
				if false {
				} else {
					r.EncodeInt(int64(x.NodesFiltered))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodesFiltered"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2562 := z.EncBinary()
				_ = yym2562
				if false {
				} else {
					r.EncodeInt(int64(x.NodesFiltered))
				}
			}
			if yyr2556 || yy2arr2556 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.NodesAvailable == nil {
					r.EncodeNil()
				} else {
					yym2564 := z.EncBinary()
					_ = yym2564
					if false {
					} else {
						z.F.EncMapStringIntV(x.NodesAvailable, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodesAvailable"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.NodesAvailable == nil {
					r.EncodeNil()
				} else {
					yym2565 := z.EncBinary()
					_ = yym2565
					if false {
					} else {
						z.F.EncMapStringIntV(x.NodesAvailable, false, e)
					}
				}
			}
			if yyr2556 || yy2arr2556 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.ClassFiltered == nil {
					r.EncodeNil()
				} else {
					yym2567 := z.EncBinary()
					_ = yym2567
					if false {
					} else {
						z.F.EncMapStringIntV(x.ClassFiltered, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ClassFiltered"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.ClassFiltered == nil {
					r.EncodeNil()
				} else {
					yym2568 := z.EncBinary()
					_ = yym2568
					if false {
					} else {
						z.F.EncMapStringIntV(x.ClassFiltered, false, e)
					}
				}
			}
			if yyr2556 || yy2arr2556 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.ConstraintFiltered == nil {
					r.EncodeNil()
				} else {
					yym2570 := z.EncBinary()
					_ = yym2570
					if false {
					} else {
						z.F.EncMapStringIntV(x.ConstraintFiltered, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ConstraintFiltered"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.ConstraintFiltered == nil {
					r.EncodeNil()
				} else {
					yym2571 := z.EncBinary()
					_ = yym2571
					if false {
					} else {
						z.F.EncMapStringIntV(x.ConstraintFiltered, false, e)
					}
				}
			}
			if yyr2556 || yy2arr2556 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2573 := z.EncBinary()
				_ = yym2573
				if false {
				} else {
					r.EncodeInt(int64(x.NodesExhausted))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodesExhausted"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2574 := z.EncBinary()
				_ = yym2574
				if false {
				} else {
					r.EncodeInt(int64(x.NodesExhausted))
				}
			}
			if yyr2556 || yy2arr2556 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.ClassExhausted == nil {
					r.EncodeNil()
				} else {
					yym2576 := z.EncBinary()
					_ = yym2576
					if false {
					} else {
						z.F.EncMapStringIntV(x.ClassExhausted, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ClassExhausted"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.ClassExhausted == nil {
					r.EncodeNil()
				} else {
					yym2577 := z.EncBinary()
					_ = yym2577
					if false {
					} else {
						z.F.EncMapStringIntV(x.ClassExhausted, false, e)
					}
				}
			}
			if yyr2556 || yy2arr2556 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.DimensionExhausted == nil {
					r.EncodeNil()
				} else {
					yym2579 := z.EncBinary()
					_ = yym2579
					if false {
					} else {
						z.F.EncMapStringIntV(x.DimensionExhausted, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("DimensionExhausted"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.DimensionExhausted == nil {
					r.EncodeNil()
				} else {
					yym2580 := z.EncBinary()
					_ = yym2580
					if false {
					} else {
						z.F.EncMapStringIntV(x.DimensionExhausted, false, e)
					}
				}
			}
			if yyr2556 || yy2arr2556 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Scores == nil {
					r.EncodeNil()
				} else {
					yym2582 := z.EncBinary()
					_ = yym2582
					if false {
					} else {
						z.F.EncMapStringFloat64V(x.Scores, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Scores"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Scores == nil {
					r.EncodeNil()
				} else {
					yym2583 := z.EncBinary()
					_ = yym2583
					if false {
					} else {
						z.F.EncMapStringFloat64V(x.Scores, false, e)
					}
				}
			}
			if yyr2556 || yy2arr2556 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2585 := z.EncBinary()
				_ = yym2585
				if false {
				} else if z.HasExtensions() && z.EncExt(x.AllocationTime) {
				} else {
					r.EncodeInt(int64(x.AllocationTime))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllocationTime"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2586 := z.EncBinary()
				_ = yym2586
				if false {
				} else if z.HasExtensions() && z.EncExt(x.AllocationTime) {
				} else {
					r.EncodeInt(int64(x.AllocationTime))
				}
			}
			if yyr2556 || yy2arr2556 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2588 := z.EncBinary()
				_ = yym2588
				if false {
				} else {
					r.EncodeInt(int64(x.CoalescedFailures))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("CoalescedFailures"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2589 := z.EncBinary()
				_ = yym2589
				if false {
				} else {
					r.EncodeInt(int64(x.CoalescedFailures))
				}
			}
			if yyr2556 || yy2arr2556 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *AllocMetric) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2590 := z.DecBinary()
	_ = yym2590
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2591 := r.ContainerType()
		if yyct2591 == codecSelferValueTypeMap4362 {
			yyl2591 := r.ReadMapStart()
			if yyl2591 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2591, d)
			}
		} else if yyct2591 == codecSelferValueTypeArray4362 {
			yyl2591 := r.ReadArrayStart()
			if yyl2591 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2591, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *AllocMetric) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2592Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2592Slc
	var yyhl2592 bool = l >= 0
	for yyj2592 := 0; ; yyj2592++ {
		if yyhl2592 {
			if yyj2592 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2592Slc = r.DecodeBytes(yys2592Slc, true, true)
		yys2592 := string(yys2592Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2592 {
		case "NodesEvaluated":
			if r.TryDecodeAsNil() {
				x.NodesEvaluated = 0
			} else {
				x.NodesEvaluated = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "NodesFiltered":
			if r.TryDecodeAsNil() {
				x.NodesFiltered = 0
			} else {
				x.NodesFiltered = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "NodesAvailable":
			if r.TryDecodeAsNil() {
				x.NodesAvailable = nil
			} else {
				yyv2595 := &x.NodesAvailable
				yym2596 := z.DecBinary()
				_ = yym2596
				if false {
				} else {
					z.F.DecMapStringIntX(yyv2595, false, d)
				}
			}
		case "ClassFiltered":
			if r.TryDecodeAsNil() {
				x.ClassFiltered = nil
			} else {
				yyv2597 := &x.ClassFiltered
				yym2598 := z.DecBinary()
				_ = yym2598
				if false {
				} else {
					z.F.DecMapStringIntX(yyv2597, false, d)
				}
			}
		case "ConstraintFiltered":
			if r.TryDecodeAsNil() {
				x.ConstraintFiltered = nil
			} else {
				yyv2599 := &x.ConstraintFiltered
				yym2600 := z.DecBinary()
				_ = yym2600
				if false {
				} else {
					z.F.DecMapStringIntX(yyv2599, false, d)
				}
			}
		case "NodesExhausted":
			if r.TryDecodeAsNil() {
				x.NodesExhausted = 0
			} else {
				x.NodesExhausted = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "ClassExhausted":
			if r.TryDecodeAsNil() {
				x.ClassExhausted = nil
			} else {
				yyv2602 := &x.ClassExhausted
				yym2603 := z.DecBinary()
				_ = yym2603
				if false {
				} else {
					z.F.DecMapStringIntX(yyv2602, false, d)
				}
			}
		case "DimensionExhausted":
			if r.TryDecodeAsNil() {
				x.DimensionExhausted = nil
			} else {
				yyv2604 := &x.DimensionExhausted
				yym2605 := z.DecBinary()
				_ = yym2605
				if false {
				} else {
					z.F.DecMapStringIntX(yyv2604, false, d)
				}
			}
		case "Scores":
			if r.TryDecodeAsNil() {
				x.Scores = nil
			} else {
				yyv2606 := &x.Scores
				yym2607 := z.DecBinary()
				_ = yym2607
				if false {
				} else {
					z.F.DecMapStringFloat64X(yyv2606, false, d)
				}
			}
		case "AllocationTime":
			if r.TryDecodeAsNil() {
				x.AllocationTime = 0
			} else {
				x.AllocationTime = time.Duration(r.DecodeInt(64))
			}
		case "CoalescedFailures":
			if r.TryDecodeAsNil() {
				x.CoalescedFailures = 0
			} else {
				x.CoalescedFailures = int(r.DecodeInt(codecSelferBitsize4362))
			}
		default:
			z.DecStructFieldNotFound(-1, yys2592)
		} // end switch yys2592
	} // end for yyj2592
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *AllocMetric) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2610 int
	var yyb2610 bool
	var yyhl2610 bool = l >= 0
	yyj2610++
	if yyhl2610 {
		yyb2610 = yyj2610 > l
	} else {
		yyb2610 = r.CheckBreak()
	}
	if yyb2610 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodesEvaluated = 0
	} else {
		x.NodesEvaluated = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj2610++
	if yyhl2610 {
		yyb2610 = yyj2610 > l
	} else {
		yyb2610 = r.CheckBreak()
	}
	if yyb2610 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodesFiltered = 0
	} else {
		x.NodesFiltered = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj2610++
	if yyhl2610 {
		yyb2610 = yyj2610 > l
	} else {
		yyb2610 = r.CheckBreak()
	}
	if yyb2610 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodesAvailable = nil
	} else {
		yyv2613 := &x.NodesAvailable
		yym2614 := z.DecBinary()
		_ = yym2614
		if false {
		} else {
			z.F.DecMapStringIntX(yyv2613, false, d)
		}
	}
	yyj2610++
	if yyhl2610 {
		yyb2610 = yyj2610 > l
	} else {
		yyb2610 = r.CheckBreak()
	}
	if yyb2610 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ClassFiltered = nil
	} else {
		yyv2615 := &x.ClassFiltered
		yym2616 := z.DecBinary()
		_ = yym2616
		if false {
		} else {
			z.F.DecMapStringIntX(yyv2615, false, d)
		}
	}
	yyj2610++
	if yyhl2610 {
		yyb2610 = yyj2610 > l
	} else {
		yyb2610 = r.CheckBreak()
	}
	if yyb2610 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ConstraintFiltered = nil
	} else {
		yyv2617 := &x.ConstraintFiltered
		yym2618 := z.DecBinary()
		_ = yym2618
		if false {
		} else {
			z.F.DecMapStringIntX(yyv2617, false, d)
		}
	}
	yyj2610++
	if yyhl2610 {
		yyb2610 = yyj2610 > l
	} else {
		yyb2610 = r.CheckBreak()
	}
	if yyb2610 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodesExhausted = 0
	} else {
		x.NodesExhausted = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj2610++
	if yyhl2610 {
		yyb2610 = yyj2610 > l
	} else {
		yyb2610 = r.CheckBreak()
	}
	if yyb2610 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ClassExhausted = nil
	} else {
		yyv2620 := &x.ClassExhausted
		yym2621 := z.DecBinary()
		_ = yym2621
		if false {
		} else {
			z.F.DecMapStringIntX(yyv2620, false, d)
		}
	}
	yyj2610++
	if yyhl2610 {
		yyb2610 = yyj2610 > l
	} else {
		yyb2610 = r.CheckBreak()
	}
	if yyb2610 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.DimensionExhausted = nil
	} else {
		yyv2622 := &x.DimensionExhausted
		yym2623 := z.DecBinary()
		_ = yym2623
		if false {
		} else {
			z.F.DecMapStringIntX(yyv2622, false, d)
		}
	}
	yyj2610++
	if yyhl2610 {
		yyb2610 = yyj2610 > l
	} else {
		yyb2610 = r.CheckBreak()
	}
	if yyb2610 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Scores = nil
	} else {
		yyv2624 := &x.Scores
		yym2625 := z.DecBinary()
		_ = yym2625
		if false {
		} else {
			z.F.DecMapStringFloat64X(yyv2624, false, d)
		}
	}
	yyj2610++
	if yyhl2610 {
		yyb2610 = yyj2610 > l
	} else {
		yyb2610 = r.CheckBreak()
	}
	if yyb2610 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllocationTime = 0
	} else {
		x.AllocationTime = time.Duration(r.DecodeInt(64))
	}
	yyj2610++
	if yyhl2610 {
		yyb2610 = yyj2610 > l
	} else {
		yyb2610 = r.CheckBreak()
	}
	if yyb2610 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.CoalescedFailures = 0
	} else {
		x.CoalescedFailures = int(r.DecodeInt(codecSelferBitsize4362))
	}
	for {
		yyj2610++
		if yyhl2610 {
			yyb2610 = yyj2610 > l
		} else {
			yyb2610 = r.CheckBreak()
		}
		if yyb2610 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2610-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *Evaluation) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2628 := z.EncBinary()
		_ = yym2628
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2629 := !z.EncBinary()
			yy2arr2629 := z.EncBasicHandle().StructToArray
			var yyq2629 [22]bool
			_, _, _ = yysep2629, yyq2629, yy2arr2629
			const yyr2629 bool = false
			var yynn2629 int
			if yyr2629 || yy2arr2629 {
				r.EncodeArrayStart(22)
			} else {
				yynn2629 = 22
				for _, b := range yyq2629 {
					if b {
						yynn2629++
					}
				}
				r.EncodeMapStart(yynn2629)
				yynn2629 = 0
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2631 := z.EncBinary()
				_ = yym2631
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2632 := z.EncBinary()
				_ = yym2632
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.ID))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2634 := z.EncBinary()
				_ = yym2634
				if false {
				} else {
					r.EncodeInt(int64(x.Priority))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Priority"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2635 := z.EncBinary()
				_ = yym2635
				if false {
				} else {
					r.EncodeInt(int64(x.Priority))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2637 := z.EncBinary()
				_ = yym2637
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Type))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Type"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2638 := z.EncBinary()
				_ = yym2638
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Type))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2640 := z.EncBinary()
				_ = yym2640
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.TriggeredBy))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("TriggeredBy"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2641 := z.EncBinary()
				_ = yym2641
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.TriggeredBy))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2643 := z.EncBinary()
				_ = yym2643
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2644 := z.EncBinary()
				_ = yym2644
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.JobID))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2646 := z.EncBinary()
				_ = yym2646
				if false {
				} else {
					r.EncodeUint(uint64(x.JobModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("JobModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2647 := z.EncBinary()
				_ = yym2647
				if false {
				} else {
					r.EncodeUint(uint64(x.JobModifyIndex))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2649 := z.EncBinary()
				_ = yym2649
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2650 := z.EncBinary()
				_ = yym2650
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NodeID))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2652 := z.EncBinary()
				_ = yym2652
				if false {
				} else {
					r.EncodeUint(uint64(x.NodeModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2653 := z.EncBinary()
				_ = yym2653
				if false {
				} else {
					r.EncodeUint(uint64(x.NodeModifyIndex))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2655 := z.EncBinary()
				_ = yym2655
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Status))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Status"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2656 := z.EncBinary()
				_ = yym2656
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Status))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2658 := z.EncBinary()
				_ = yym2658
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.StatusDescription))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("StatusDescription"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2659 := z.EncBinary()
				_ = yym2659
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.StatusDescription))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2661 := z.EncBinary()
				_ = yym2661
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Wait) {
				} else {
					r.EncodeInt(int64(x.Wait))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Wait"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2662 := z.EncBinary()
				_ = yym2662
				if false {
				} else if z.HasExtensions() && z.EncExt(x.Wait) {
				} else {
					r.EncodeInt(int64(x.Wait))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2664 := z.EncBinary()
				_ = yym2664
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NextEval))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NextEval"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2665 := z.EncBinary()
				_ = yym2665
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.NextEval))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2667 := z.EncBinary()
				_ = yym2667
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.PreviousEval))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("PreviousEval"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2668 := z.EncBinary()
				_ = yym2668
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.PreviousEval))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2670 := z.EncBinary()
				_ = yym2670
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.BlockedEval))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("BlockedEval"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2671 := z.EncBinary()
				_ = yym2671
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.BlockedEval))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.FailedTGAllocs == nil {
					r.EncodeNil()
				} else {
					yym2673 := z.EncBinary()
					_ = yym2673
					if false {
					} else {
						h.encMapstringPtrtoAllocMetric((map[string]*AllocMetric)(x.FailedTGAllocs), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("FailedTGAllocs"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.FailedTGAllocs == nil {
					r.EncodeNil()
				} else {
					yym2674 := z.EncBinary()
					_ = yym2674
					if false {
					} else {
						h.encMapstringPtrtoAllocMetric((map[string]*AllocMetric)(x.FailedTGAllocs), e)
					}
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.ClassEligibility == nil {
					r.EncodeNil()
				} else {
					yym2676 := z.EncBinary()
					_ = yym2676
					if false {
					} else {
						z.F.EncMapStringBoolV(x.ClassEligibility, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ClassEligibility"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.ClassEligibility == nil {
					r.EncodeNil()
				} else {
					yym2677 := z.EncBinary()
					_ = yym2677
					if false {
					} else {
						z.F.EncMapStringBoolV(x.ClassEligibility, false, e)
					}
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2679 := z.EncBinary()
				_ = yym2679
				if false {
				} else {
					r.EncodeBool(bool(x.EscapedComputedClass))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EscapedComputedClass"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2680 := z.EncBinary()
				_ = yym2680
				if false {
				} else {
					r.EncodeBool(bool(x.EscapedComputedClass))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2682 := z.EncBinary()
				_ = yym2682
				if false {
				} else {
					r.EncodeBool(bool(x.AnnotatePlan))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AnnotatePlan"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2683 := z.EncBinary()
				_ = yym2683
				if false {
				} else {
					r.EncodeBool(bool(x.AnnotatePlan))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2685 := z.EncBinary()
				_ = yym2685
				if false {
				} else {
					r.EncodeUint(uint64(x.SnapshotIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("SnapshotIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2686 := z.EncBinary()
				_ = yym2686
				if false {
				} else {
					r.EncodeUint(uint64(x.SnapshotIndex))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.QueuedAllocations == nil {
					r.EncodeNil()
				} else {
					yym2688 := z.EncBinary()
					_ = yym2688
					if false {
					} else {
						z.F.EncMapStringIntV(x.QueuedAllocations, false, e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("QueuedAllocations"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.QueuedAllocations == nil {
					r.EncodeNil()
				} else {
					yym2689 := z.EncBinary()
					_ = yym2689
					if false {
					} else {
						z.F.EncMapStringIntV(x.QueuedAllocations, false, e)
					}
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2691 := z.EncBinary()
				_ = yym2691
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("CreateIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2692 := z.EncBinary()
				_ = yym2692
				if false {
				} else {
					r.EncodeUint(uint64(x.CreateIndex))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2694 := z.EncBinary()
				_ = yym2694
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("ModifyIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2695 := z.EncBinary()
				_ = yym2695
				if false {
				} else {
					r.EncodeUint(uint64(x.ModifyIndex))
				}
			}
			if yyr2629 || yy2arr2629 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *Evaluation) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2696 := z.DecBinary()
	_ = yym2696
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2697 := r.ContainerType()
		if yyct2697 == codecSelferValueTypeMap4362 {
			yyl2697 := r.ReadMapStart()
			if yyl2697 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2697, d)
			}
		} else if yyct2697 == codecSelferValueTypeArray4362 {
			yyl2697 := r.ReadArrayStart()
			if yyl2697 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2697, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *Evaluation) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2698Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2698Slc
	var yyhl2698 bool = l >= 0
	for yyj2698 := 0; ; yyj2698++ {
		if yyhl2698 {
			if yyj2698 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2698Slc = r.DecodeBytes(yys2698Slc, true, true)
		yys2698 := string(yys2698Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2698 {
		case "ID":
			if r.TryDecodeAsNil() {
				x.ID = ""
			} else {
				x.ID = string(r.DecodeString())
			}
		case "Priority":
			if r.TryDecodeAsNil() {
				x.Priority = 0
			} else {
				x.Priority = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "Type":
			if r.TryDecodeAsNil() {
				x.Type = ""
			} else {
				x.Type = string(r.DecodeString())
			}
		case "TriggeredBy":
			if r.TryDecodeAsNil() {
				x.TriggeredBy = ""
			} else {
				x.TriggeredBy = string(r.DecodeString())
			}
		case "JobID":
			if r.TryDecodeAsNil() {
				x.JobID = ""
			} else {
				x.JobID = string(r.DecodeString())
			}
		case "JobModifyIndex":
			if r.TryDecodeAsNil() {
				x.JobModifyIndex = 0
			} else {
				x.JobModifyIndex = uint64(r.DecodeUint(64))
			}
		case "NodeID":
			if r.TryDecodeAsNil() {
				x.NodeID = ""
			} else {
				x.NodeID = string(r.DecodeString())
			}
		case "NodeModifyIndex":
			if r.TryDecodeAsNil() {
				x.NodeModifyIndex = 0
			} else {
				x.NodeModifyIndex = uint64(r.DecodeUint(64))
			}
		case "Status":
			if r.TryDecodeAsNil() {
				x.Status = ""
			} else {
				x.Status = string(r.DecodeString())
			}
		case "StatusDescription":
			if r.TryDecodeAsNil() {
				x.StatusDescription = ""
			} else {
				x.StatusDescription = string(r.DecodeString())
			}
		case "Wait":
			if r.TryDecodeAsNil() {
				x.Wait = 0
			} else {
				x.Wait = time.Duration(r.DecodeInt(64))
			}
		case "NextEval":
			if r.TryDecodeAsNil() {
				x.NextEval = ""
			} else {
				x.NextEval = string(r.DecodeString())
			}
		case "PreviousEval":
			if r.TryDecodeAsNil() {
				x.PreviousEval = ""
			} else {
				x.PreviousEval = string(r.DecodeString())
			}
		case "BlockedEval":
			if r.TryDecodeAsNil() {
				x.BlockedEval = ""
			} else {
				x.BlockedEval = string(r.DecodeString())
			}
		case "FailedTGAllocs":
			if r.TryDecodeAsNil() {
				x.FailedTGAllocs = nil
			} else {
				yyv2713 := &x.FailedTGAllocs
				yym2714 := z.DecBinary()
				_ = yym2714
				if false {
				} else {
					h.decMapstringPtrtoAllocMetric((*map[string]*AllocMetric)(yyv2713), d)
				}
			}
		case "ClassEligibility":
			if r.TryDecodeAsNil() {
				x.ClassEligibility = nil
			} else {
				yyv2715 := &x.ClassEligibility
				yym2716 := z.DecBinary()
				_ = yym2716
				if false {
				} else {
					z.F.DecMapStringBoolX(yyv2715, false, d)
				}
			}
		case "EscapedComputedClass":
			if r.TryDecodeAsNil() {
				x.EscapedComputedClass = false
			} else {
				x.EscapedComputedClass = bool(r.DecodeBool())
			}
		case "AnnotatePlan":
			if r.TryDecodeAsNil() {
				x.AnnotatePlan = false
			} else {
				x.AnnotatePlan = bool(r.DecodeBool())
			}
		case "SnapshotIndex":
			if r.TryDecodeAsNil() {
				x.SnapshotIndex = 0
			} else {
				x.SnapshotIndex = uint64(r.DecodeUint(64))
			}
		case "QueuedAllocations":
			if r.TryDecodeAsNil() {
				x.QueuedAllocations = nil
			} else {
				yyv2720 := &x.QueuedAllocations
				yym2721 := z.DecBinary()
				_ = yym2721
				if false {
				} else {
					z.F.DecMapStringIntX(yyv2720, false, d)
				}
			}
		case "CreateIndex":
			if r.TryDecodeAsNil() {
				x.CreateIndex = 0
			} else {
				x.CreateIndex = uint64(r.DecodeUint(64))
			}
		case "ModifyIndex":
			if r.TryDecodeAsNil() {
				x.ModifyIndex = 0
			} else {
				x.ModifyIndex = uint64(r.DecodeUint(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys2698)
		} // end switch yys2698
	} // end for yyj2698
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *Evaluation) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2724 int
	var yyb2724 bool
	var yyhl2724 bool = l >= 0
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ID = ""
	} else {
		x.ID = string(r.DecodeString())
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Priority = 0
	} else {
		x.Priority = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Type = ""
	} else {
		x.Type = string(r.DecodeString())
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.TriggeredBy = ""
	} else {
		x.TriggeredBy = string(r.DecodeString())
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobID = ""
	} else {
		x.JobID = string(r.DecodeString())
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.JobModifyIndex = 0
	} else {
		x.JobModifyIndex = uint64(r.DecodeUint(64))
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeID = ""
	} else {
		x.NodeID = string(r.DecodeString())
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeModifyIndex = 0
	} else {
		x.NodeModifyIndex = uint64(r.DecodeUint(64))
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Status = ""
	} else {
		x.Status = string(r.DecodeString())
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.StatusDescription = ""
	} else {
		x.StatusDescription = string(r.DecodeString())
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Wait = 0
	} else {
		x.Wait = time.Duration(r.DecodeInt(64))
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NextEval = ""
	} else {
		x.NextEval = string(r.DecodeString())
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.PreviousEval = ""
	} else {
		x.PreviousEval = string(r.DecodeString())
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.BlockedEval = ""
	} else {
		x.BlockedEval = string(r.DecodeString())
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.FailedTGAllocs = nil
	} else {
		yyv2739 := &x.FailedTGAllocs
		yym2740 := z.DecBinary()
		_ = yym2740
		if false {
		} else {
			h.decMapstringPtrtoAllocMetric((*map[string]*AllocMetric)(yyv2739), d)
		}
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ClassEligibility = nil
	} else {
		yyv2741 := &x.ClassEligibility
		yym2742 := z.DecBinary()
		_ = yym2742
		if false {
		} else {
			z.F.DecMapStringBoolX(yyv2741, false, d)
		}
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EscapedComputedClass = false
	} else {
		x.EscapedComputedClass = bool(r.DecodeBool())
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AnnotatePlan = false
	} else {
		x.AnnotatePlan = bool(r.DecodeBool())
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.SnapshotIndex = 0
	} else {
		x.SnapshotIndex = uint64(r.DecodeUint(64))
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.QueuedAllocations = nil
	} else {
		yyv2746 := &x.QueuedAllocations
		yym2747 := z.DecBinary()
		_ = yym2747
		if false {
		} else {
			z.F.DecMapStringIntX(yyv2746, false, d)
		}
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.CreateIndex = 0
	} else {
		x.CreateIndex = uint64(r.DecodeUint(64))
	}
	yyj2724++
	if yyhl2724 {
		yyb2724 = yyj2724 > l
	} else {
		yyb2724 = r.CheckBreak()
	}
	if yyb2724 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.ModifyIndex = 0
	} else {
		x.ModifyIndex = uint64(r.DecodeUint(64))
	}
	for {
		yyj2724++
		if yyhl2724 {
			yyb2724 = yyj2724 > l
		} else {
			yyb2724 = r.CheckBreak()
		}
		if yyb2724 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2724-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *Plan) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2750 := z.EncBinary()
		_ = yym2750
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2751 := !z.EncBinary()
			yy2arr2751 := z.EncBasicHandle().StructToArray
			var yyq2751 [8]bool
			_, _, _ = yysep2751, yyq2751, yy2arr2751
			const yyr2751 bool = false
			var yynn2751 int
			if yyr2751 || yy2arr2751 {
				r.EncodeArrayStart(8)
			} else {
				yynn2751 = 8
				for _, b := range yyq2751 {
					if b {
						yynn2751++
					}
				}
				r.EncodeMapStart(yynn2751)
				yynn2751 = 0
			}
			if yyr2751 || yy2arr2751 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2753 := z.EncBinary()
				_ = yym2753
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalID"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2754 := z.EncBinary()
				_ = yym2754
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalID))
				}
			}
			if yyr2751 || yy2arr2751 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2756 := z.EncBinary()
				_ = yym2756
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalToken))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("EvalToken"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2757 := z.EncBinary()
				_ = yym2757
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.EvalToken))
				}
			}
			if yyr2751 || yy2arr2751 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2759 := z.EncBinary()
				_ = yym2759
				if false {
				} else {
					r.EncodeInt(int64(x.Priority))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Priority"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2760 := z.EncBinary()
				_ = yym2760
				if false {
				} else {
					r.EncodeInt(int64(x.Priority))
				}
			}
			if yyr2751 || yy2arr2751 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2762 := z.EncBinary()
				_ = yym2762
				if false {
				} else {
					r.EncodeBool(bool(x.AllAtOnce))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllAtOnce"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2763 := z.EncBinary()
				_ = yym2763
				if false {
				} else {
					r.EncodeBool(bool(x.AllAtOnce))
				}
			}
			if yyr2751 || yy2arr2751 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Job == nil {
					r.EncodeNil()
				} else {
					x.Job.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Job"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Job == nil {
					r.EncodeNil()
				} else {
					x.Job.CodecEncodeSelf(e)
				}
			}
			if yyr2751 || yy2arr2751 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.NodeUpdate == nil {
					r.EncodeNil()
				} else {
					yym2766 := z.EncBinary()
					_ = yym2766
					if false {
					} else {
						h.encMapstringSlicePtrtoAllocation((map[string][]*Allocation)(x.NodeUpdate), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeUpdate"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.NodeUpdate == nil {
					r.EncodeNil()
				} else {
					yym2767 := z.EncBinary()
					_ = yym2767
					if false {
					} else {
						h.encMapstringSlicePtrtoAllocation((map[string][]*Allocation)(x.NodeUpdate), e)
					}
				}
			}
			if yyr2751 || yy2arr2751 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.NodeAllocation == nil {
					r.EncodeNil()
				} else {
					yym2769 := z.EncBinary()
					_ = yym2769
					if false {
					} else {
						h.encMapstringSlicePtrtoAllocation((map[string][]*Allocation)(x.NodeAllocation), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeAllocation"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.NodeAllocation == nil {
					r.EncodeNil()
				} else {
					yym2770 := z.EncBinary()
					_ = yym2770
					if false {
					} else {
						h.encMapstringSlicePtrtoAllocation((map[string][]*Allocation)(x.NodeAllocation), e)
					}
				}
			}
			if yyr2751 || yy2arr2751 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.Annotations == nil {
					r.EncodeNil()
				} else {
					x.Annotations.CodecEncodeSelf(e)
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Annotations"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.Annotations == nil {
					r.EncodeNil()
				} else {
					x.Annotations.CodecEncodeSelf(e)
				}
			}
			if yyr2751 || yy2arr2751 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *Plan) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2772 := z.DecBinary()
	_ = yym2772
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2773 := r.ContainerType()
		if yyct2773 == codecSelferValueTypeMap4362 {
			yyl2773 := r.ReadMapStart()
			if yyl2773 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2773, d)
			}
		} else if yyct2773 == codecSelferValueTypeArray4362 {
			yyl2773 := r.ReadArrayStart()
			if yyl2773 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2773, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *Plan) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2774Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2774Slc
	var yyhl2774 bool = l >= 0
	for yyj2774 := 0; ; yyj2774++ {
		if yyhl2774 {
			if yyj2774 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2774Slc = r.DecodeBytes(yys2774Slc, true, true)
		yys2774 := string(yys2774Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2774 {
		case "EvalID":
			if r.TryDecodeAsNil() {
				x.EvalID = ""
			} else {
				x.EvalID = string(r.DecodeString())
			}
		case "EvalToken":
			if r.TryDecodeAsNil() {
				x.EvalToken = ""
			} else {
				x.EvalToken = string(r.DecodeString())
			}
		case "Priority":
			if r.TryDecodeAsNil() {
				x.Priority = 0
			} else {
				x.Priority = int(r.DecodeInt(codecSelferBitsize4362))
			}
		case "AllAtOnce":
			if r.TryDecodeAsNil() {
				x.AllAtOnce = false
			} else {
				x.AllAtOnce = bool(r.DecodeBool())
			}
		case "Job":
			if r.TryDecodeAsNil() {
				if x.Job != nil {
					x.Job = nil
				}
			} else {
				if x.Job == nil {
					x.Job = new(Job)
				}
				x.Job.CodecDecodeSelf(d)
			}
		case "NodeUpdate":
			if r.TryDecodeAsNil() {
				x.NodeUpdate = nil
			} else {
				yyv2780 := &x.NodeUpdate
				yym2781 := z.DecBinary()
				_ = yym2781
				if false {
				} else {
					h.decMapstringSlicePtrtoAllocation((*map[string][]*Allocation)(yyv2780), d)
				}
			}
		case "NodeAllocation":
			if r.TryDecodeAsNil() {
				x.NodeAllocation = nil
			} else {
				yyv2782 := &x.NodeAllocation
				yym2783 := z.DecBinary()
				_ = yym2783
				if false {
				} else {
					h.decMapstringSlicePtrtoAllocation((*map[string][]*Allocation)(yyv2782), d)
				}
			}
		case "Annotations":
			if r.TryDecodeAsNil() {
				if x.Annotations != nil {
					x.Annotations = nil
				}
			} else {
				if x.Annotations == nil {
					x.Annotations = new(PlanAnnotations)
				}
				x.Annotations.CodecDecodeSelf(d)
			}
		default:
			z.DecStructFieldNotFound(-1, yys2774)
		} // end switch yys2774
	} // end for yyj2774
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *Plan) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2785 int
	var yyb2785 bool
	var yyhl2785 bool = l >= 0
	yyj2785++
	if yyhl2785 {
		yyb2785 = yyj2785 > l
	} else {
		yyb2785 = r.CheckBreak()
	}
	if yyb2785 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalID = ""
	} else {
		x.EvalID = string(r.DecodeString())
	}
	yyj2785++
	if yyhl2785 {
		yyb2785 = yyj2785 > l
	} else {
		yyb2785 = r.CheckBreak()
	}
	if yyb2785 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.EvalToken = ""
	} else {
		x.EvalToken = string(r.DecodeString())
	}
	yyj2785++
	if yyhl2785 {
		yyb2785 = yyj2785 > l
	} else {
		yyb2785 = r.CheckBreak()
	}
	if yyb2785 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Priority = 0
	} else {
		x.Priority = int(r.DecodeInt(codecSelferBitsize4362))
	}
	yyj2785++
	if yyhl2785 {
		yyb2785 = yyj2785 > l
	} else {
		yyb2785 = r.CheckBreak()
	}
	if yyb2785 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllAtOnce = false
	} else {
		x.AllAtOnce = bool(r.DecodeBool())
	}
	yyj2785++
	if yyhl2785 {
		yyb2785 = yyj2785 > l
	} else {
		yyb2785 = r.CheckBreak()
	}
	if yyb2785 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Job != nil {
			x.Job = nil
		}
	} else {
		if x.Job == nil {
			x.Job = new(Job)
		}
		x.Job.CodecDecodeSelf(d)
	}
	yyj2785++
	if yyhl2785 {
		yyb2785 = yyj2785 > l
	} else {
		yyb2785 = r.CheckBreak()
	}
	if yyb2785 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeUpdate = nil
	} else {
		yyv2791 := &x.NodeUpdate
		yym2792 := z.DecBinary()
		_ = yym2792
		if false {
		} else {
			h.decMapstringSlicePtrtoAllocation((*map[string][]*Allocation)(yyv2791), d)
		}
	}
	yyj2785++
	if yyhl2785 {
		yyb2785 = yyj2785 > l
	} else {
		yyb2785 = r.CheckBreak()
	}
	if yyb2785 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeAllocation = nil
	} else {
		yyv2793 := &x.NodeAllocation
		yym2794 := z.DecBinary()
		_ = yym2794
		if false {
		} else {
			h.decMapstringSlicePtrtoAllocation((*map[string][]*Allocation)(yyv2793), d)
		}
	}
	yyj2785++
	if yyhl2785 {
		yyb2785 = yyj2785 > l
	} else {
		yyb2785 = r.CheckBreak()
	}
	if yyb2785 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		if x.Annotations != nil {
			x.Annotations = nil
		}
	} else {
		if x.Annotations == nil {
			x.Annotations = new(PlanAnnotations)
		}
		x.Annotations.CodecDecodeSelf(d)
	}
	for {
		yyj2785++
		if yyhl2785 {
			yyb2785 = yyj2785 > l
		} else {
			yyb2785 = r.CheckBreak()
		}
		if yyb2785 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2785-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *PlanResult) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2796 := z.EncBinary()
		_ = yym2796
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2797 := !z.EncBinary()
			yy2arr2797 := z.EncBasicHandle().StructToArray
			var yyq2797 [4]bool
			_, _, _ = yysep2797, yyq2797, yy2arr2797
			const yyr2797 bool = false
			var yynn2797 int
			if yyr2797 || yy2arr2797 {
				r.EncodeArrayStart(4)
			} else {
				yynn2797 = 4
				for _, b := range yyq2797 {
					if b {
						yynn2797++
					}
				}
				r.EncodeMapStart(yynn2797)
				yynn2797 = 0
			}
			if yyr2797 || yy2arr2797 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.NodeUpdate == nil {
					r.EncodeNil()
				} else {
					yym2799 := z.EncBinary()
					_ = yym2799
					if false {
					} else {
						h.encMapstringSlicePtrtoAllocation((map[string][]*Allocation)(x.NodeUpdate), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeUpdate"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.NodeUpdate == nil {
					r.EncodeNil()
				} else {
					yym2800 := z.EncBinary()
					_ = yym2800
					if false {
					} else {
						h.encMapstringSlicePtrtoAllocation((map[string][]*Allocation)(x.NodeUpdate), e)
					}
				}
			}
			if yyr2797 || yy2arr2797 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.NodeAllocation == nil {
					r.EncodeNil()
				} else {
					yym2802 := z.EncBinary()
					_ = yym2802
					if false {
					} else {
						h.encMapstringSlicePtrtoAllocation((map[string][]*Allocation)(x.NodeAllocation), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("NodeAllocation"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.NodeAllocation == nil {
					r.EncodeNil()
				} else {
					yym2803 := z.EncBinary()
					_ = yym2803
					if false {
					} else {
						h.encMapstringSlicePtrtoAllocation((map[string][]*Allocation)(x.NodeAllocation), e)
					}
				}
			}
			if yyr2797 || yy2arr2797 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2805 := z.EncBinary()
				_ = yym2805
				if false {
				} else {
					r.EncodeUint(uint64(x.RefreshIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("RefreshIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2806 := z.EncBinary()
				_ = yym2806
				if false {
				} else {
					r.EncodeUint(uint64(x.RefreshIndex))
				}
			}
			if yyr2797 || yy2arr2797 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2808 := z.EncBinary()
				_ = yym2808
				if false {
				} else {
					r.EncodeUint(uint64(x.AllocIndex))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("AllocIndex"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2809 := z.EncBinary()
				_ = yym2809
				if false {
				} else {
					r.EncodeUint(uint64(x.AllocIndex))
				}
			}
			if yyr2797 || yy2arr2797 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *PlanResult) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2810 := z.DecBinary()
	_ = yym2810
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2811 := r.ContainerType()
		if yyct2811 == codecSelferValueTypeMap4362 {
			yyl2811 := r.ReadMapStart()
			if yyl2811 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2811, d)
			}
		} else if yyct2811 == codecSelferValueTypeArray4362 {
			yyl2811 := r.ReadArrayStart()
			if yyl2811 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2811, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *PlanResult) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2812Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2812Slc
	var yyhl2812 bool = l >= 0
	for yyj2812 := 0; ; yyj2812++ {
		if yyhl2812 {
			if yyj2812 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2812Slc = r.DecodeBytes(yys2812Slc, true, true)
		yys2812 := string(yys2812Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2812 {
		case "NodeUpdate":
			if r.TryDecodeAsNil() {
				x.NodeUpdate = nil
			} else {
				yyv2813 := &x.NodeUpdate
				yym2814 := z.DecBinary()
				_ = yym2814
				if false {
				} else {
					h.decMapstringSlicePtrtoAllocation((*map[string][]*Allocation)(yyv2813), d)
				}
			}
		case "NodeAllocation":
			if r.TryDecodeAsNil() {
				x.NodeAllocation = nil
			} else {
				yyv2815 := &x.NodeAllocation
				yym2816 := z.DecBinary()
				_ = yym2816
				if false {
				} else {
					h.decMapstringSlicePtrtoAllocation((*map[string][]*Allocation)(yyv2815), d)
				}
			}
		case "RefreshIndex":
			if r.TryDecodeAsNil() {
				x.RefreshIndex = 0
			} else {
				x.RefreshIndex = uint64(r.DecodeUint(64))
			}
		case "AllocIndex":
			if r.TryDecodeAsNil() {
				x.AllocIndex = 0
			} else {
				x.AllocIndex = uint64(r.DecodeUint(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys2812)
		} // end switch yys2812
	} // end for yyj2812
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *PlanResult) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2819 int
	var yyb2819 bool
	var yyhl2819 bool = l >= 0
	yyj2819++
	if yyhl2819 {
		yyb2819 = yyj2819 > l
	} else {
		yyb2819 = r.CheckBreak()
	}
	if yyb2819 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeUpdate = nil
	} else {
		yyv2820 := &x.NodeUpdate
		yym2821 := z.DecBinary()
		_ = yym2821
		if false {
		} else {
			h.decMapstringSlicePtrtoAllocation((*map[string][]*Allocation)(yyv2820), d)
		}
	}
	yyj2819++
	if yyhl2819 {
		yyb2819 = yyj2819 > l
	} else {
		yyb2819 = r.CheckBreak()
	}
	if yyb2819 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.NodeAllocation = nil
	} else {
		yyv2822 := &x.NodeAllocation
		yym2823 := z.DecBinary()
		_ = yym2823
		if false {
		} else {
			h.decMapstringSlicePtrtoAllocation((*map[string][]*Allocation)(yyv2822), d)
		}
	}
	yyj2819++
	if yyhl2819 {
		yyb2819 = yyj2819 > l
	} else {
		yyb2819 = r.CheckBreak()
	}
	if yyb2819 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.RefreshIndex = 0
	} else {
		x.RefreshIndex = uint64(r.DecodeUint(64))
	}
	yyj2819++
	if yyhl2819 {
		yyb2819 = yyj2819 > l
	} else {
		yyb2819 = r.CheckBreak()
	}
	if yyb2819 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.AllocIndex = 0
	} else {
		x.AllocIndex = uint64(r.DecodeUint(64))
	}
	for {
		yyj2819++
		if yyhl2819 {
			yyb2819 = yyj2819 > l
		} else {
			yyb2819 = r.CheckBreak()
		}
		if yyb2819 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2819-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *PlanAnnotations) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2826 := z.EncBinary()
		_ = yym2826
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2827 := !z.EncBinary()
			yy2arr2827 := z.EncBasicHandle().StructToArray
			var yyq2827 [1]bool
			_, _, _ = yysep2827, yyq2827, yy2arr2827
			const yyr2827 bool = false
			var yynn2827 int
			if yyr2827 || yy2arr2827 {
				r.EncodeArrayStart(1)
			} else {
				yynn2827 = 1
				for _, b := range yyq2827 {
					if b {
						yynn2827++
					}
				}
				r.EncodeMapStart(yynn2827)
				yynn2827 = 0
			}
			if yyr2827 || yy2arr2827 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				if x.DesiredTGUpdates == nil {
					r.EncodeNil()
				} else {
					yym2829 := z.EncBinary()
					_ = yym2829
					if false {
					} else {
						h.encMapstringPtrtoDesiredUpdates((map[string]*DesiredUpdates)(x.DesiredTGUpdates), e)
					}
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("DesiredTGUpdates"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				if x.DesiredTGUpdates == nil {
					r.EncodeNil()
				} else {
					yym2830 := z.EncBinary()
					_ = yym2830
					if false {
					} else {
						h.encMapstringPtrtoDesiredUpdates((map[string]*DesiredUpdates)(x.DesiredTGUpdates), e)
					}
				}
			}
			if yyr2827 || yy2arr2827 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *PlanAnnotations) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2831 := z.DecBinary()
	_ = yym2831
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2832 := r.ContainerType()
		if yyct2832 == codecSelferValueTypeMap4362 {
			yyl2832 := r.ReadMapStart()
			if yyl2832 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2832, d)
			}
		} else if yyct2832 == codecSelferValueTypeArray4362 {
			yyl2832 := r.ReadArrayStart()
			if yyl2832 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2832, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *PlanAnnotations) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2833Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2833Slc
	var yyhl2833 bool = l >= 0
	for yyj2833 := 0; ; yyj2833++ {
		if yyhl2833 {
			if yyj2833 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2833Slc = r.DecodeBytes(yys2833Slc, true, true)
		yys2833 := string(yys2833Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2833 {
		case "DesiredTGUpdates":
			if r.TryDecodeAsNil() {
				x.DesiredTGUpdates = nil
			} else {
				yyv2834 := &x.DesiredTGUpdates
				yym2835 := z.DecBinary()
				_ = yym2835
				if false {
				} else {
					h.decMapstringPtrtoDesiredUpdates((*map[string]*DesiredUpdates)(yyv2834), d)
				}
			}
		default:
			z.DecStructFieldNotFound(-1, yys2833)
		} // end switch yys2833
	} // end for yyj2833
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *PlanAnnotations) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2836 int
	var yyb2836 bool
	var yyhl2836 bool = l >= 0
	yyj2836++
	if yyhl2836 {
		yyb2836 = yyj2836 > l
	} else {
		yyb2836 = r.CheckBreak()
	}
	if yyb2836 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.DesiredTGUpdates = nil
	} else {
		yyv2837 := &x.DesiredTGUpdates
		yym2838 := z.DecBinary()
		_ = yym2838
		if false {
		} else {
			h.decMapstringPtrtoDesiredUpdates((*map[string]*DesiredUpdates)(yyv2837), d)
		}
	}
	for {
		yyj2836++
		if yyhl2836 {
			yyb2836 = yyj2836 > l
		} else {
			yyb2836 = r.CheckBreak()
		}
		if yyb2836 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2836-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *DesiredUpdates) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2839 := z.EncBinary()
		_ = yym2839
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2840 := !z.EncBinary()
			yy2arr2840 := z.EncBasicHandle().StructToArray
			var yyq2840 [6]bool
			_, _, _ = yysep2840, yyq2840, yy2arr2840
			const yyr2840 bool = false
			var yynn2840 int
			if yyr2840 || yy2arr2840 {
				r.EncodeArrayStart(6)
			} else {
				yynn2840 = 6
				for _, b := range yyq2840 {
					if b {
						yynn2840++
					}
				}
				r.EncodeMapStart(yynn2840)
				yynn2840 = 0
			}
			if yyr2840 || yy2arr2840 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2842 := z.EncBinary()
				_ = yym2842
				if false {
				} else {
					r.EncodeUint(uint64(x.Ignore))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Ignore"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2843 := z.EncBinary()
				_ = yym2843
				if false {
				} else {
					r.EncodeUint(uint64(x.Ignore))
				}
			}
			if yyr2840 || yy2arr2840 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2845 := z.EncBinary()
				_ = yym2845
				if false {
				} else {
					r.EncodeUint(uint64(x.Place))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Place"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2846 := z.EncBinary()
				_ = yym2846
				if false {
				} else {
					r.EncodeUint(uint64(x.Place))
				}
			}
			if yyr2840 || yy2arr2840 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2848 := z.EncBinary()
				_ = yym2848
				if false {
				} else {
					r.EncodeUint(uint64(x.Migrate))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Migrate"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2849 := z.EncBinary()
				_ = yym2849
				if false {
				} else {
					r.EncodeUint(uint64(x.Migrate))
				}
			}
			if yyr2840 || yy2arr2840 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2851 := z.EncBinary()
				_ = yym2851
				if false {
				} else {
					r.EncodeUint(uint64(x.Stop))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Stop"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2852 := z.EncBinary()
				_ = yym2852
				if false {
				} else {
					r.EncodeUint(uint64(x.Stop))
				}
			}
			if yyr2840 || yy2arr2840 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2854 := z.EncBinary()
				_ = yym2854
				if false {
				} else {
					r.EncodeUint(uint64(x.InPlaceUpdate))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("InPlaceUpdate"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2855 := z.EncBinary()
				_ = yym2855
				if false {
				} else {
					r.EncodeUint(uint64(x.InPlaceUpdate))
				}
			}
			if yyr2840 || yy2arr2840 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2857 := z.EncBinary()
				_ = yym2857
				if false {
				} else {
					r.EncodeUint(uint64(x.DestructiveUpdate))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("DestructiveUpdate"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2858 := z.EncBinary()
				_ = yym2858
				if false {
				} else {
					r.EncodeUint(uint64(x.DestructiveUpdate))
				}
			}
			if yyr2840 || yy2arr2840 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *DesiredUpdates) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2859 := z.DecBinary()
	_ = yym2859
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2860 := r.ContainerType()
		if yyct2860 == codecSelferValueTypeMap4362 {
			yyl2860 := r.ReadMapStart()
			if yyl2860 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2860, d)
			}
		} else if yyct2860 == codecSelferValueTypeArray4362 {
			yyl2860 := r.ReadArrayStart()
			if yyl2860 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2860, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *DesiredUpdates) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2861Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2861Slc
	var yyhl2861 bool = l >= 0
	for yyj2861 := 0; ; yyj2861++ {
		if yyhl2861 {
			if yyj2861 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2861Slc = r.DecodeBytes(yys2861Slc, true, true)
		yys2861 := string(yys2861Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2861 {
		case "Ignore":
			if r.TryDecodeAsNil() {
				x.Ignore = 0
			} else {
				x.Ignore = uint64(r.DecodeUint(64))
			}
		case "Place":
			if r.TryDecodeAsNil() {
				x.Place = 0
			} else {
				x.Place = uint64(r.DecodeUint(64))
			}
		case "Migrate":
			if r.TryDecodeAsNil() {
				x.Migrate = 0
			} else {
				x.Migrate = uint64(r.DecodeUint(64))
			}
		case "Stop":
			if r.TryDecodeAsNil() {
				x.Stop = 0
			} else {
				x.Stop = uint64(r.DecodeUint(64))
			}
		case "InPlaceUpdate":
			if r.TryDecodeAsNil() {
				x.InPlaceUpdate = 0
			} else {
				x.InPlaceUpdate = uint64(r.DecodeUint(64))
			}
		case "DestructiveUpdate":
			if r.TryDecodeAsNil() {
				x.DestructiveUpdate = 0
			} else {
				x.DestructiveUpdate = uint64(r.DecodeUint(64))
			}
		default:
			z.DecStructFieldNotFound(-1, yys2861)
		} // end switch yys2861
	} // end for yyj2861
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *DesiredUpdates) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2868 int
	var yyb2868 bool
	var yyhl2868 bool = l >= 0
	yyj2868++
	if yyhl2868 {
		yyb2868 = yyj2868 > l
	} else {
		yyb2868 = r.CheckBreak()
	}
	if yyb2868 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Ignore = 0
	} else {
		x.Ignore = uint64(r.DecodeUint(64))
	}
	yyj2868++
	if yyhl2868 {
		yyb2868 = yyj2868 > l
	} else {
		yyb2868 = r.CheckBreak()
	}
	if yyb2868 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Place = 0
	} else {
		x.Place = uint64(r.DecodeUint(64))
	}
	yyj2868++
	if yyhl2868 {
		yyb2868 = yyj2868 > l
	} else {
		yyb2868 = r.CheckBreak()
	}
	if yyb2868 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Migrate = 0
	} else {
		x.Migrate = uint64(r.DecodeUint(64))
	}
	yyj2868++
	if yyhl2868 {
		yyb2868 = yyj2868 > l
	} else {
		yyb2868 = r.CheckBreak()
	}
	if yyb2868 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Stop = 0
	} else {
		x.Stop = uint64(r.DecodeUint(64))
	}
	yyj2868++
	if yyhl2868 {
		yyb2868 = yyj2868 > l
	} else {
		yyb2868 = r.CheckBreak()
	}
	if yyb2868 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.InPlaceUpdate = 0
	} else {
		x.InPlaceUpdate = uint64(r.DecodeUint(64))
	}
	yyj2868++
	if yyhl2868 {
		yyb2868 = yyj2868 > l
	} else {
		yyb2868 = r.CheckBreak()
	}
	if yyb2868 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.DestructiveUpdate = 0
	} else {
		x.DestructiveUpdate = uint64(r.DecodeUint(64))
	}
	for {
		yyj2868++
		if yyhl2868 {
			yyb2868 = yyj2868 > l
		} else {
			yyb2868 = r.CheckBreak()
		}
		if yyb2868 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2868-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x *RecoverableError) CodecEncodeSelf(e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	if x == nil {
		r.EncodeNil()
	} else {
		yym2875 := z.EncBinary()
		_ = yym2875
		if false {
		} else if z.HasExtensions() && z.EncExt(x) {
		} else {
			yysep2876 := !z.EncBinary()
			yy2arr2876 := z.EncBasicHandle().StructToArray
			var yyq2876 [2]bool
			_, _, _ = yysep2876, yyq2876, yy2arr2876
			const yyr2876 bool = false
			var yynn2876 int
			if yyr2876 || yy2arr2876 {
				r.EncodeArrayStart(2)
			} else {
				yynn2876 = 2
				for _, b := range yyq2876 {
					if b {
						yynn2876++
					}
				}
				r.EncodeMapStart(yynn2876)
				yynn2876 = 0
			}
			if yyr2876 || yy2arr2876 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2878 := z.EncBinary()
				_ = yym2878
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Err))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Err"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2879 := z.EncBinary()
				_ = yym2879
				if false {
				} else {
					r.EncodeString(codecSelferC_UTF84362, string(x.Err))
				}
			}
			if yyr2876 || yy2arr2876 {
				z.EncSendContainerState(codecSelfer_containerArrayElem4362)
				yym2881 := z.EncBinary()
				_ = yym2881
				if false {
				} else {
					r.EncodeBool(bool(x.Recoverable))
				}
			} else {
				z.EncSendContainerState(codecSelfer_containerMapKey4362)
				r.EncodeString(codecSelferC_UTF84362, string("Recoverable"))
				z.EncSendContainerState(codecSelfer_containerMapValue4362)
				yym2882 := z.EncBinary()
				_ = yym2882
				if false {
				} else {
					r.EncodeBool(bool(x.Recoverable))
				}
			}
			if yyr2876 || yy2arr2876 {
				z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				z.EncSendContainerState(codecSelfer_containerMapEnd4362)
			}
		}
	}
}

func (x *RecoverableError) CodecDecodeSelf(d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	yym2883 := z.DecBinary()
	_ = yym2883
	if false {
	} else if z.HasExtensions() && z.DecExt(x) {
	} else {
		yyct2884 := r.ContainerType()
		if yyct2884 == codecSelferValueTypeMap4362 {
			yyl2884 := r.ReadMapStart()
			if yyl2884 == 0 {
				z.DecSendContainerState(codecSelfer_containerMapEnd4362)
			} else {
				x.codecDecodeSelfFromMap(yyl2884, d)
			}
		} else if yyct2884 == codecSelferValueTypeArray4362 {
			yyl2884 := r.ReadArrayStart()
			if yyl2884 == 0 {
				z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
			} else {
				x.codecDecodeSelfFromArray(yyl2884, d)
			}
		} else {
			panic(codecSelferOnlyMapOrArrayEncodeToStructErr4362)
		}
	}
}

func (x *RecoverableError) codecDecodeSelfFromMap(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yys2885Slc = z.DecScratchBuffer() // default slice to decode into
	_ = yys2885Slc
	var yyhl2885 bool = l >= 0
	for yyj2885 := 0; ; yyj2885++ {
		if yyhl2885 {
			if yyj2885 >= l {
				break
			}
		} else {
			if r.CheckBreak() {
				break
			}
		}
		z.DecSendContainerState(codecSelfer_containerMapKey4362)
		yys2885Slc = r.DecodeBytes(yys2885Slc, true, true)
		yys2885 := string(yys2885Slc)
		z.DecSendContainerState(codecSelfer_containerMapValue4362)
		switch yys2885 {
		case "Err":
			if r.TryDecodeAsNil() {
				x.Err = ""
			} else {
				x.Err = string(r.DecodeString())
			}
		case "Recoverable":
			if r.TryDecodeAsNil() {
				x.Recoverable = false
			} else {
				x.Recoverable = bool(r.DecodeBool())
			}
		default:
			z.DecStructFieldNotFound(-1, yys2885)
		} // end switch yys2885
	} // end for yyj2885
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x *RecoverableError) codecDecodeSelfFromArray(l int, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r
	var yyj2888 int
	var yyb2888 bool
	var yyhl2888 bool = l >= 0
	yyj2888++
	if yyhl2888 {
		yyb2888 = yyj2888 > l
	} else {
		yyb2888 = r.CheckBreak()
	}
	if yyb2888 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Err = ""
	} else {
		x.Err = string(r.DecodeString())
	}
	yyj2888++
	if yyhl2888 {
		yyb2888 = yyj2888 > l
	} else {
		yyb2888 = r.CheckBreak()
	}
	if yyb2888 {
		z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
		return
	}
	z.DecSendContainerState(codecSelfer_containerArrayElem4362)
	if r.TryDecodeAsNil() {
		x.Recoverable = false
	} else {
		x.Recoverable = bool(r.DecodeBool())
	}
	for {
		yyj2888++
		if yyhl2888 {
			yyb2888 = yyj2888 > l
		} else {
			yyb2888 = r.CheckBreak()
		}
		if yyb2888 {
			break
		}
		z.DecSendContainerState(codecSelfer_containerArrayElem4362)
		z.DecStructFieldNotFound(yyj2888-1, "")
	}
	z.DecSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x codecSelfer4362) encSlicePtrtoEvaluation(v []*Evaluation, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv2891 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem4362)
		if yyv2891 == nil {
			r.EncodeNil()
		} else {
			yyv2891.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x codecSelfer4362) decSlicePtrtoEvaluation(v *[]*Evaluation, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2892 := *v
	yyh2892, yyl2892 := z.DecSliceHelperStart()
	var yyc2892 bool
	if yyl2892 == 0 {
		if yyv2892 == nil {
			yyv2892 = []*Evaluation{}
			yyc2892 = true
		} else if len(yyv2892) != 0 {
			yyv2892 = yyv2892[:0]
			yyc2892 = true
		}
	} else if yyl2892 > 0 {
		var yyrr2892, yyrl2892 int
		var yyrt2892 bool
		if yyl2892 > cap(yyv2892) {

			yyrg2892 := len(yyv2892) > 0
			yyv22892 := yyv2892
			yyrl2892, yyrt2892 = z.DecInferLen(yyl2892, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt2892 {
				if yyrl2892 <= cap(yyv2892) {
					yyv2892 = yyv2892[:yyrl2892]
				} else {
					yyv2892 = make([]*Evaluation, yyrl2892)
				}
			} else {
				yyv2892 = make([]*Evaluation, yyrl2892)
			}
			yyc2892 = true
			yyrr2892 = len(yyv2892)
			if yyrg2892 {
				copy(yyv2892, yyv22892)
			}
		} else if yyl2892 != len(yyv2892) {
			yyv2892 = yyv2892[:yyl2892]
			yyc2892 = true
		}
		yyj2892 := 0
		for ; yyj2892 < yyrr2892; yyj2892++ {
			yyh2892.ElemContainerState(yyj2892)
			if r.TryDecodeAsNil() {
				if yyv2892[yyj2892] != nil {
					*yyv2892[yyj2892] = Evaluation{}
				}
			} else {
				if yyv2892[yyj2892] == nil {
					yyv2892[yyj2892] = new(Evaluation)
				}
				yyw2893 := yyv2892[yyj2892]
				yyw2893.CodecDecodeSelf(d)
			}

		}
		if yyrt2892 {
			for ; yyj2892 < yyl2892; yyj2892++ {
				yyv2892 = append(yyv2892, nil)
				yyh2892.ElemContainerState(yyj2892)
				if r.TryDecodeAsNil() {
					if yyv2892[yyj2892] != nil {
						*yyv2892[yyj2892] = Evaluation{}
					}
				} else {
					if yyv2892[yyj2892] == nil {
						yyv2892[yyj2892] = new(Evaluation)
					}
					yyw2894 := yyv2892[yyj2892]
					yyw2894.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj2892 := 0
		for ; !r.CheckBreak(); yyj2892++ {

			if yyj2892 >= len(yyv2892) {
				yyv2892 = append(yyv2892, nil) // var yyz2892 *Evaluation
				yyc2892 = true
			}
			yyh2892.ElemContainerState(yyj2892)
			if yyj2892 < len(yyv2892) {
				if r.TryDecodeAsNil() {
					if yyv2892[yyj2892] != nil {
						*yyv2892[yyj2892] = Evaluation{}
					}
				} else {
					if yyv2892[yyj2892] == nil {
						yyv2892[yyj2892] = new(Evaluation)
					}
					yyw2895 := yyv2892[yyj2892]
					yyw2895.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj2892 < len(yyv2892) {
			yyv2892 = yyv2892[:yyj2892]
			yyc2892 = true
		} else if yyj2892 == 0 && yyv2892 == nil {
			yyv2892 = []*Evaluation{}
			yyc2892 = true
		}
	}
	yyh2892.End()
	if yyc2892 {
		*v = yyv2892
	}
}

func (x codecSelfer4362) encSlicePtrtoAllocation(v []*Allocation, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv2896 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem4362)
		if yyv2896 == nil {
			r.EncodeNil()
		} else {
			yyv2896.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x codecSelfer4362) decSlicePtrtoAllocation(v *[]*Allocation, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2897 := *v
	yyh2897, yyl2897 := z.DecSliceHelperStart()
	var yyc2897 bool
	if yyl2897 == 0 {
		if yyv2897 == nil {
			yyv2897 = []*Allocation{}
			yyc2897 = true
		} else if len(yyv2897) != 0 {
			yyv2897 = yyv2897[:0]
			yyc2897 = true
		}
	} else if yyl2897 > 0 {
		var yyrr2897, yyrl2897 int
		var yyrt2897 bool
		if yyl2897 > cap(yyv2897) {

			yyrg2897 := len(yyv2897) > 0
			yyv22897 := yyv2897
			yyrl2897, yyrt2897 = z.DecInferLen(yyl2897, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt2897 {
				if yyrl2897 <= cap(yyv2897) {
					yyv2897 = yyv2897[:yyrl2897]
				} else {
					yyv2897 = make([]*Allocation, yyrl2897)
				}
			} else {
				yyv2897 = make([]*Allocation, yyrl2897)
			}
			yyc2897 = true
			yyrr2897 = len(yyv2897)
			if yyrg2897 {
				copy(yyv2897, yyv22897)
			}
		} else if yyl2897 != len(yyv2897) {
			yyv2897 = yyv2897[:yyl2897]
			yyc2897 = true
		}
		yyj2897 := 0
		for ; yyj2897 < yyrr2897; yyj2897++ {
			yyh2897.ElemContainerState(yyj2897)
			if r.TryDecodeAsNil() {
				if yyv2897[yyj2897] != nil {
					*yyv2897[yyj2897] = Allocation{}
				}
			} else {
				if yyv2897[yyj2897] == nil {
					yyv2897[yyj2897] = new(Allocation)
				}
				yyw2898 := yyv2897[yyj2897]
				yyw2898.CodecDecodeSelf(d)
			}

		}
		if yyrt2897 {
			for ; yyj2897 < yyl2897; yyj2897++ {
				yyv2897 = append(yyv2897, nil)
				yyh2897.ElemContainerState(yyj2897)
				if r.TryDecodeAsNil() {
					if yyv2897[yyj2897] != nil {
						*yyv2897[yyj2897] = Allocation{}
					}
				} else {
					if yyv2897[yyj2897] == nil {
						yyv2897[yyj2897] = new(Allocation)
					}
					yyw2899 := yyv2897[yyj2897]
					yyw2899.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj2897 := 0
		for ; !r.CheckBreak(); yyj2897++ {

			if yyj2897 >= len(yyv2897) {
				yyv2897 = append(yyv2897, nil) // var yyz2897 *Allocation
				yyc2897 = true
			}
			yyh2897.ElemContainerState(yyj2897)
			if yyj2897 < len(yyv2897) {
				if r.TryDecodeAsNil() {
					if yyv2897[yyj2897] != nil {
						*yyv2897[yyj2897] = Allocation{}
					}
				} else {
					if yyv2897[yyj2897] == nil {
						yyv2897[yyj2897] = new(Allocation)
					}
					yyw2900 := yyv2897[yyj2897]
					yyw2900.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj2897 < len(yyv2897) {
			yyv2897 = yyv2897[:yyj2897]
			yyc2897 = true
		} else if yyj2897 == 0 && yyv2897 == nil {
			yyv2897 = []*Allocation{}
			yyc2897 = true
		}
	}
	yyh2897.End()
	if yyc2897 {
		*v = yyv2897
	}
}

func (x codecSelfer4362) encSlicePtrtoNodeServerInfo(v []*NodeServerInfo, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv2901 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem4362)
		if yyv2901 == nil {
			r.EncodeNil()
		} else {
			yyv2901.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x codecSelfer4362) decSlicePtrtoNodeServerInfo(v *[]*NodeServerInfo, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2902 := *v
	yyh2902, yyl2902 := z.DecSliceHelperStart()
	var yyc2902 bool
	if yyl2902 == 0 {
		if yyv2902 == nil {
			yyv2902 = []*NodeServerInfo{}
			yyc2902 = true
		} else if len(yyv2902) != 0 {
			yyv2902 = yyv2902[:0]
			yyc2902 = true
		}
	} else if yyl2902 > 0 {
		var yyrr2902, yyrl2902 int
		var yyrt2902 bool
		if yyl2902 > cap(yyv2902) {

			yyrg2902 := len(yyv2902) > 0
			yyv22902 := yyv2902
			yyrl2902, yyrt2902 = z.DecInferLen(yyl2902, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt2902 {
				if yyrl2902 <= cap(yyv2902) {
					yyv2902 = yyv2902[:yyrl2902]
				} else {
					yyv2902 = make([]*NodeServerInfo, yyrl2902)
				}
			} else {
				yyv2902 = make([]*NodeServerInfo, yyrl2902)
			}
			yyc2902 = true
			yyrr2902 = len(yyv2902)
			if yyrg2902 {
				copy(yyv2902, yyv22902)
			}
		} else if yyl2902 != len(yyv2902) {
			yyv2902 = yyv2902[:yyl2902]
			yyc2902 = true
		}
		yyj2902 := 0
		for ; yyj2902 < yyrr2902; yyj2902++ {
			yyh2902.ElemContainerState(yyj2902)
			if r.TryDecodeAsNil() {
				if yyv2902[yyj2902] != nil {
					*yyv2902[yyj2902] = NodeServerInfo{}
				}
			} else {
				if yyv2902[yyj2902] == nil {
					yyv2902[yyj2902] = new(NodeServerInfo)
				}
				yyw2903 := yyv2902[yyj2902]
				yyw2903.CodecDecodeSelf(d)
			}

		}
		if yyrt2902 {
			for ; yyj2902 < yyl2902; yyj2902++ {
				yyv2902 = append(yyv2902, nil)
				yyh2902.ElemContainerState(yyj2902)
				if r.TryDecodeAsNil() {
					if yyv2902[yyj2902] != nil {
						*yyv2902[yyj2902] = NodeServerInfo{}
					}
				} else {
					if yyv2902[yyj2902] == nil {
						yyv2902[yyj2902] = new(NodeServerInfo)
					}
					yyw2904 := yyv2902[yyj2902]
					yyw2904.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj2902 := 0
		for ; !r.CheckBreak(); yyj2902++ {

			if yyj2902 >= len(yyv2902) {
				yyv2902 = append(yyv2902, nil) // var yyz2902 *NodeServerInfo
				yyc2902 = true
			}
			yyh2902.ElemContainerState(yyj2902)
			if yyj2902 < len(yyv2902) {
				if r.TryDecodeAsNil() {
					if yyv2902[yyj2902] != nil {
						*yyv2902[yyj2902] = NodeServerInfo{}
					}
				} else {
					if yyv2902[yyj2902] == nil {
						yyv2902[yyj2902] = new(NodeServerInfo)
					}
					yyw2905 := yyv2902[yyj2902]
					yyw2905.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj2902 < len(yyv2902) {
			yyv2902 = yyv2902[:yyj2902]
			yyc2902 = true
		} else if yyj2902 == 0 && yyv2902 == nil {
			yyv2902 = []*NodeServerInfo{}
			yyc2902 = true
		}
	}
	yyh2902.End()
	if yyc2902 {
		*v = yyv2902
	}
}

func (x codecSelfer4362) encSlicePtrtoNodeListStub(v []*NodeListStub, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv2906 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem4362)
		if yyv2906 == nil {
			r.EncodeNil()
		} else {
			yyv2906.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x codecSelfer4362) decSlicePtrtoNodeListStub(v *[]*NodeListStub, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2907 := *v
	yyh2907, yyl2907 := z.DecSliceHelperStart()
	var yyc2907 bool
	if yyl2907 == 0 {
		if yyv2907 == nil {
			yyv2907 = []*NodeListStub{}
			yyc2907 = true
		} else if len(yyv2907) != 0 {
			yyv2907 = yyv2907[:0]
			yyc2907 = true
		}
	} else if yyl2907 > 0 {
		var yyrr2907, yyrl2907 int
		var yyrt2907 bool
		if yyl2907 > cap(yyv2907) {

			yyrg2907 := len(yyv2907) > 0
			yyv22907 := yyv2907
			yyrl2907, yyrt2907 = z.DecInferLen(yyl2907, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt2907 {
				if yyrl2907 <= cap(yyv2907) {
					yyv2907 = yyv2907[:yyrl2907]
				} else {
					yyv2907 = make([]*NodeListStub, yyrl2907)
				}
			} else {
				yyv2907 = make([]*NodeListStub, yyrl2907)
			}
			yyc2907 = true
			yyrr2907 = len(yyv2907)
			if yyrg2907 {
				copy(yyv2907, yyv22907)
			}
		} else if yyl2907 != len(yyv2907) {
			yyv2907 = yyv2907[:yyl2907]
			yyc2907 = true
		}
		yyj2907 := 0
		for ; yyj2907 < yyrr2907; yyj2907++ {
			yyh2907.ElemContainerState(yyj2907)
			if r.TryDecodeAsNil() {
				if yyv2907[yyj2907] != nil {
					*yyv2907[yyj2907] = NodeListStub{}
				}
			} else {
				if yyv2907[yyj2907] == nil {
					yyv2907[yyj2907] = new(NodeListStub)
				}
				yyw2908 := yyv2907[yyj2907]
				yyw2908.CodecDecodeSelf(d)
			}

		}
		if yyrt2907 {
			for ; yyj2907 < yyl2907; yyj2907++ {
				yyv2907 = append(yyv2907, nil)
				yyh2907.ElemContainerState(yyj2907)
				if r.TryDecodeAsNil() {
					if yyv2907[yyj2907] != nil {
						*yyv2907[yyj2907] = NodeListStub{}
					}
				} else {
					if yyv2907[yyj2907] == nil {
						yyv2907[yyj2907] = new(NodeListStub)
					}
					yyw2909 := yyv2907[yyj2907]
					yyw2909.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj2907 := 0
		for ; !r.CheckBreak(); yyj2907++ {

			if yyj2907 >= len(yyv2907) {
				yyv2907 = append(yyv2907, nil) // var yyz2907 *NodeListStub
				yyc2907 = true
			}
			yyh2907.ElemContainerState(yyj2907)
			if yyj2907 < len(yyv2907) {
				if r.TryDecodeAsNil() {
					if yyv2907[yyj2907] != nil {
						*yyv2907[yyj2907] = NodeListStub{}
					}
				} else {
					if yyv2907[yyj2907] == nil {
						yyv2907[yyj2907] = new(NodeListStub)
					}
					yyw2910 := yyv2907[yyj2907]
					yyw2910.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj2907 < len(yyv2907) {
			yyv2907 = yyv2907[:yyj2907]
			yyc2907 = true
		} else if yyj2907 == 0 && yyv2907 == nil {
			yyv2907 = []*NodeListStub{}
			yyc2907 = true
		}
	}
	yyh2907.End()
	if yyc2907 {
		*v = yyv2907
	}
}

func (x codecSelfer4362) encSlicePtrtoJobListStub(v []*JobListStub, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv2911 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem4362)
		if yyv2911 == nil {
			r.EncodeNil()
		} else {
			yyv2911.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x codecSelfer4362) decSlicePtrtoJobListStub(v *[]*JobListStub, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2912 := *v
	yyh2912, yyl2912 := z.DecSliceHelperStart()
	var yyc2912 bool
	if yyl2912 == 0 {
		if yyv2912 == nil {
			yyv2912 = []*JobListStub{}
			yyc2912 = true
		} else if len(yyv2912) != 0 {
			yyv2912 = yyv2912[:0]
			yyc2912 = true
		}
	} else if yyl2912 > 0 {
		var yyrr2912, yyrl2912 int
		var yyrt2912 bool
		if yyl2912 > cap(yyv2912) {

			yyrg2912 := len(yyv2912) > 0
			yyv22912 := yyv2912
			yyrl2912, yyrt2912 = z.DecInferLen(yyl2912, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt2912 {
				if yyrl2912 <= cap(yyv2912) {
					yyv2912 = yyv2912[:yyrl2912]
				} else {
					yyv2912 = make([]*JobListStub, yyrl2912)
				}
			} else {
				yyv2912 = make([]*JobListStub, yyrl2912)
			}
			yyc2912 = true
			yyrr2912 = len(yyv2912)
			if yyrg2912 {
				copy(yyv2912, yyv22912)
			}
		} else if yyl2912 != len(yyv2912) {
			yyv2912 = yyv2912[:yyl2912]
			yyc2912 = true
		}
		yyj2912 := 0
		for ; yyj2912 < yyrr2912; yyj2912++ {
			yyh2912.ElemContainerState(yyj2912)
			if r.TryDecodeAsNil() {
				if yyv2912[yyj2912] != nil {
					*yyv2912[yyj2912] = JobListStub{}
				}
			} else {
				if yyv2912[yyj2912] == nil {
					yyv2912[yyj2912] = new(JobListStub)
				}
				yyw2913 := yyv2912[yyj2912]
				yyw2913.CodecDecodeSelf(d)
			}

		}
		if yyrt2912 {
			for ; yyj2912 < yyl2912; yyj2912++ {
				yyv2912 = append(yyv2912, nil)
				yyh2912.ElemContainerState(yyj2912)
				if r.TryDecodeAsNil() {
					if yyv2912[yyj2912] != nil {
						*yyv2912[yyj2912] = JobListStub{}
					}
				} else {
					if yyv2912[yyj2912] == nil {
						yyv2912[yyj2912] = new(JobListStub)
					}
					yyw2914 := yyv2912[yyj2912]
					yyw2914.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj2912 := 0
		for ; !r.CheckBreak(); yyj2912++ {

			if yyj2912 >= len(yyv2912) {
				yyv2912 = append(yyv2912, nil) // var yyz2912 *JobListStub
				yyc2912 = true
			}
			yyh2912.ElemContainerState(yyj2912)
			if yyj2912 < len(yyv2912) {
				if r.TryDecodeAsNil() {
					if yyv2912[yyj2912] != nil {
						*yyv2912[yyj2912] = JobListStub{}
					}
				} else {
					if yyv2912[yyj2912] == nil {
						yyv2912[yyj2912] = new(JobListStub)
					}
					yyw2915 := yyv2912[yyj2912]
					yyw2915.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj2912 < len(yyv2912) {
			yyv2912 = yyv2912[:yyj2912]
			yyc2912 = true
		} else if yyj2912 == 0 && yyv2912 == nil {
			yyv2912 = []*JobListStub{}
			yyc2912 = true
		}
	}
	yyh2912.End()
	if yyc2912 {
		*v = yyv2912
	}
}

func (x codecSelfer4362) encMapstringPtrtoAllocMetric(v map[string]*AllocMetric, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeMapStart(len(v))
	for yyk2916, yyv2916 := range v {
		z.EncSendContainerState(codecSelfer_containerMapKey4362)
		yym2917 := z.EncBinary()
		_ = yym2917
		if false {
		} else {
			r.EncodeString(codecSelferC_UTF84362, string(yyk2916))
		}
		z.EncSendContainerState(codecSelfer_containerMapValue4362)
		if yyv2916 == nil {
			r.EncodeNil()
		} else {
			yyv2916.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x codecSelfer4362) decMapstringPtrtoAllocMetric(v *map[string]*AllocMetric, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2918 := *v
	yyl2918 := r.ReadMapStart()
	yybh2918 := z.DecBasicHandle()
	if yyv2918 == nil {
		yyrl2918, _ := z.DecInferLen(yyl2918, yybh2918.MaxInitLen, 24)
		yyv2918 = make(map[string]*AllocMetric, yyrl2918)
		*v = yyv2918
	}
	var yymk2918 string
	var yymv2918 *AllocMetric
	var yymg2918, yyms2918, yymok2918 bool
	if yybh2918.MapValueReset {
		yymg2918 = true
	}
	if yyl2918 > 0 {
		for yyj2918 := 0; yyj2918 < yyl2918; yyj2918++ {
			z.DecSendContainerState(codecSelfer_containerMapKey4362)
			if r.TryDecodeAsNil() {
				yymk2918 = ""
			} else {
				yymk2918 = string(r.DecodeString())
			}

			yyms2918 = true
			if yymg2918 {
				yymv2918, yymok2918 = yyv2918[yymk2918]
				if yymok2918 {
					yyms2918 = false
				}
			} else {
				yymv2918 = nil
			}
			z.DecSendContainerState(codecSelfer_containerMapValue4362)
			if r.TryDecodeAsNil() {
				if yymv2918 != nil {
					*yymv2918 = AllocMetric{}
				}
			} else {
				if yymv2918 == nil {
					yymv2918 = new(AllocMetric)
				}
				yymv2918.CodecDecodeSelf(d)
			}

			if yyms2918 && yyv2918 != nil {
				yyv2918[yymk2918] = yymv2918
			}
		}
	} else if yyl2918 < 0 {
		for yyj2918 := 0; !r.CheckBreak(); yyj2918++ {
			z.DecSendContainerState(codecSelfer_containerMapKey4362)
			if r.TryDecodeAsNil() {
				yymk2918 = ""
			} else {
				yymk2918 = string(r.DecodeString())
			}

			yyms2918 = true
			if yymg2918 {
				yymv2918, yymok2918 = yyv2918[yymk2918]
				if yymok2918 {
					yyms2918 = false
				}
			} else {
				yymv2918 = nil
			}
			z.DecSendContainerState(codecSelfer_containerMapValue4362)
			if r.TryDecodeAsNil() {
				if yymv2918 != nil {
					*yymv2918 = AllocMetric{}
				}
			} else {
				if yymv2918 == nil {
					yymv2918 = new(AllocMetric)
				}
				yymv2918.CodecDecodeSelf(d)
			}

			if yyms2918 && yyv2918 != nil {
				yyv2918[yymk2918] = yymv2918
			}
		}
	} // else len==0: TODO: Should we clear map entries?
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x codecSelfer4362) encSlicePtrtoAllocListStub(v []*AllocListStub, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv2923 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem4362)
		if yyv2923 == nil {
			r.EncodeNil()
		} else {
			yyv2923.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x codecSelfer4362) decSlicePtrtoAllocListStub(v *[]*AllocListStub, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2924 := *v
	yyh2924, yyl2924 := z.DecSliceHelperStart()
	var yyc2924 bool
	if yyl2924 == 0 {
		if yyv2924 == nil {
			yyv2924 = []*AllocListStub{}
			yyc2924 = true
		} else if len(yyv2924) != 0 {
			yyv2924 = yyv2924[:0]
			yyc2924 = true
		}
	} else if yyl2924 > 0 {
		var yyrr2924, yyrl2924 int
		var yyrt2924 bool
		if yyl2924 > cap(yyv2924) {

			yyrg2924 := len(yyv2924) > 0
			yyv22924 := yyv2924
			yyrl2924, yyrt2924 = z.DecInferLen(yyl2924, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt2924 {
				if yyrl2924 <= cap(yyv2924) {
					yyv2924 = yyv2924[:yyrl2924]
				} else {
					yyv2924 = make([]*AllocListStub, yyrl2924)
				}
			} else {
				yyv2924 = make([]*AllocListStub, yyrl2924)
			}
			yyc2924 = true
			yyrr2924 = len(yyv2924)
			if yyrg2924 {
				copy(yyv2924, yyv22924)
			}
		} else if yyl2924 != len(yyv2924) {
			yyv2924 = yyv2924[:yyl2924]
			yyc2924 = true
		}
		yyj2924 := 0
		for ; yyj2924 < yyrr2924; yyj2924++ {
			yyh2924.ElemContainerState(yyj2924)
			if r.TryDecodeAsNil() {
				if yyv2924[yyj2924] != nil {
					*yyv2924[yyj2924] = AllocListStub{}
				}
			} else {
				if yyv2924[yyj2924] == nil {
					yyv2924[yyj2924] = new(AllocListStub)
				}
				yyw2925 := yyv2924[yyj2924]
				yyw2925.CodecDecodeSelf(d)
			}

		}
		if yyrt2924 {
			for ; yyj2924 < yyl2924; yyj2924++ {
				yyv2924 = append(yyv2924, nil)
				yyh2924.ElemContainerState(yyj2924)
				if r.TryDecodeAsNil() {
					if yyv2924[yyj2924] != nil {
						*yyv2924[yyj2924] = AllocListStub{}
					}
				} else {
					if yyv2924[yyj2924] == nil {
						yyv2924[yyj2924] = new(AllocListStub)
					}
					yyw2926 := yyv2924[yyj2924]
					yyw2926.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj2924 := 0
		for ; !r.CheckBreak(); yyj2924++ {

			if yyj2924 >= len(yyv2924) {
				yyv2924 = append(yyv2924, nil) // var yyz2924 *AllocListStub
				yyc2924 = true
			}
			yyh2924.ElemContainerState(yyj2924)
			if yyj2924 < len(yyv2924) {
				if r.TryDecodeAsNil() {
					if yyv2924[yyj2924] != nil {
						*yyv2924[yyj2924] = AllocListStub{}
					}
				} else {
					if yyv2924[yyj2924] == nil {
						yyv2924[yyj2924] = new(AllocListStub)
					}
					yyw2927 := yyv2924[yyj2924]
					yyw2927.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj2924 < len(yyv2924) {
			yyv2924 = yyv2924[:yyj2924]
			yyc2924 = true
		} else if yyj2924 == 0 && yyv2924 == nil {
			yyv2924 = []*AllocListStub{}
			yyc2924 = true
		}
	}
	yyh2924.End()
	if yyc2924 {
		*v = yyv2924
	}
}

func (x codecSelfer4362) encSlicePtrtoNetworkResource(v []*NetworkResource, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv2928 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem4362)
		if yyv2928 == nil {
			r.EncodeNil()
		} else {
			yyv2928.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x codecSelfer4362) decSlicePtrtoNetworkResource(v *[]*NetworkResource, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2929 := *v
	yyh2929, yyl2929 := z.DecSliceHelperStart()
	var yyc2929 bool
	if yyl2929 == 0 {
		if yyv2929 == nil {
			yyv2929 = []*NetworkResource{}
			yyc2929 = true
		} else if len(yyv2929) != 0 {
			yyv2929 = yyv2929[:0]
			yyc2929 = true
		}
	} else if yyl2929 > 0 {
		var yyrr2929, yyrl2929 int
		var yyrt2929 bool
		if yyl2929 > cap(yyv2929) {

			yyrg2929 := len(yyv2929) > 0
			yyv22929 := yyv2929
			yyrl2929, yyrt2929 = z.DecInferLen(yyl2929, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt2929 {
				if yyrl2929 <= cap(yyv2929) {
					yyv2929 = yyv2929[:yyrl2929]
				} else {
					yyv2929 = make([]*NetworkResource, yyrl2929)
				}
			} else {
				yyv2929 = make([]*NetworkResource, yyrl2929)
			}
			yyc2929 = true
			yyrr2929 = len(yyv2929)
			if yyrg2929 {
				copy(yyv2929, yyv22929)
			}
		} else if yyl2929 != len(yyv2929) {
			yyv2929 = yyv2929[:yyl2929]
			yyc2929 = true
		}
		yyj2929 := 0
		for ; yyj2929 < yyrr2929; yyj2929++ {
			yyh2929.ElemContainerState(yyj2929)
			if r.TryDecodeAsNil() {
				if yyv2929[yyj2929] != nil {
					*yyv2929[yyj2929] = NetworkResource{}
				}
			} else {
				if yyv2929[yyj2929] == nil {
					yyv2929[yyj2929] = new(NetworkResource)
				}
				yyw2930 := yyv2929[yyj2929]
				yyw2930.CodecDecodeSelf(d)
			}

		}
		if yyrt2929 {
			for ; yyj2929 < yyl2929; yyj2929++ {
				yyv2929 = append(yyv2929, nil)
				yyh2929.ElemContainerState(yyj2929)
				if r.TryDecodeAsNil() {
					if yyv2929[yyj2929] != nil {
						*yyv2929[yyj2929] = NetworkResource{}
					}
				} else {
					if yyv2929[yyj2929] == nil {
						yyv2929[yyj2929] = new(NetworkResource)
					}
					yyw2931 := yyv2929[yyj2929]
					yyw2931.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj2929 := 0
		for ; !r.CheckBreak(); yyj2929++ {

			if yyj2929 >= len(yyv2929) {
				yyv2929 = append(yyv2929, nil) // var yyz2929 *NetworkResource
				yyc2929 = true
			}
			yyh2929.ElemContainerState(yyj2929)
			if yyj2929 < len(yyv2929) {
				if r.TryDecodeAsNil() {
					if yyv2929[yyj2929] != nil {
						*yyv2929[yyj2929] = NetworkResource{}
					}
				} else {
					if yyv2929[yyj2929] == nil {
						yyv2929[yyj2929] = new(NetworkResource)
					}
					yyw2932 := yyv2929[yyj2929]
					yyw2932.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj2929 < len(yyv2929) {
			yyv2929 = yyv2929[:yyj2929]
			yyc2929 = true
		} else if yyj2929 == 0 && yyv2929 == nil {
			yyv2929 = []*NetworkResource{}
			yyc2929 = true
		}
	}
	yyh2929.End()
	if yyc2929 {
		*v = yyv2929
	}
}

func (x codecSelfer4362) encSlicePort(v []Port, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv2933 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem4362)
		yy2934 := &yyv2933
		yy2934.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x codecSelfer4362) decSlicePort(v *[]Port, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2935 := *v
	yyh2935, yyl2935 := z.DecSliceHelperStart()
	var yyc2935 bool
	if yyl2935 == 0 {
		if yyv2935 == nil {
			yyv2935 = []Port{}
			yyc2935 = true
		} else if len(yyv2935) != 0 {
			yyv2935 = yyv2935[:0]
			yyc2935 = true
		}
	} else if yyl2935 > 0 {
		var yyrr2935, yyrl2935 int
		var yyrt2935 bool
		if yyl2935 > cap(yyv2935) {

			yyrg2935 := len(yyv2935) > 0
			yyv22935 := yyv2935
			yyrl2935, yyrt2935 = z.DecInferLen(yyl2935, z.DecBasicHandle().MaxInitLen, 24)
			if yyrt2935 {
				if yyrl2935 <= cap(yyv2935) {
					yyv2935 = yyv2935[:yyrl2935]
				} else {
					yyv2935 = make([]Port, yyrl2935)
				}
			} else {
				yyv2935 = make([]Port, yyrl2935)
			}
			yyc2935 = true
			yyrr2935 = len(yyv2935)
			if yyrg2935 {
				copy(yyv2935, yyv22935)
			}
		} else if yyl2935 != len(yyv2935) {
			yyv2935 = yyv2935[:yyl2935]
			yyc2935 = true
		}
		yyj2935 := 0
		for ; yyj2935 < yyrr2935; yyj2935++ {
			yyh2935.ElemContainerState(yyj2935)
			if r.TryDecodeAsNil() {
				yyv2935[yyj2935] = Port{}
			} else {
				yyv2936 := &yyv2935[yyj2935]
				yyv2936.CodecDecodeSelf(d)
			}

		}
		if yyrt2935 {
			for ; yyj2935 < yyl2935; yyj2935++ {
				yyv2935 = append(yyv2935, Port{})
				yyh2935.ElemContainerState(yyj2935)
				if r.TryDecodeAsNil() {
					yyv2935[yyj2935] = Port{}
				} else {
					yyv2937 := &yyv2935[yyj2935]
					yyv2937.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj2935 := 0
		for ; !r.CheckBreak(); yyj2935++ {

			if yyj2935 >= len(yyv2935) {
				yyv2935 = append(yyv2935, Port{}) // var yyz2935 Port
				yyc2935 = true
			}
			yyh2935.ElemContainerState(yyj2935)
			if yyj2935 < len(yyv2935) {
				if r.TryDecodeAsNil() {
					yyv2935[yyj2935] = Port{}
				} else {
					yyv2938 := &yyv2935[yyj2935]
					yyv2938.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj2935 < len(yyv2935) {
			yyv2935 = yyv2935[:yyj2935]
			yyc2935 = true
		} else if yyj2935 == 0 && yyv2935 == nil {
			yyv2935 = []Port{}
			yyc2935 = true
		}
	}
	yyh2935.End()
	if yyc2935 {
		*v = yyv2935
	}
}

func (x codecSelfer4362) encMapstringTaskGroupSummary(v map[string]TaskGroupSummary, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeMapStart(len(v))
	for yyk2939, yyv2939 := range v {
		z.EncSendContainerState(codecSelfer_containerMapKey4362)
		yym2940 := z.EncBinary()
		_ = yym2940
		if false {
		} else {
			r.EncodeString(codecSelferC_UTF84362, string(yyk2939))
		}
		z.EncSendContainerState(codecSelfer_containerMapValue4362)
		yy2941 := &yyv2939
		yy2941.CodecEncodeSelf(e)
	}
	z.EncSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x codecSelfer4362) decMapstringTaskGroupSummary(v *map[string]TaskGroupSummary, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2942 := *v
	yyl2942 := r.ReadMapStart()
	yybh2942 := z.DecBasicHandle()
	if yyv2942 == nil {
		yyrl2942, _ := z.DecInferLen(yyl2942, yybh2942.MaxInitLen, 64)
		yyv2942 = make(map[string]TaskGroupSummary, yyrl2942)
		*v = yyv2942
	}
	var yymk2942 string
	var yymv2942 TaskGroupSummary
	var yymg2942 bool
	if yybh2942.MapValueReset {
		yymg2942 = true
	}
	if yyl2942 > 0 {
		for yyj2942 := 0; yyj2942 < yyl2942; yyj2942++ {
			z.DecSendContainerState(codecSelfer_containerMapKey4362)
			if r.TryDecodeAsNil() {
				yymk2942 = ""
			} else {
				yymk2942 = string(r.DecodeString())
			}

			if yymg2942 {
				yymv2942 = yyv2942[yymk2942]
			} else {
				yymv2942 = TaskGroupSummary{}
			}
			z.DecSendContainerState(codecSelfer_containerMapValue4362)
			if r.TryDecodeAsNil() {
				yymv2942 = TaskGroupSummary{}
			} else {
				yyv2944 := &yymv2942
				yyv2944.CodecDecodeSelf(d)
			}

			if yyv2942 != nil {
				yyv2942[yymk2942] = yymv2942
			}
		}
	} else if yyl2942 < 0 {
		for yyj2942 := 0; !r.CheckBreak(); yyj2942++ {
			z.DecSendContainerState(codecSelfer_containerMapKey4362)
			if r.TryDecodeAsNil() {
				yymk2942 = ""
			} else {
				yymk2942 = string(r.DecodeString())
			}

			if yymg2942 {
				yymv2942 = yyv2942[yymk2942]
			} else {
				yymv2942 = TaskGroupSummary{}
			}
			z.DecSendContainerState(codecSelfer_containerMapValue4362)
			if r.TryDecodeAsNil() {
				yymv2942 = TaskGroupSummary{}
			} else {
				yyv2946 := &yymv2942
				yyv2946.CodecDecodeSelf(d)
			}

			if yyv2942 != nil {
				yyv2942[yymk2942] = yymv2942
			}
		}
	} // else len==0: TODO: Should we clear map entries?
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x codecSelfer4362) encSlicePtrtoTaskGroup(v []*TaskGroup, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv2947 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem4362)
		if yyv2947 == nil {
			r.EncodeNil()
		} else {
			yyv2947.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x codecSelfer4362) decSlicePtrtoTaskGroup(v *[]*TaskGroup, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2948 := *v
	yyh2948, yyl2948 := z.DecSliceHelperStart()
	var yyc2948 bool
	if yyl2948 == 0 {
		if yyv2948 == nil {
			yyv2948 = []*TaskGroup{}
			yyc2948 = true
		} else if len(yyv2948) != 0 {
			yyv2948 = yyv2948[:0]
			yyc2948 = true
		}
	} else if yyl2948 > 0 {
		var yyrr2948, yyrl2948 int
		var yyrt2948 bool
		if yyl2948 > cap(yyv2948) {

			yyrg2948 := len(yyv2948) > 0
			yyv22948 := yyv2948
			yyrl2948, yyrt2948 = z.DecInferLen(yyl2948, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt2948 {
				if yyrl2948 <= cap(yyv2948) {
					yyv2948 = yyv2948[:yyrl2948]
				} else {
					yyv2948 = make([]*TaskGroup, yyrl2948)
				}
			} else {
				yyv2948 = make([]*TaskGroup, yyrl2948)
			}
			yyc2948 = true
			yyrr2948 = len(yyv2948)
			if yyrg2948 {
				copy(yyv2948, yyv22948)
			}
		} else if yyl2948 != len(yyv2948) {
			yyv2948 = yyv2948[:yyl2948]
			yyc2948 = true
		}
		yyj2948 := 0
		for ; yyj2948 < yyrr2948; yyj2948++ {
			yyh2948.ElemContainerState(yyj2948)
			if r.TryDecodeAsNil() {
				if yyv2948[yyj2948] != nil {
					*yyv2948[yyj2948] = TaskGroup{}
				}
			} else {
				if yyv2948[yyj2948] == nil {
					yyv2948[yyj2948] = new(TaskGroup)
				}
				yyw2949 := yyv2948[yyj2948]
				yyw2949.CodecDecodeSelf(d)
			}

		}
		if yyrt2948 {
			for ; yyj2948 < yyl2948; yyj2948++ {
				yyv2948 = append(yyv2948, nil)
				yyh2948.ElemContainerState(yyj2948)
				if r.TryDecodeAsNil() {
					if yyv2948[yyj2948] != nil {
						*yyv2948[yyj2948] = TaskGroup{}
					}
				} else {
					if yyv2948[yyj2948] == nil {
						yyv2948[yyj2948] = new(TaskGroup)
					}
					yyw2950 := yyv2948[yyj2948]
					yyw2950.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj2948 := 0
		for ; !r.CheckBreak(); yyj2948++ {

			if yyj2948 >= len(yyv2948) {
				yyv2948 = append(yyv2948, nil) // var yyz2948 *TaskGroup
				yyc2948 = true
			}
			yyh2948.ElemContainerState(yyj2948)
			if yyj2948 < len(yyv2948) {
				if r.TryDecodeAsNil() {
					if yyv2948[yyj2948] != nil {
						*yyv2948[yyj2948] = TaskGroup{}
					}
				} else {
					if yyv2948[yyj2948] == nil {
						yyv2948[yyj2948] = new(TaskGroup)
					}
					yyw2951 := yyv2948[yyj2948]
					yyw2951.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj2948 < len(yyv2948) {
			yyv2948 = yyv2948[:yyj2948]
			yyc2948 = true
		} else if yyj2948 == 0 && yyv2948 == nil {
			yyv2948 = []*TaskGroup{}
			yyc2948 = true
		}
	}
	yyh2948.End()
	if yyc2948 {
		*v = yyv2948
	}
}

func (x codecSelfer4362) encSlicePtrtoTask(v []*Task, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv2952 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem4362)
		if yyv2952 == nil {
			r.EncodeNil()
		} else {
			yyv2952.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x codecSelfer4362) decSlicePtrtoTask(v *[]*Task, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2953 := *v
	yyh2953, yyl2953 := z.DecSliceHelperStart()
	var yyc2953 bool
	if yyl2953 == 0 {
		if yyv2953 == nil {
			yyv2953 = []*Task{}
			yyc2953 = true
		} else if len(yyv2953) != 0 {
			yyv2953 = yyv2953[:0]
			yyc2953 = true
		}
	} else if yyl2953 > 0 {
		var yyrr2953, yyrl2953 int
		var yyrt2953 bool
		if yyl2953 > cap(yyv2953) {

			yyrg2953 := len(yyv2953) > 0
			yyv22953 := yyv2953
			yyrl2953, yyrt2953 = z.DecInferLen(yyl2953, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt2953 {
				if yyrl2953 <= cap(yyv2953) {
					yyv2953 = yyv2953[:yyrl2953]
				} else {
					yyv2953 = make([]*Task, yyrl2953)
				}
			} else {
				yyv2953 = make([]*Task, yyrl2953)
			}
			yyc2953 = true
			yyrr2953 = len(yyv2953)
			if yyrg2953 {
				copy(yyv2953, yyv22953)
			}
		} else if yyl2953 != len(yyv2953) {
			yyv2953 = yyv2953[:yyl2953]
			yyc2953 = true
		}
		yyj2953 := 0
		for ; yyj2953 < yyrr2953; yyj2953++ {
			yyh2953.ElemContainerState(yyj2953)
			if r.TryDecodeAsNil() {
				if yyv2953[yyj2953] != nil {
					*yyv2953[yyj2953] = Task{}
				}
			} else {
				if yyv2953[yyj2953] == nil {
					yyv2953[yyj2953] = new(Task)
				}
				yyw2954 := yyv2953[yyj2953]
				yyw2954.CodecDecodeSelf(d)
			}

		}
		if yyrt2953 {
			for ; yyj2953 < yyl2953; yyj2953++ {
				yyv2953 = append(yyv2953, nil)
				yyh2953.ElemContainerState(yyj2953)
				if r.TryDecodeAsNil() {
					if yyv2953[yyj2953] != nil {
						*yyv2953[yyj2953] = Task{}
					}
				} else {
					if yyv2953[yyj2953] == nil {
						yyv2953[yyj2953] = new(Task)
					}
					yyw2955 := yyv2953[yyj2953]
					yyw2955.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj2953 := 0
		for ; !r.CheckBreak(); yyj2953++ {

			if yyj2953 >= len(yyv2953) {
				yyv2953 = append(yyv2953, nil) // var yyz2953 *Task
				yyc2953 = true
			}
			yyh2953.ElemContainerState(yyj2953)
			if yyj2953 < len(yyv2953) {
				if r.TryDecodeAsNil() {
					if yyv2953[yyj2953] != nil {
						*yyv2953[yyj2953] = Task{}
					}
				} else {
					if yyv2953[yyj2953] == nil {
						yyv2953[yyj2953] = new(Task)
					}
					yyw2956 := yyv2953[yyj2953]
					yyw2956.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj2953 < len(yyv2953) {
			yyv2953 = yyv2953[:yyj2953]
			yyc2953 = true
		} else if yyj2953 == 0 && yyv2953 == nil {
			yyv2953 = []*Task{}
			yyc2953 = true
		}
	}
	yyh2953.End()
	if yyc2953 {
		*v = yyv2953
	}
}

func (x codecSelfer4362) encSlicePtrtoTaskEvent(v []*TaskEvent, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeArrayStart(len(v))
	for _, yyv2957 := range v {
		z.EncSendContainerState(codecSelfer_containerArrayElem4362)
		if yyv2957 == nil {
			r.EncodeNil()
		} else {
			yyv2957.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerArrayEnd4362)
}

func (x codecSelfer4362) decSlicePtrtoTaskEvent(v *[]*TaskEvent, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2958 := *v
	yyh2958, yyl2958 := z.DecSliceHelperStart()
	var yyc2958 bool
	if yyl2958 == 0 {
		if yyv2958 == nil {
			yyv2958 = []*TaskEvent{}
			yyc2958 = true
		} else if len(yyv2958) != 0 {
			yyv2958 = yyv2958[:0]
			yyc2958 = true
		}
	} else if yyl2958 > 0 {
		var yyrr2958, yyrl2958 int
		var yyrt2958 bool
		if yyl2958 > cap(yyv2958) {

			yyrg2958 := len(yyv2958) > 0
			yyv22958 := yyv2958
			yyrl2958, yyrt2958 = z.DecInferLen(yyl2958, z.DecBasicHandle().MaxInitLen, 8)
			if yyrt2958 {
				if yyrl2958 <= cap(yyv2958) {
					yyv2958 = yyv2958[:yyrl2958]
				} else {
					yyv2958 = make([]*TaskEvent, yyrl2958)
				}
			} else {
				yyv2958 = make([]*TaskEvent, yyrl2958)
			}
			yyc2958 = true
			yyrr2958 = len(yyv2958)
			if yyrg2958 {
				copy(yyv2958, yyv22958)
			}
		} else if yyl2958 != len(yyv2958) {
			yyv2958 = yyv2958[:yyl2958]
			yyc2958 = true
		}
		yyj2958 := 0
		for ; yyj2958 < yyrr2958; yyj2958++ {
			yyh2958.ElemContainerState(yyj2958)
			if r.TryDecodeAsNil() {
				if yyv2958[yyj2958] != nil {
					*yyv2958[yyj2958] = TaskEvent{}
				}
			} else {
				if yyv2958[yyj2958] == nil {
					yyv2958[yyj2958] = new(TaskEvent)
				}
				yyw2959 := yyv2958[yyj2958]
				yyw2959.CodecDecodeSelf(d)
			}

		}
		if yyrt2958 {
			for ; yyj2958 < yyl2958; yyj2958++ {
				yyv2958 = append(yyv2958, nil)
				yyh2958.ElemContainerState(yyj2958)
				if r.TryDecodeAsNil() {
					if yyv2958[yyj2958] != nil {
						*yyv2958[yyj2958] = TaskEvent{}
					}
				} else {
					if yyv2958[yyj2958] == nil {
						yyv2958[yyj2958] = new(TaskEvent)
					}
					yyw2960 := yyv2958[yyj2958]
					yyw2960.CodecDecodeSelf(d)
				}

			}
		}

	} else {
		yyj2958 := 0
		for ; !r.CheckBreak(); yyj2958++ {

			if yyj2958 >= len(yyv2958) {
				yyv2958 = append(yyv2958, nil) // var yyz2958 *TaskEvent
				yyc2958 = true
			}
			yyh2958.ElemContainerState(yyj2958)
			if yyj2958 < len(yyv2958) {
				if r.TryDecodeAsNil() {
					if yyv2958[yyj2958] != nil {
						*yyv2958[yyj2958] = TaskEvent{}
					}
				} else {
					if yyv2958[yyj2958] == nil {
						yyv2958[yyj2958] = new(TaskEvent)
					}
					yyw2961 := yyv2958[yyj2958]
					yyw2961.CodecDecodeSelf(d)
				}

			} else {
				z.DecSwallow()
			}

		}
		if yyj2958 < len(yyv2958) {
			yyv2958 = yyv2958[:yyj2958]
			yyc2958 = true
		} else if yyj2958 == 0 && yyv2958 == nil {
			yyv2958 = []*TaskEvent{}
			yyc2958 = true
		}
	}
	yyh2958.End()
	if yyc2958 {
		*v = yyv2958
	}
}

func (x codecSelfer4362) encMapstringPtrtoResources(v map[string]*Resources, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeMapStart(len(v))
	for yyk2962, yyv2962 := range v {
		z.EncSendContainerState(codecSelfer_containerMapKey4362)
		yym2963 := z.EncBinary()
		_ = yym2963
		if false {
		} else {
			r.EncodeString(codecSelferC_UTF84362, string(yyk2962))
		}
		z.EncSendContainerState(codecSelfer_containerMapValue4362)
		if yyv2962 == nil {
			r.EncodeNil()
		} else {
			yyv2962.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x codecSelfer4362) decMapstringPtrtoResources(v *map[string]*Resources, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2964 := *v
	yyl2964 := r.ReadMapStart()
	yybh2964 := z.DecBasicHandle()
	if yyv2964 == nil {
		yyrl2964, _ := z.DecInferLen(yyl2964, yybh2964.MaxInitLen, 24)
		yyv2964 = make(map[string]*Resources, yyrl2964)
		*v = yyv2964
	}
	var yymk2964 string
	var yymv2964 *Resources
	var yymg2964, yyms2964, yymok2964 bool
	if yybh2964.MapValueReset {
		yymg2964 = true
	}
	if yyl2964 > 0 {
		for yyj2964 := 0; yyj2964 < yyl2964; yyj2964++ {
			z.DecSendContainerState(codecSelfer_containerMapKey4362)
			if r.TryDecodeAsNil() {
				yymk2964 = ""
			} else {
				yymk2964 = string(r.DecodeString())
			}

			yyms2964 = true
			if yymg2964 {
				yymv2964, yymok2964 = yyv2964[yymk2964]
				if yymok2964 {
					yyms2964 = false
				}
			} else {
				yymv2964 = nil
			}
			z.DecSendContainerState(codecSelfer_containerMapValue4362)
			if r.TryDecodeAsNil() {
				if yymv2964 != nil {
					*yymv2964 = Resources{}
				}
			} else {
				if yymv2964 == nil {
					yymv2964 = new(Resources)
				}
				yymv2964.CodecDecodeSelf(d)
			}

			if yyms2964 && yyv2964 != nil {
				yyv2964[yymk2964] = yymv2964
			}
		}
	} else if yyl2964 < 0 {
		for yyj2964 := 0; !r.CheckBreak(); yyj2964++ {
			z.DecSendContainerState(codecSelfer_containerMapKey4362)
			if r.TryDecodeAsNil() {
				yymk2964 = ""
			} else {
				yymk2964 = string(r.DecodeString())
			}

			yyms2964 = true
			if yymg2964 {
				yymv2964, yymok2964 = yyv2964[yymk2964]
				if yymok2964 {
					yyms2964 = false
				}
			} else {
				yymv2964 = nil
			}
			z.DecSendContainerState(codecSelfer_containerMapValue4362)
			if r.TryDecodeAsNil() {
				if yymv2964 != nil {
					*yymv2964 = Resources{}
				}
			} else {
				if yymv2964 == nil {
					yymv2964 = new(Resources)
				}
				yymv2964.CodecDecodeSelf(d)
			}

			if yyms2964 && yyv2964 != nil {
				yyv2964[yymk2964] = yymv2964
			}
		}
	} // else len==0: TODO: Should we clear map entries?
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x codecSelfer4362) encMapstringPtrtoTaskState(v map[string]*TaskState, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeMapStart(len(v))
	for yyk2969, yyv2969 := range v {
		z.EncSendContainerState(codecSelfer_containerMapKey4362)
		yym2970 := z.EncBinary()
		_ = yym2970
		if false {
		} else {
			r.EncodeString(codecSelferC_UTF84362, string(yyk2969))
		}
		z.EncSendContainerState(codecSelfer_containerMapValue4362)
		if yyv2969 == nil {
			r.EncodeNil()
		} else {
			yyv2969.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x codecSelfer4362) decMapstringPtrtoTaskState(v *map[string]*TaskState, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2971 := *v
	yyl2971 := r.ReadMapStart()
	yybh2971 := z.DecBasicHandle()
	if yyv2971 == nil {
		yyrl2971, _ := z.DecInferLen(yyl2971, yybh2971.MaxInitLen, 24)
		yyv2971 = make(map[string]*TaskState, yyrl2971)
		*v = yyv2971
	}
	var yymk2971 string
	var yymv2971 *TaskState
	var yymg2971, yyms2971, yymok2971 bool
	if yybh2971.MapValueReset {
		yymg2971 = true
	}
	if yyl2971 > 0 {
		for yyj2971 := 0; yyj2971 < yyl2971; yyj2971++ {
			z.DecSendContainerState(codecSelfer_containerMapKey4362)
			if r.TryDecodeAsNil() {
				yymk2971 = ""
			} else {
				yymk2971 = string(r.DecodeString())
			}

			yyms2971 = true
			if yymg2971 {
				yymv2971, yymok2971 = yyv2971[yymk2971]
				if yymok2971 {
					yyms2971 = false
				}
			} else {
				yymv2971 = nil
			}
			z.DecSendContainerState(codecSelfer_containerMapValue4362)
			if r.TryDecodeAsNil() {
				if yymv2971 != nil {
					*yymv2971 = TaskState{}
				}
			} else {
				if yymv2971 == nil {
					yymv2971 = new(TaskState)
				}
				yymv2971.CodecDecodeSelf(d)
			}

			if yyms2971 && yyv2971 != nil {
				yyv2971[yymk2971] = yymv2971
			}
		}
	} else if yyl2971 < 0 {
		for yyj2971 := 0; !r.CheckBreak(); yyj2971++ {
			z.DecSendContainerState(codecSelfer_containerMapKey4362)
			if r.TryDecodeAsNil() {
				yymk2971 = ""
			} else {
				yymk2971 = string(r.DecodeString())
			}

			yyms2971 = true
			if yymg2971 {
				yymv2971, yymok2971 = yyv2971[yymk2971]
				if yymok2971 {
					yyms2971 = false
				}
			} else {
				yymv2971 = nil
			}
			z.DecSendContainerState(codecSelfer_containerMapValue4362)
			if r.TryDecodeAsNil() {
				if yymv2971 != nil {
					*yymv2971 = TaskState{}
				}
			} else {
				if yymv2971 == nil {
					yymv2971 = new(TaskState)
				}
				yymv2971.CodecDecodeSelf(d)
			}

			if yyms2971 && yyv2971 != nil {
				yyv2971[yymk2971] = yymv2971
			}
		}
	} // else len==0: TODO: Should we clear map entries?
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x codecSelfer4362) encMapstringSlicePtrtoAllocation(v map[string][]*Allocation, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeMapStart(len(v))
	for yyk2976, yyv2976 := range v {
		z.EncSendContainerState(codecSelfer_containerMapKey4362)
		yym2977 := z.EncBinary()
		_ = yym2977
		if false {
		} else {
			r.EncodeString(codecSelferC_UTF84362, string(yyk2976))
		}
		z.EncSendContainerState(codecSelfer_containerMapValue4362)
		if yyv2976 == nil {
			r.EncodeNil()
		} else {
			yym2978 := z.EncBinary()
			_ = yym2978
			if false {
			} else {
				h.encSlicePtrtoAllocation(([]*Allocation)(yyv2976), e)
			}
		}
	}
	z.EncSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x codecSelfer4362) decMapstringSlicePtrtoAllocation(v *map[string][]*Allocation, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2979 := *v
	yyl2979 := r.ReadMapStart()
	yybh2979 := z.DecBasicHandle()
	if yyv2979 == nil {
		yyrl2979, _ := z.DecInferLen(yyl2979, yybh2979.MaxInitLen, 40)
		yyv2979 = make(map[string][]*Allocation, yyrl2979)
		*v = yyv2979
	}
	var yymk2979 string
	var yymv2979 []*Allocation
	var yymg2979 bool
	if yybh2979.MapValueReset {
		yymg2979 = true
	}
	if yyl2979 > 0 {
		for yyj2979 := 0; yyj2979 < yyl2979; yyj2979++ {
			z.DecSendContainerState(codecSelfer_containerMapKey4362)
			if r.TryDecodeAsNil() {
				yymk2979 = ""
			} else {
				yymk2979 = string(r.DecodeString())
			}

			if yymg2979 {
				yymv2979 = yyv2979[yymk2979]
			} else {
				yymv2979 = nil
			}
			z.DecSendContainerState(codecSelfer_containerMapValue4362)
			if r.TryDecodeAsNil() {
				yymv2979 = nil
			} else {
				yyv2981 := &yymv2979
				yym2982 := z.DecBinary()
				_ = yym2982
				if false {
				} else {
					h.decSlicePtrtoAllocation((*[]*Allocation)(yyv2981), d)
				}
			}

			if yyv2979 != nil {
				yyv2979[yymk2979] = yymv2979
			}
		}
	} else if yyl2979 < 0 {
		for yyj2979 := 0; !r.CheckBreak(); yyj2979++ {
			z.DecSendContainerState(codecSelfer_containerMapKey4362)
			if r.TryDecodeAsNil() {
				yymk2979 = ""
			} else {
				yymk2979 = string(r.DecodeString())
			}

			if yymg2979 {
				yymv2979 = yyv2979[yymk2979]
			} else {
				yymv2979 = nil
			}
			z.DecSendContainerState(codecSelfer_containerMapValue4362)
			if r.TryDecodeAsNil() {
				yymv2979 = nil
			} else {
				yyv2984 := &yymv2979
				yym2985 := z.DecBinary()
				_ = yym2985
				if false {
				} else {
					h.decSlicePtrtoAllocation((*[]*Allocation)(yyv2984), d)
				}
			}

			if yyv2979 != nil {
				yyv2979[yymk2979] = yymv2979
			}
		}
	} // else len==0: TODO: Should we clear map entries?
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x codecSelfer4362) encMapstringPtrtoDesiredUpdates(v map[string]*DesiredUpdates, e *codec1978.Encoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperEncoder(e)
	_, _, _ = h, z, r
	r.EncodeMapStart(len(v))
	for yyk2986, yyv2986 := range v {
		z.EncSendContainerState(codecSelfer_containerMapKey4362)
		yym2987 := z.EncBinary()
		_ = yym2987
		if false {
		} else {
			r.EncodeString(codecSelferC_UTF84362, string(yyk2986))
		}
		z.EncSendContainerState(codecSelfer_containerMapValue4362)
		if yyv2986 == nil {
			r.EncodeNil()
		} else {
			yyv2986.CodecEncodeSelf(e)
		}
	}
	z.EncSendContainerState(codecSelfer_containerMapEnd4362)
}

func (x codecSelfer4362) decMapstringPtrtoDesiredUpdates(v *map[string]*DesiredUpdates, d *codec1978.Decoder) {
	var h codecSelfer4362
	z, r := codec1978.GenHelperDecoder(d)
	_, _, _ = h, z, r

	yyv2988 := *v
	yyl2988 := r.ReadMapStart()
	yybh2988 := z.DecBasicHandle()
	if yyv2988 == nil {
		yyrl2988, _ := z.DecInferLen(yyl2988, yybh2988.MaxInitLen, 24)
		yyv2988 = make(map[string]*DesiredUpdates, yyrl2988)
		*v = yyv2988
	}
	var yymk2988 string
	var yymv2988 *DesiredUpdates
	var yymg2988, yyms2988, yymok2988 bool
	if yybh2988.MapValueReset {
		yymg2988 = true
	}
	if yyl2988 > 0 {
		for yyj2988 := 0; yyj2988 < yyl2988; yyj2988++ {
			z.DecSendContainerState(codecSelfer_containerMapKey4362)
			if r.TryDecodeAsNil() {
				yymk2988 = ""
			} else {
				yymk2988 = string(r.DecodeString())
			}

			yyms2988 = true
			if yymg2988 {
				yymv2988, yymok2988 = yyv2988[yymk2988]
				if yymok2988 {
					yyms2988 = false
				}
			} else {
				yymv2988 = nil
			}
			z.DecSendContainerState(codecSelfer_containerMapValue4362)
			if r.TryDecodeAsNil() {
				if yymv2988 != nil {
					*yymv2988 = DesiredUpdates{}
				}
			} else {
				if yymv2988 == nil {
					yymv2988 = new(DesiredUpdates)
				}
				yymv2988.CodecDecodeSelf(d)
			}

			if yyms2988 && yyv2988 != nil {
				yyv2988[yymk2988] = yymv2988
			}
		}
	} else if yyl2988 < 0 {
		for yyj2988 := 0; !r.CheckBreak(); yyj2988++ {
			z.DecSendContainerState(codecSelfer_containerMapKey4362)
			if r.TryDecodeAsNil() {
				yymk2988 = ""
			} else {
				yymk2988 = string(r.DecodeString())
			}

			yyms2988 = true
			if yymg2988 {
				yymv2988, yymok2988 = yyv2988[yymk2988]
				if yymok2988 {
					yyms2988 = false
				}
			} else {
				yymv2988 = nil
			}
			z.DecSendContainerState(codecSelfer_containerMapValue4362)
			if r.TryDecodeAsNil() {
				if yymv2988 != nil {
					*yymv2988 = DesiredUpdates{}
				}
			} else {
				if yymv2988 == nil {
					yymv2988 = new(DesiredUpdates)
				}
				yymv2988.CodecDecodeSelf(d)
			}

			if yyms2988 && yyv2988 != nil {
				yyv2988[yymk2988] = yymv2988
			}
		}
	} // else len==0: TODO: Should we clear map entries?
	z.DecSendContainerState(codecSelfer_containerMapEnd4362)
}
